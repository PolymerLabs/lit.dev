[
  {
    "slug": "LitElement",
    "title": "LitElement",
    "items": [
      {
        "id": 709,
        "name": "LitElement",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "Base element class that manages element properties and attributes, and\nrenders a lit-html template.",
          "text": "To define a component, subclass `LitElement` and implement a\n`render` method to provide the component's template. Define properties\nusing the [`properties`](/docs/api/LitElement/#LitElement.properties) property or the [`property`](/docs/api/decorators/#property) decorator.\n"
        },
        "children": [
          {
            "id": 757,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 758,
                "name": "new LitElement",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 709,
                  "name": "LitElement",
                  "location": {
                    "page": "LitElement",
                    "anchor": "LitElement"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1700,
                  "name": "ReactiveElement.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1699,
              "name": "ReactiveElement.constructor",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.constructor"
            }
          },
          {
            "id": 774,
            "name": "hasUpdated",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 718,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L718",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 1705,
              "name": "ReactiveElement.hasUpdated",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.hasUpdated"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.hasUpdated"
            }
          },
          {
            "id": 773,
            "name": "isUpdatePending",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 713,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L713",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 1704,
              "name": "ReactiveElement.isUpdatePending",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.isUpdatePending"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.isUpdatePending"
            }
          },
          {
            "id": 759,
            "name": "renderOptions",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "comment": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-element/src/lit-element.ts",
                "line": 102,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L102",
                "moduleSpecifier": "lit-element/lit-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 2586,
              "name": "RenderOptions",
              "location": {
                "page": "LitElement",
                "anchor": "RenderOptions"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.renderOptions"
            }
          },
          {
            "id": 772,
            "name": "renderRoot",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "comment": {
              "shortText": "Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 685,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L685",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "HTMLElement",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                  }
                },
                {
                  "type": "reference",
                  "name": "ShadowRoot",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                  }
                }
              ]
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 1701,
              "name": "ReactiveElement.renderRoot",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.renderRoot"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.renderRoot"
            }
          },
          {
            "id": 717,
            "name": "disableWarning",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Disable the given warning kind for this class.",
              "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 353,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L353",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 718,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 719,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Disable the given warning kind for this class.",
                      "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "category",
                          "text": "dev-mode\n"
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 720,
                        "name": "warningKind",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 1645,
                          "name": "WarningKind",
                          "location": {
                            "page": "misc",
                            "anchor": "WarningKind"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 1656,
              "name": "ReactiveElement.disableWarning",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.disableWarning"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.disableWarning"
            }
          },
          {
            "id": 725,
            "name": "elementProperties",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Memoized list of all element properties, including any superclass properties.\nCreated lazily on user subclasses when finalizing the class.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 390,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L390",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "PropertyDeclarationMap"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 1665,
              "name": "ReactiveElement.elementProperties",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.elementProperties"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.elementProperties"
            }
          },
          {
            "id": 727,
            "name": "elementStyles",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Memoized list of all element styles.\nCreated lazily on user subclasses when finalizing the class.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 425,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L425",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "id": 2526,
                "name": "CSSResultOrNative",
                "location": {
                  "page": "styles",
                  "anchor": "CSSResultOrNative"
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 1667,
              "name": "ReactiveElement.elementStyles",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.elementStyles"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.elementStyles"
            }
          },
          {
            "id": 713,
            "name": "enableWarning",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Enable the given warning kind for this class.",
              "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 334,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L334",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 714,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 715,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Enable the given warning kind for this class.",
                      "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "category",
                          "text": "dev-mode\n"
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 716,
                        "name": "warningKind",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 1645,
                          "name": "WarningKind",
                          "location": {
                            "page": "misc",
                            "anchor": "WarningKind"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 1652,
              "name": "ReactiveElement.enableWarning",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.enableWarning"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.enableWarning"
            }
          },
          {
            "id": 712,
            "name": "enabledWarnings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Read or set all the enabled warning kinds for this class.",
              "text": "This property is only used in development builds.\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 315,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L315",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "id": 1645,
                "name": "WarningKind",
                "location": {
                  "page": "misc",
                  "anchor": "WarningKind"
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 1651,
              "name": "ReactiveElement.enabledWarnings",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.enabledWarnings"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.enabledWarnings"
            }
          },
          {
            "id": 710,
            "name": "finalized",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Ensure this class is marked as `finalized` as an optimization ensuring\nit will not needlessly try to `finalize`.",
              "text": "Note this property name is a string to prevent breaking Closure JS Compiler\noptimizations. See @lit/reactive-element for more information.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-element/src/lit-element.ts",
                "line": 94,
                "character": 28,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L94",
                "moduleSpecifier": "lit-element/lit-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "overwrites": {
              "type": "reference",
              "id": 1698,
              "name": "ReactiveElement.finalized",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.finalized"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.finalized"
            }
          },
          {
            "id": 726,
            "name": "properties",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "User-supplied object that maps property names to `PropertyDeclaration`\nobjects containing options for configuring reactive properties. When\na reactive property is set the element will update and render.",
              "text": "By default properties are public fields, and as such, they should be\nconsidered as primarily settable by element users, either via attribute or\nthe property itself.\n\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state: true` option. Properties\nmarked as `state` do not reflect from the corresponding attribute\n\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating\npublic properties should typically not be done for non-primitive (object or\narray) properties. In other cases when an element needs to manage state, a\nprivate property set with the `state: true` option should be used. When\nneeded, state properties can be initialized via public properties to\nfacilitate complex interactions.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 417,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L417",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 1631,
              "name": "PropertyDeclarations",
              "location": {
                "page": "ReactiveElement",
                "anchor": "PropertyDeclarations"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 1666,
              "name": "ReactiveElement.properties",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.properties"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.properties"
            }
          },
          {
            "id": 753,
            "name": "shadowRootOptions",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Options used when calling `attachShadow`. Set this property to customize\nthe options for the shadowRoot; for example, to create a closed\nshadowRoot: `{mode: 'closed'}`.",
              "text": "Note, these options are used in `createRenderRoot`. If this method\nis customized, options should be respected if possible.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 645,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L645",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "ShadowRootInit",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#parameters"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 1693,
              "name": "ReactiveElement.shadowRootOptions",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.shadowRootOptions"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.shadowRootOptions"
            }
          },
          {
            "id": 728,
            "name": "styles",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Array of styles to apply to the element. The styles should be defined\nusing the [`css`](/docs/api/styles/#css) tag function or via constructible stylesheets.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 433,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L433",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 2528,
              "name": "CSSResultGroup",
              "location": {
                "page": "styles",
                "anchor": "CSSResultGroup"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 1668,
              "name": "ReactiveElement.styles",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.styles"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.styles"
            }
          },
          {
            "id": 801,
            "name": "updateComplete",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
              "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
              "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1196,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1196",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              ],
              "name": "Promise"
            },
            "getSignature": [
              {
                "id": 802,
                "name": "updateComplete",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                  "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update.",
                  "tags": [
                    {
                      "tag": "category",
                      "text": "updates\n"
                    }
                  ]
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ],
                  "name": "Promise"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1745,
              "name": "ReactiveElement.updateComplete",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.updateComplete"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.updateComplete"
            }
          },
          {
            "id": 729,
            "name": "observedAttributes",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns a list of attributes corresponding to the registered properties.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 440,
                "character": 13,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L440",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            "getSignature": [
              {
                "id": 730,
                "name": "observedAttributes",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a list of attributes corresponding to the registered properties.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    },
                    {
                      "tag": "category",
                      "text": "attributes\n"
                    }
                  ]
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1669,
              "name": "ReactiveElement.observedAttributes",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.observedAttributes"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.observedAttributes"
            }
          },
          {
            "id": 775,
            "name": "addController",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 771,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L771",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 776,
                "name": "addController",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "parameters": [
                  {
                    "id": 777,
                    "name": "controller",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1588,
                      "name": "ReactiveController",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveController"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1710,
                  "name": "ReactiveElement.addController"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1709,
              "name": "ReactiveElement.addController",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.addController"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.addController"
            }
          },
          {
            "id": 784,
            "name": "attributeChangedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Synchronizes property values when attributes change."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 878,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L878",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 785,
                "name": "attributeChangedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Synchronizes property values when attributes change."
                },
                "parameters": [
                  {
                    "id": 786,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 787,
                    "name": "_old",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  },
                  {
                    "id": 788,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1726,
                  "name": "ReactiveElement.attributeChangedCallback"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1725,
              "name": "ReactiveElement.attributeChangedCallback",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.attributeChangedCallback"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.attributeChangedCallback"
            }
          },
          {
            "id": 766,
            "name": "connectedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-element/src/lit-element.ts",
                "line": 142,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L142",
                "moduleSpecifier": "lit-element/lit-element.js"
              }
            ],
            "signatures": [
              {
                "id": 767,
                "name": "connectedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 1719,
                  "name": "ReactiveElement.connectedCallback"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 1718,
              "name": "ReactiveElement.connectedCallback",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.connectedCallback"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.connectedCallback"
            }
          },
          {
            "id": 761,
            "name": "createRenderRoot",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-element/src/lit-element.ts",
                "line": 109,
                "character": 21,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L109",
                "moduleSpecifier": "lit-element/lit-element.js"
              }
            ],
            "signatures": [
              {
                "id": 762,
                "name": "createRenderRoot",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "ShadowRoot",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 1717,
                  "name": "ReactiveElement.createRenderRoot"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 1716,
              "name": "ReactiveElement.createRenderRoot",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.createRenderRoot"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.createRenderRoot"
            }
          },
          {
            "id": 768,
            "name": "disconnectedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-element/src/lit-element.ts",
                "line": 150,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L150",
                "moduleSpecifier": "lit-element/lit-element.js"
              }
            ],
            "signatures": [
              {
                "id": 769,
                "name": "disconnectedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 1724,
                  "name": "ReactiveElement.disconnectedCallback"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 1723,
              "name": "ReactiveElement.disconnectedCallback",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.disconnectedCallback"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.disconnectedCallback"
            }
          },
          {
            "id": 781,
            "name": "enableUpdating",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 862,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L862",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 782,
                "name": "enableUpdating",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
                },
                "parameters": [
                  {
                    "id": 783,
                    "name": "_requestedUpdate",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1721,
                  "name": "ReactiveElement.enableUpdating"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1720,
              "name": "ReactiveElement.enableUpdating",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.enableUpdating"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.enableUpdating"
            }
          },
          {
            "id": 811,
            "name": "firstUpdated",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
              "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1282,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1282",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 812,
                "name": "firstUpdated",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "parameters": [
                  {
                    "id": 813,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1759,
                  "name": "ReactiveElement.firstUpdated"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1758,
              "name": "ReactiveElement.firstUpdated",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.firstUpdated"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.firstUpdated"
            }
          },
          {
            "id": 803,
            "name": "getUpdateComplete",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Override point for the `updateComplete` promise.",
              "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
              "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1223,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1223",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 804,
                "name": "getUpdateComplete",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Override point for the `updateComplete` promise.",
                  "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ],
                  "name": "Promise"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1748,
                  "name": "ReactiveElement.getUpdateComplete"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1747,
              "name": "ReactiveElement.getUpdateComplete",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.getUpdateComplete"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.getUpdateComplete"
            }
          },
          {
            "id": 796,
            "name": "performUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
              "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1078,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1078",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 797,
                "name": "performUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                  "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Promise"
                    }
                  ]
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1740,
                  "name": "ReactiveElement.performUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1739,
              "name": "ReactiveElement.performUpdate",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.performUpdate"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.performUpdate"
            }
          },
          {
            "id": 778,
            "name": "removeController",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 785,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L785",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 779,
                "name": "removeController",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "parameters": [
                  {
                    "id": 780,
                    "name": "controller",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1588,
                      "name": "ReactiveController",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveController"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1713,
                  "name": "ReactiveElement.removeController"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1712,
              "name": "ReactiveElement.removeController",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.removeController"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.removeController"
            }
          },
          {
            "id": 770,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Invoked on each update to perform rendering tasks. This method may return\nany value renderable by lit-html's `ChildPart` - typically a\n`TemplateResult`. Setting properties inside this method will *not* trigger\nthe element to update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-element/src/lit-element.ts",
                "line": 162,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L162",
                "moduleSpecifier": "lit-element/lit-element.js"
              }
            ],
            "signatures": [
              {
                "id": 771,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Invoked on each update to perform rendering tasks. This method may return\nany value renderable by lit-html's `ChildPart` - typically a\n`TemplateResult`. Setting properties inside this method will *not* trigger\nthe element to update."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.render"
            }
          },
          {
            "id": 789,
            "name": "requestUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 973,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L973",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 790,
                "name": "requestUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
                },
                "parameters": [
                  {
                    "id": 791,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "name of requesting property"
                    },
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 792,
                    "name": "oldValue",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "old value of requesting property"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  },
                  {
                    "id": 793,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "property options to use instead of the previously\n    configured options"
                    },
                    "type": {
                      "type": "reference",
                      "id": 1618,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1732,
                  "name": "ReactiveElement.requestUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1731,
              "name": "ReactiveElement.requestUpdate",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.requestUpdate"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.requestUpdate"
            }
          },
          {
            "id": 794,
            "name": "scheduleUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
              "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1057,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1057",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 795,
                "name": "scheduleUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
                  "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Promise"
                    }
                  ]
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1738,
                  "name": "ReactiveElement.scheduleUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1737,
              "name": "ReactiveElement.scheduleUpdate",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.scheduleUpdate"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.scheduleUpdate"
            }
          },
          {
            "id": 805,
            "name": "shouldUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1235,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1235",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 806,
                "name": "shouldUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                },
                "parameters": [
                  {
                    "id": 807,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1750,
                  "name": "ReactiveElement.shouldUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1749,
              "name": "ReactiveElement.shouldUpdate",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.shouldUpdate"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.shouldUpdate"
            }
          },
          {
            "id": 763,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-element/src/lit-element.ts",
                "line": 127,
                "character": 21,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L127",
                "moduleSpecifier": "lit-element/lit-element.js"
              }
            ],
            "signatures": [
              {
                "id": 764,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update."
                },
                "parameters": [
                  {
                    "id": 765,
                    "name": "changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 1753,
                  "name": "ReactiveElement.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 1752,
              "name": "ReactiveElement.update",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.update"
            }
          },
          {
            "id": 808,
            "name": "updated",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
              "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1270,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1270",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 809,
                "name": "updated",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "parameters": [
                  {
                    "id": 810,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1756,
                  "name": "ReactiveElement.updated"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1755,
              "name": "ReactiveElement.updated",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.updated"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.updated"
            }
          },
          {
            "id": 798,
            "name": "willUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1146,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1146",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 799,
                "name": "willUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "parameters": [
                  {
                    "id": 800,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1742,
                  "name": "ReactiveElement.willUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1741,
              "name": "ReactiveElement.willUpdate",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.willUpdate"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.willUpdate"
            }
          },
          {
            "id": 721,
            "name": "addInitializer",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isStatic": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 358,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L358",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 722,
                "name": "addInitializer",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 723,
                    "name": "initializer",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1646,
                      "name": "Initializer",
                      "location": {
                        "page": "misc",
                        "anchor": "Initializer"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1661,
                  "name": "ReactiveElement.addInitializer"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1660,
              "name": "ReactiveElement.addInitializer",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.addInitializer"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.addInitializer"
            }
          },
          {
            "id": 731,
            "name": "createProperty",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
              "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 481,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L481",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 732,
                "name": "createProperty",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
                  "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 733,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 734,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "id": 1618,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1672,
                  "name": "ReactiveElement.createProperty"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1671,
              "name": "ReactiveElement.createProperty",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.createProperty"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.createProperty"
            }
          },
          {
            "id": 751,
            "name": "finalize",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 585,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L585",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 752,
                "name": "finalize",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1692,
                  "name": "ReactiveElement.finalize"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1691,
              "name": "ReactiveElement.finalize",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.finalize"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.finalize"
            }
          },
          {
            "id": 754,
            "name": "finalizeStyles",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
              "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 661,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L661",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 755,
                "name": "finalizeStyles",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
                  "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 756,
                    "name": "styles",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "id": 2528,
                      "name": "CSSResultGroup",
                      "location": {
                        "page": "styles",
                        "anchor": "CSSResultGroup"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 2526,
                    "name": "CSSResultOrNative",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultOrNative"
                    }
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1695,
                  "name": "ReactiveElement.finalizeStyles"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1694,
              "name": "ReactiveElement.finalizeStyles",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.finalizeStyles"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.finalizeStyles"
            }
          },
          {
            "id": 735,
            "name": "getPropertyDescriptor",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
              "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 536,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L536",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 736,
                "name": "getPropertyDescriptor",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                  "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 737,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 738,
                    "name": "key",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "symbol"
                        }
                      ]
                    }
                  },
                  {
                    "id": 739,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1618,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 740,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 746,
                        "name": "configurable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                            "line": 309,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 747,
                        "name": "enumerable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                            "line": 310,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 741,
                        "name": "get",
                        "kind": 2048,
                        "kindString": "Method",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 742,
                            "name": "get",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        ]
                      },
                      {
                        "id": 743,
                        "name": "set",
                        "kind": 2048,
                        "kindString": "Method",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 744,
                            "name": "set",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 745,
                                "name": "value",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                          746,
                          747
                        ]
                      },
                      {
                        "title": "Methods",
                        "kind": 2048,
                        "children": [
                          741,
                          743
                        ]
                      }
                    ]
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1676,
                  "name": "ReactiveElement.getPropertyDescriptor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1675,
              "name": "ReactiveElement.getPropertyDescriptor",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.getPropertyDescriptor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.getPropertyDescriptor"
            }
          },
          {
            "id": 748,
            "name": "getPropertyOptions",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
              "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                },
                {
                  "tag": "final",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 575,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L575",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 749,
                "name": "getPropertyOptions",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                  "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    },
                    {
                      "tag": "final",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 750,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 1618,
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "PropertyDeclaration",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "PropertyDeclaration"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1689,
                  "name": "ReactiveElement.getPropertyOptions"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1688,
              "name": "ReactiveElement.getPropertyOptions",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.getPropertyOptions"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.getPropertyOptions"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              757
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              1096,
              1097,
              1098,
              1099,
              1100,
              1101,
              1102,
              1103,
              1104,
              1105,
              1106,
              1107,
              1108,
              1109,
              1110,
              1111,
              1112,
              1113,
              760,
              814,
              815,
              1117,
              1118,
              1119,
              1120,
              1121,
              1122,
              1123,
              1124,
              1125,
              1126,
              1127,
              1128,
              1129,
              1130,
              1131,
              1132,
              1133,
              1134,
              1135,
              1136,
              1137,
              1138,
              1139,
              1140,
              1141,
              1142,
              1143,
              1144,
              1145,
              1146,
              1147,
              1148,
              1149,
              1150,
              1151,
              1152,
              1207,
              859,
              816,
              1034,
              1174,
              1035,
              1175,
              860,
              861,
              862,
              863,
              864,
              865,
              1221,
              1570,
              817,
              818,
              1222,
              1036,
              1176,
              774,
              819,
              866,
              1171,
              820,
              1223,
              1037,
              1224,
              773,
              821,
              1038,
              1177,
              867,
              868,
              1172,
              1039,
              1040,
              1041,
              1042,
              1571,
              822,
              823,
              824,
              825,
              826,
              1225,
              1229,
              1233,
              1237,
              1241,
              1245,
              1249,
              1253,
              1257,
              1261,
              1265,
              1269,
              1273,
              1208,
              1277,
              1212,
              1281,
              1285,
              1289,
              1293,
              1297,
              1301,
              1305,
              1309,
              1313,
              1317,
              1321,
              1325,
              1326,
              1330,
              869,
              873,
              1334,
              1338,
              1342,
              1346,
              1350,
              1354,
              1358,
              1362,
              1366,
              1370,
              1374,
              1378,
              1382,
              1386,
              1390,
              1394,
              1398,
              1402,
              1216,
              1406,
              1410,
              1414,
              1418,
              1422,
              1426,
              1430,
              1434,
              1438,
              1442,
              1446,
              1450,
              1454,
              1458,
              1462,
              1466,
              1470,
              1474,
              1478,
              1482,
              1486,
              1490,
              1494,
              1498,
              1502,
              1506,
              1510,
              1514,
              1518,
              1522,
              1526,
              1530,
              1534,
              1538,
              1542,
              1546,
              1550,
              1554,
              1558,
              1562,
              1566,
              877,
              827,
              878,
              1043,
              1044,
              879,
              880,
              1173,
              1045,
              759,
              772,
              881,
              882,
              883,
              884,
              885,
              886,
              828,
              1220,
              1572,
              887,
              1046,
              829,
              830,
              711,
              724,
              717,
              725,
              727,
              713,
              712,
              710,
              726,
              753,
              728
            ],
            "categories": [
              {
                "title": "Other",
                "children": [
                  1096,
                  1097,
                  1098,
                  1099,
                  1100,
                  1101,
                  1102,
                  1103,
                  1104,
                  1105,
                  1106,
                  1107,
                  1108,
                  1109,
                  1110,
                  1111,
                  1112,
                  1113,
                  760,
                  814,
                  815,
                  1117,
                  1118,
                  1119,
                  1120,
                  1121,
                  1122,
                  1123,
                  1124,
                  1125,
                  1126,
                  1127,
                  1128,
                  1129,
                  1130,
                  1131,
                  1132,
                  1133,
                  1134,
                  1135,
                  1136,
                  1137,
                  1138,
                  1139,
                  1140,
                  1141,
                  1142,
                  1143,
                  1144,
                  1145,
                  1146,
                  1147,
                  1148,
                  1149,
                  1150,
                  1151,
                  1152,
                  1207,
                  859,
                  816,
                  1034,
                  1174,
                  1035,
                  1175,
                  860,
                  861,
                  862,
                  863,
                  864,
                  865,
                  1221,
                  1570,
                  817,
                  818,
                  1222,
                  1036,
                  1176,
                  819,
                  866,
                  1171,
                  820,
                  1223,
                  1037,
                  1224,
                  821,
                  1038,
                  1177,
                  867,
                  868,
                  1172,
                  1039,
                  1040,
                  1041,
                  1042,
                  1571,
                  822,
                  823,
                  824,
                  825,
                  826,
                  1225,
                  1229,
                  1233,
                  1237,
                  1241,
                  1245,
                  1249,
                  1253,
                  1257,
                  1261,
                  1265,
                  1269,
                  1273,
                  1208,
                  1277,
                  1212,
                  1281,
                  1285,
                  1289,
                  1293,
                  1297,
                  1301,
                  1305,
                  1309,
                  1313,
                  1317,
                  1321,
                  1325,
                  1326,
                  1330,
                  869,
                  873,
                  1334,
                  1338,
                  1342,
                  1346,
                  1350,
                  1354,
                  1358,
                  1362,
                  1366,
                  1370,
                  1374,
                  1378,
                  1382,
                  1386,
                  1390,
                  1394,
                  1398,
                  1402,
                  1216,
                  1406,
                  1410,
                  1414,
                  1418,
                  1422,
                  1426,
                  1430,
                  1434,
                  1438,
                  1442,
                  1446,
                  1450,
                  1454,
                  1458,
                  1462,
                  1466,
                  1470,
                  1474,
                  1478,
                  1482,
                  1486,
                  1490,
                  1494,
                  1498,
                  1502,
                  1506,
                  1510,
                  1514,
                  1518,
                  1522,
                  1526,
                  1530,
                  1534,
                  1538,
                  1542,
                  1546,
                  1550,
                  1554,
                  1558,
                  1562,
                  1566,
                  877,
                  827,
                  878,
                  1043,
                  1044,
                  879,
                  880,
                  1173,
                  1045,
                  881,
                  882,
                  883,
                  884,
                  885,
                  886,
                  828,
                  1220,
                  1572,
                  887,
                  1046,
                  829,
                  830,
                  711,
                  724,
                  710
                ]
              },
              {
                "title": "dev-mode",
                "children": [
                  717,
                  713,
                  712
                ]
              },
              {
                "title": "properties",
                "children": [
                  725,
                  726
                ]
              },
              {
                "title": "rendering",
                "children": [
                  759,
                  772,
                  753
                ]
              },
              {
                "title": "styles",
                "children": [
                  727,
                  728
                ]
              },
              {
                "title": "updates",
                "children": [
                  774,
                  773
                ]
              }
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              801,
              729
            ],
            "categories": [
              {
                "title": "attributes",
                "children": [
                  729
                ]
              },
              {
                "title": "updates",
                "children": [
                  801
                ]
              }
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              775,
              833,
              1160,
              1153,
              1178,
              1047,
              888,
              784,
              1163,
              1573,
              831,
              1051,
              891,
              1054,
              766,
              1057,
              761,
              768,
              1114,
              781,
              811,
              1575,
              1157,
              901,
              904,
              908,
              910,
              913,
              917,
              919,
              921,
              924,
              933,
              1060,
              803,
              943,
              946,
              950,
              1063,
              952,
              955,
              959,
              963,
              1065,
              1070,
              1073,
              1076,
              1079,
              1082,
              967,
              1085,
              796,
              1181,
              1184,
              1194,
              970,
              1166,
              973,
              976,
              980,
              1087,
              778,
              846,
              770,
              1091,
              1204,
              1168,
              983,
              986,
              789,
              794,
              988,
              994,
              1000,
              1003,
              1009,
              1013,
              1018,
              1021,
              1024,
              805,
              1027,
              763,
              808,
              1031,
              798,
              721,
              731,
              751,
              754,
              735,
              748
            ],
            "categories": [
              {
                "title": "Other",
                "children": [
                  833,
                  1160,
                  1153,
                  1178,
                  1047,
                  888,
                  1163,
                  1573,
                  831,
                  1051,
                  891,
                  1054,
                  1057,
                  1114,
                  1575,
                  1157,
                  901,
                  904,
                  908,
                  910,
                  913,
                  917,
                  919,
                  921,
                  924,
                  933,
                  1060,
                  943,
                  946,
                  950,
                  1063,
                  952,
                  955,
                  959,
                  963,
                  1065,
                  1070,
                  1073,
                  1076,
                  1079,
                  1082,
                  967,
                  1085,
                  1181,
                  1184,
                  1194,
                  970,
                  1166,
                  973,
                  976,
                  980,
                  1087,
                  846,
                  1091,
                  1204,
                  1168,
                  983,
                  986,
                  988,
                  994,
                  1000,
                  1003,
                  1009,
                  1013,
                  1018,
                  1021,
                  1024,
                  1027,
                  1031,
                  721,
                  751
                ]
              },
              {
                "title": "attributes",
                "children": [
                  784
                ]
              },
              {
                "title": "controllers",
                "children": [
                  775,
                  778
                ]
              },
              {
                "title": "lifecycle",
                "children": [
                  766,
                  768
                ]
              },
              {
                "title": "properties",
                "children": [
                  731,
                  735,
                  748
                ]
              },
              {
                "title": "rendering",
                "children": [
                  761,
                  770
                ]
              },
              {
                "title": "styles",
                "children": [
                  754
                ]
              },
              {
                "title": "updates",
                "children": [
                  781,
                  811,
                  803,
                  796,
                  789,
                  794,
                  805,
                  763,
                  808,
                  798
                ]
              }
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-element/src/lit-element.ts",
            "line": 86,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L86",
            "moduleSpecifier": "lit-element/lit-element.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 1650,
            "name": "ReactiveElement",
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "LitElement",
          "anchor": "LitElement"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 1650,
            "name": "ReactiveElement",
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement"
            }
          },
          {
            "type": "reference",
            "name": "HTMLElement",
            "externalLocation": {
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
            }
          }
        ],
        "expandedCategories": [
          {
            "anchor": "LitElement/attributes",
            "title": "Attributes",
            "children": [
              {
                "id": 784,
                "name": "attributeChangedCallback",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "comment": {
                  "shortText": "Synchronizes property values when attributes change."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 878,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L878",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 785,
                    "name": "attributeChangedCallback",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Synchronizes property values when attributes change."
                    },
                    "parameters": [
                      {
                        "id": 786,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 787,
                        "name": "_old",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": null
                            },
                            {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          ]
                        }
                      },
                      {
                        "id": 788,
                        "name": "value",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": null
                            },
                            {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          ]
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1726,
                      "name": "ReactiveElement.attributeChangedCallback"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1725,
                  "name": "ReactiveElement.attributeChangedCallback",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.attributeChangedCallback"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.attributeChangedCallback"
                }
              },
              {
                "id": 729,
                "name": "observedAttributes",
                "kind": 262144,
                "kindString": "Accessor",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Returns a list of attributes corresponding to the registered properties.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 440,
                    "character": 13,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L440",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                "getSignature": [
                  {
                    "id": 730,
                    "name": "observedAttributes",
                    "kind": 524288,
                    "kindString": "Get signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns a list of attributes corresponding to the registered properties.",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "category",
                          "text": "attributes\n"
                        }
                      ]
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1669,
                  "name": "ReactiveElement.observedAttributes",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.observedAttributes"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.observedAttributes"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/controllers",
            "title": "Controllers",
            "children": [
              {
                "id": 775,
                "name": "addController",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 771,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L771",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 776,
                    "name": "addController",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "parameters": [
                      {
                        "id": 777,
                        "name": "controller",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 1588,
                          "name": "ReactiveController",
                          "location": {
                            "page": "controllers",
                            "anchor": "ReactiveController"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1710,
                      "name": "ReactiveElement.addController"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1709,
                  "name": "ReactiveElement.addController",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.addController"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.addController"
                }
              },
              {
                "id": 778,
                "name": "removeController",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 785,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L785",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 779,
                    "name": "removeController",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "parameters": [
                      {
                        "id": 780,
                        "name": "controller",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 1588,
                          "name": "ReactiveController",
                          "location": {
                            "page": "controllers",
                            "anchor": "ReactiveController"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1713,
                      "name": "ReactiveElement.removeController"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1712,
                  "name": "ReactiveElement.removeController",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.removeController"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.removeController"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/dev-mode",
            "title": "Dev mode",
            "children": [
              {
                "id": 717,
                "name": "disableWarning",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Disable the given warning kind for this class.",
                  "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 353,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L353",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 718,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 719,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "comment": {
                          "shortText": "Disable the given warning kind for this class.",
                          "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
                          "tags": [
                            {
                              "tag": "nocollapse",
                              "text": ""
                            },
                            {
                              "tag": "category",
                              "text": "dev-mode\n"
                            }
                          ]
                        },
                        "parameters": [
                          {
                            "id": 720,
                            "name": "warningKind",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "id": 1645,
                              "name": "WarningKind",
                              "location": {
                                "page": "misc",
                                "anchor": "WarningKind"
                              }
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1656,
                  "name": "ReactiveElement.disableWarning",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.disableWarning"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.disableWarning"
                }
              },
              {
                "id": 712,
                "name": "enabledWarnings",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Read or set all the enabled warning kinds for this class.",
                  "text": "This property is only used in development builds.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 315,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L315",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 1645,
                    "name": "WarningKind",
                    "location": {
                      "page": "misc",
                      "anchor": "WarningKind"
                    }
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1651,
                  "name": "ReactiveElement.enabledWarnings",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.enabledWarnings"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.enabledWarnings"
                }
              },
              {
                "id": 713,
                "name": "enableWarning",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Enable the given warning kind for this class.",
                  "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 334,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L334",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 714,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 715,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "comment": {
                          "shortText": "Enable the given warning kind for this class.",
                          "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
                          "tags": [
                            {
                              "tag": "nocollapse",
                              "text": ""
                            },
                            {
                              "tag": "category",
                              "text": "dev-mode\n"
                            }
                          ]
                        },
                        "parameters": [
                          {
                            "id": 716,
                            "name": "warningKind",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "id": 1645,
                              "name": "WarningKind",
                              "location": {
                                "page": "misc",
                                "anchor": "WarningKind"
                              }
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1652,
                  "name": "ReactiveElement.enableWarning",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.enableWarning"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.enableWarning"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/lifecycle",
            "title": "Lifecycle",
            "children": [
              {
                "id": 766,
                "name": "connectedCallback",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 142,
                    "character": 11,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L142",
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 767,
                    "name": "connectedCallback",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "overwrites": {
                      "type": "reference",
                      "id": 1719,
                      "name": "ReactiveElement.connectedCallback"
                    }
                  }
                ],
                "overwrites": {
                  "type": "reference",
                  "id": 1718,
                  "name": "ReactiveElement.connectedCallback",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.connectedCallback"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.connectedCallback"
                }
              },
              {
                "id": 768,
                "name": "disconnectedCallback",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 150,
                    "character": 11,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L150",
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 769,
                    "name": "disconnectedCallback",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "overwrites": {
                      "type": "reference",
                      "id": 1724,
                      "name": "ReactiveElement.disconnectedCallback"
                    }
                  }
                ],
                "overwrites": {
                  "type": "reference",
                  "id": 1723,
                  "name": "ReactiveElement.disconnectedCallback",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.disconnectedCallback"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.disconnectedCallback"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/Other",
            "title": "Other",
            "children": [
              {
                "id": 721,
                "name": "addInitializer",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isStatic": true
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 358,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L358",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 722,
                    "name": "addInitializer",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": "\n"
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 723,
                        "name": "initializer",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 1646,
                          "name": "Initializer",
                          "location": {
                            "page": "misc",
                            "anchor": "Initializer"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1661,
                      "name": "ReactiveElement.addInitializer"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1660,
                  "name": "ReactiveElement.addInitializer",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.addInitializer"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.addInitializer"
                }
              },
              {
                "id": 751,
                "name": "finalize",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 585,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L585",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 752,
                    "name": "finalize",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": "\n"
                        }
                      ]
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1692,
                      "name": "ReactiveElement.finalize"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1691,
                  "name": "ReactiveElement.finalize",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.finalize"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.finalize"
                }
              },
              {
                "id": 710,
                "name": "finalized",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Ensure this class is marked as `finalized` as an optimization ensuring\nit will not needlessly try to `finalize`.",
                  "text": "Note this property name is a string to prevent breaking Closure JS Compiler\noptimizations. See @lit/reactive-element for more information.\n"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 94,
                    "character": 28,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L94",
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 1698,
                  "name": "ReactiveElement.finalized",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.finalized"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.finalized"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/properties",
            "title": "Properties",
            "children": [
              {
                "id": 731,
                "name": "createProperty",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
                  "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 481,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L481",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 732,
                    "name": "createProperty",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
                      "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 733,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      },
                      {
                        "id": 734,
                        "name": "options",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "id": 1618,
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1672,
                      "name": "ReactiveElement.createProperty"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1671,
                  "name": "ReactiveElement.createProperty",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.createProperty"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.createProperty"
                }
              },
              {
                "id": 725,
                "name": "elementProperties",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Memoized list of all element properties, including any superclass properties.\nCreated lazily on user subclasses when finalizing the class.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 390,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L390",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "PropertyDeclarationMap"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1665,
                  "name": "ReactiveElement.elementProperties",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.elementProperties"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.elementProperties"
                }
              },
              {
                "id": 735,
                "name": "getPropertyDescriptor",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                  "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 536,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L536",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 736,
                    "name": "getPropertyDescriptor",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                      "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 737,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      },
                      {
                        "id": 738,
                        "name": "key",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        }
                      },
                      {
                        "id": 739,
                        "name": "options",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 1618,
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 740,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 746,
                            "name": "configurable",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                                "line": 309,
                                "character": 8
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 747,
                            "name": "enumerable",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                                "line": 310,
                                "character": 8
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 741,
                            "name": "get",
                            "kind": 2048,
                            "kindString": "Method",
                            "flags": {},
                            "signatures": [
                              {
                                "id": 742,
                                "name": "get",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            ]
                          },
                          {
                            "id": 743,
                            "name": "set",
                            "kind": 2048,
                            "kindString": "Method",
                            "flags": {},
                            "signatures": [
                              {
                                "id": 744,
                                "name": "set",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 745,
                                    "name": "value",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "unknown"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "void"
                                }
                              }
                            ]
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [
                              746,
                              747
                            ]
                          },
                          {
                            "title": "Methods",
                            "kind": 2048,
                            "children": [
                              741,
                              743
                            ]
                          }
                        ]
                      }
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1676,
                      "name": "ReactiveElement.getPropertyDescriptor"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1675,
                  "name": "ReactiveElement.getPropertyDescriptor",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.getPropertyDescriptor"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.getPropertyDescriptor"
                }
              },
              {
                "id": 748,
                "name": "getPropertyOptions",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                  "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    },
                    {
                      "tag": "final",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 575,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L575",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 749,
                    "name": "getPropertyOptions",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                      "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "final",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 750,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 1618,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1689,
                      "name": "ReactiveElement.getPropertyOptions"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1688,
                  "name": "ReactiveElement.getPropertyOptions",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.getPropertyOptions"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.getPropertyOptions"
                }
              },
              {
                "id": 726,
                "name": "properties",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "User-supplied object that maps property names to `PropertyDeclaration`\nobjects containing options for configuring reactive properties. When\na reactive property is set the element will update and render.",
                  "text": "By default properties are public fields, and as such, they should be\nconsidered as primarily settable by element users, either via attribute or\nthe property itself.\n\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state: true` option. Properties\nmarked as `state` do not reflect from the corresponding attribute\n\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating\npublic properties should typically not be done for non-primitive (object or\narray) properties. In other cases when an element needs to manage state, a\nprivate property set with the `state: true` option should be used. When\nneeded, state properties can be initialized via public properties to\nfacilitate complex interactions.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 417,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L417",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 1631,
                  "name": "PropertyDeclarations",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "PropertyDeclarations"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1666,
                  "name": "ReactiveElement.properties",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.properties"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.properties"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/rendering",
            "title": "Rendering",
            "children": [
              {
                "id": 761,
                "name": "createRenderRoot",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 109,
                    "character": 21,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L109",
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 762,
                    "name": "createRenderRoot",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "Element",
                          "externalLocation": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                          }
                        },
                        {
                          "type": "reference",
                          "name": "ShadowRoot",
                          "externalLocation": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                          }
                        }
                      ]
                    },
                    "overwrites": {
                      "type": "reference",
                      "id": 1717,
                      "name": "ReactiveElement.createRenderRoot"
                    }
                  }
                ],
                "overwrites": {
                  "type": "reference",
                  "id": 1716,
                  "name": "ReactiveElement.createRenderRoot",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.createRenderRoot"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.createRenderRoot"
                }
              },
              {
                "id": 770,
                "name": "render",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked on each update to perform rendering tasks. This method may return\nany value renderable by lit-html's `ChildPart` - typically a\n`TemplateResult`. Setting properties inside this method will *not* trigger\nthe element to update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 162,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L162",
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 771,
                    "name": "render",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Invoked on each update to perform rendering tasks. This method may return\nany value renderable by lit-html's `ChildPart` - typically a\n`TemplateResult`. Setting properties inside this method will *not* trigger\nthe element to update."
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.render"
                }
              },
              {
                "id": 759,
                "name": "renderOptions",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "comment": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 102,
                    "character": 11,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L102",
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2586,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.renderOptions"
                }
              },
              {
                "id": 772,
                "name": "renderRoot",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "comment": {
                  "shortText": "Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 685,
                    "character": 11,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L685",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "HTMLElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "ShadowRoot",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                      }
                    }
                  ]
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1701,
                  "name": "ReactiveElement.renderRoot",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.renderRoot"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.renderRoot"
                }
              },
              {
                "id": 753,
                "name": "shadowRootOptions",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Options used when calling `attachShadow`. Set this property to customize\nthe options for the shadowRoot; for example, to create a closed\nshadowRoot: `{mode: 'closed'}`.",
                  "text": "Note, these options are used in `createRenderRoot`. If this method\nis customized, options should be respected if possible.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 645,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L645",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "ShadowRootInit",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#parameters"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1693,
                  "name": "ReactiveElement.shadowRootOptions",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.shadowRootOptions"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.shadowRootOptions"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/styles",
            "title": "Styles",
            "children": [
              {
                "id": 727,
                "name": "elementStyles",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Memoized list of all element styles.\nCreated lazily on user subclasses when finalizing the class.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 425,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L425",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 2526,
                    "name": "CSSResultOrNative",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultOrNative"
                    }
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1667,
                  "name": "ReactiveElement.elementStyles",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.elementStyles"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.elementStyles"
                }
              },
              {
                "id": 754,
                "name": "finalizeStyles",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
                  "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 661,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L661",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 755,
                    "name": "finalizeStyles",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
                      "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 756,
                        "name": "styles",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "id": 2528,
                          "name": "CSSResultGroup",
                          "location": {
                            "page": "styles",
                            "anchor": "CSSResultGroup"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "id": 2526,
                        "name": "CSSResultOrNative",
                        "location": {
                          "page": "styles",
                          "anchor": "CSSResultOrNative"
                        }
                      }
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1695,
                      "name": "ReactiveElement.finalizeStyles"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1694,
                  "name": "ReactiveElement.finalizeStyles",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.finalizeStyles"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.finalizeStyles"
                }
              },
              {
                "id": 728,
                "name": "styles",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Array of styles to apply to the element. The styles should be defined\nusing the [`css`](/docs/api/styles/#css) tag function or via constructible stylesheets.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 433,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L433",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2528,
                  "name": "CSSResultGroup",
                  "location": {
                    "page": "styles",
                    "anchor": "CSSResultGroup"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1668,
                  "name": "ReactiveElement.styles",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.styles"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.styles"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/updates",
            "title": "Updates",
            "children": [
              {
                "id": 781,
                "name": "enableUpdating",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 862,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L862",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 782,
                    "name": "enableUpdating",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
                    },
                    "parameters": [
                      {
                        "id": 783,
                        "name": "_requestedUpdate",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1721,
                      "name": "ReactiveElement.enableUpdating"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1720,
                  "name": "ReactiveElement.enableUpdating",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.enableUpdating"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.enableUpdating"
                }
              },
              {
                "id": 811,
                "name": "firstUpdated",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1282,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1282",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 812,
                    "name": "firstUpdated",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                      "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                    },
                    "parameters": [
                      {
                        "id": 813,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1759,
                      "name": "ReactiveElement.firstUpdated"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1758,
                  "name": "ReactiveElement.firstUpdated",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.firstUpdated"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.firstUpdated"
                }
              },
              {
                "id": 803,
                "name": "getUpdateComplete",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Override point for the `updateComplete` promise.",
                  "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1223,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1223",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 804,
                    "name": "getUpdateComplete",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Override point for the `updateComplete` promise.",
                      "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
                      "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      ],
                      "name": "Promise"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1748,
                      "name": "ReactiveElement.getUpdateComplete"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1747,
                  "name": "ReactiveElement.getUpdateComplete",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.getUpdateComplete"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.getUpdateComplete"
                }
              },
              {
                "id": 774,
                "name": "hasUpdated",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 718,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L718",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1705,
                  "name": "ReactiveElement.hasUpdated",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.hasUpdated"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.hasUpdated"
                }
              },
              {
                "id": 773,
                "name": "isUpdatePending",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 713,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L713",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1704,
                  "name": "ReactiveElement.isUpdatePending",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.isUpdatePending"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.isUpdatePending"
                }
              },
              {
                "id": 796,
                "name": "performUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                  "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1078,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1078",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 797,
                    "name": "performUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                      "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Promise"
                        }
                      ]
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1740,
                      "name": "ReactiveElement.performUpdate"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1739,
                  "name": "ReactiveElement.performUpdate",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.performUpdate"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.performUpdate"
                }
              },
              {
                "id": 789,
                "name": "requestUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "comment": {
                  "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 973,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L973",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 790,
                    "name": "requestUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
                    },
                    "parameters": [
                      {
                        "id": 791,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "text": "name of requesting property"
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      },
                      {
                        "id": 792,
                        "name": "oldValue",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "text": "old value of requesting property"
                        },
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      },
                      {
                        "id": 793,
                        "name": "options",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "text": "property options to use instead of the previously\n    configured options"
                        },
                        "type": {
                          "type": "reference",
                          "id": 1618,
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1732,
                      "name": "ReactiveElement.requestUpdate"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1731,
                  "name": "ReactiveElement.requestUpdate",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.requestUpdate"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.requestUpdate"
                }
              },
              {
                "id": 794,
                "name": "scheduleUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
                  "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1057,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1057",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 795,
                    "name": "scheduleUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
                      "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Promise"
                        }
                      ]
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1738,
                      "name": "ReactiveElement.scheduleUpdate"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1737,
                  "name": "ReactiveElement.scheduleUpdate",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.scheduleUpdate"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.scheduleUpdate"
                }
              },
              {
                "id": 805,
                "name": "shouldUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1235,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1235",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 806,
                    "name": "shouldUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                    },
                    "parameters": [
                      {
                        "id": 807,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1750,
                      "name": "ReactiveElement.shouldUpdate"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1749,
                  "name": "ReactiveElement.shouldUpdate",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.shouldUpdate"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.shouldUpdate"
                }
              },
              {
                "id": 763,
                "name": "update",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 127,
                    "character": 21,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L127",
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 764,
                    "name": "update",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update."
                    },
                    "parameters": [
                      {
                        "id": 765,
                        "name": "changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "overwrites": {
                      "type": "reference",
                      "id": 1753,
                      "name": "ReactiveElement.update"
                    }
                  }
                ],
                "overwrites": {
                  "type": "reference",
                  "id": 1752,
                  "name": "ReactiveElement.update",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.update"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.update"
                }
              },
              {
                "id": 801,
                "name": "updateComplete",
                "kind": 262144,
                "kindString": "Accessor",
                "flags": {},
                "comment": {
                  "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                  "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1196,
                    "character": 6,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1196",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ],
                  "name": "Promise"
                },
                "getSignature": [
                  {
                    "id": 802,
                    "name": "updateComplete",
                    "kind": 524288,
                    "kindString": "Get signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                      "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
                      "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update.",
                      "tags": [
                        {
                          "tag": "category",
                          "text": "updates\n"
                        }
                      ]
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      ],
                      "name": "Promise"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1745,
                  "name": "ReactiveElement.updateComplete",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.updateComplete"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.updateComplete"
                }
              },
              {
                "id": 808,
                "name": "updated",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1270,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1270",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 809,
                    "name": "updated",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                      "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                    },
                    "parameters": [
                      {
                        "id": 810,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1756,
                      "name": "ReactiveElement.updated"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1755,
                  "name": "ReactiveElement.updated",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.updated"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.updated"
                }
              },
              {
                "id": 798,
                "name": "willUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1146,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1146",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 799,
                    "name": "willUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "parameters": [
                      {
                        "id": 800,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 1742,
                      "name": "ReactiveElement.willUpdate"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1741,
                  "name": "ReactiveElement.willUpdate",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.willUpdate"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.willUpdate"
                }
              }
            ]
          }
        ]
      },
      {
        "id": 2586,
        "name": "RenderOptions",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "Object specifying options for controlling lit-html rendering. Note that\nwhile `render` may be called multiple times on the same `container` (and\n`renderBefore` reference node) to efficiently update the rendered content,\nonly the options passed in during the first render are respected during\nthe lifetime of renders to that unique `container` + `renderBefore`\ncombination."
        },
        "children": [
          {
            "id": 2589,
            "name": "creationScope",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Node used for cloning the template (`importNode` will be called on this\nnode). This controls the `ownerDocument` of the rendered DOM, along with\nany inherited context. Defaults to the global `document`."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 365,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L365",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2590,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 2591,
                    "name": "importNode",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 2592,
                        "name": "importNode",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 2593,
                            "name": "node",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "name": "Node"
                            }
                          },
                          {
                            "id": 2594,
                            "name": "deep",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                              "isOptional": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Node"
                        }
                      }
                    ]
                  }
                ],
                "groups": [
                  {
                    "title": "Methods",
                    "kind": 2048,
                    "children": [
                      2591
                    ]
                  }
                ]
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "RenderOptions.creationScope"
            }
          },
          {
            "id": 2587,
            "name": "host",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "An object to use as the `this` value for event listeners. It's often\nuseful to set this to the host component rendering a template."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 355,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L355",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "object"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "RenderOptions.host"
            }
          },
          {
            "id": 2595,
            "name": "isConnected",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "The initial connected state for the top-level part being rendered. If no\n`isConnected` option is set, `AsyncDirective`s will be connected by\ndefault. Set to `false` if the initial render occurs in a disconnected tree\nand `AsyncDirective`s should see `isConnected === false` for their initial\nrender. The `part.setConnected()` method must be used subsequent to initial\nrender to change the connected state of the part."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 374,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L374",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "RenderOptions.isConnected"
            }
          },
          {
            "id": 2588,
            "name": "renderBefore",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "A DOM node before which to render content in the container."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 359,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L359",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "ChildNode"
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "RenderOptions.renderBefore"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2589,
              2587,
              2595,
              2588
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 350,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L350",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "LitElement",
          "anchor": "RenderOptions"
        }
      }
    ]
  },
  {
    "slug": "ReactiveElement",
    "title": "ReactiveElement",
    "items": [
      {
        "id": 1650,
        "name": "ReactiveElement",
        "kind": 128,
        "kindString": "Class",
        "flags": {
          "isAbstract": true
        },
        "comment": {
          "shortText": "Base element class which manages element properties and attributes. When\nproperties change, the `update` method is asynchronously called. This method\nshould be supplied by subclassers to render updates as desired.",
          "tags": [
            {
              "tag": "noinheritdoc",
              "text": "\n"
            }
          ]
        },
        "children": [
          {
            "id": 1699,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/reactive-element.d.ts",
                "line": 392,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 1700,
                "name": "new ReactiveElement",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 1650,
                  "name": "ReactiveElement",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "HTMLElement.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "HTMLElement.constructor"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.constructor"
            }
          },
          {
            "id": 1705,
            "name": "hasUpdated",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 718,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L718",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.hasUpdated"
            }
          },
          {
            "id": 1704,
            "name": "isUpdatePending",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 713,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L713",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.isUpdatePending"
            }
          },
          {
            "id": 1701,
            "name": "renderRoot",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "comment": {
              "shortText": "Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 685,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L685",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "HTMLElement",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                  }
                },
                {
                  "type": "reference",
                  "name": "ShadowRoot",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                  }
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.renderRoot"
            }
          },
          {
            "id": 1656,
            "name": "disableWarning",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Disable the given warning kind for this class.",
              "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 353,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L353",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1657,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 1658,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Disable the given warning kind for this class.",
                      "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "category",
                          "text": "dev-mode\n"
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 1659,
                        "name": "warningKind",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 1645,
                          "name": "WarningKind",
                          "location": {
                            "page": "misc",
                            "anchor": "WarningKind"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.disableWarning"
            }
          },
          {
            "id": 1665,
            "name": "elementProperties",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Memoized list of all element properties, including any superclass properties.\nCreated lazily on user subclasses when finalizing the class.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 390,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L390",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "PropertyDeclarationMap"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.elementProperties"
            }
          },
          {
            "id": 1667,
            "name": "elementStyles",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Memoized list of all element styles.\nCreated lazily on user subclasses when finalizing the class.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 425,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L425",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "id": 2526,
                "name": "CSSResultOrNative",
                "location": {
                  "page": "styles",
                  "anchor": "CSSResultOrNative"
                }
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.elementStyles"
            }
          },
          {
            "id": 1652,
            "name": "enableWarning",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Enable the given warning kind for this class.",
              "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 334,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L334",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 1653,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 1654,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Enable the given warning kind for this class.",
                      "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "category",
                          "text": "dev-mode\n"
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 1655,
                        "name": "warningKind",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 1645,
                          "name": "WarningKind",
                          "location": {
                            "page": "misc",
                            "anchor": "WarningKind"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.enableWarning"
            }
          },
          {
            "id": 1651,
            "name": "enabledWarnings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Read or set all the enabled warning kinds for this class.",
              "text": "This property is only used in development builds.\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 315,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L315",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "id": 1645,
                "name": "WarningKind",
                "location": {
                  "page": "misc",
                  "anchor": "WarningKind"
                }
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.enabledWarnings"
            }
          },
          {
            "id": 1698,
            "name": "finalized",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Marks class as having finished creating properties."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 382,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L382",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.finalized"
            }
          },
          {
            "id": 1666,
            "name": "properties",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "User-supplied object that maps property names to `PropertyDeclaration`\nobjects containing options for configuring reactive properties. When\na reactive property is set the element will update and render.",
              "text": "By default properties are public fields, and as such, they should be\nconsidered as primarily settable by element users, either via attribute or\nthe property itself.\n\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state: true` option. Properties\nmarked as `state` do not reflect from the corresponding attribute\n\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating\npublic properties should typically not be done for non-primitive (object or\narray) properties. In other cases when an element needs to manage state, a\nprivate property set with the `state: true` option should be used. When\nneeded, state properties can be initialized via public properties to\nfacilitate complex interactions.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 417,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L417",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 1631,
              "name": "PropertyDeclarations",
              "location": {
                "page": "ReactiveElement",
                "anchor": "PropertyDeclarations"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.properties"
            }
          },
          {
            "id": 1693,
            "name": "shadowRootOptions",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Options used when calling `attachShadow`. Set this property to customize\nthe options for the shadowRoot; for example, to create a closed\nshadowRoot: `{mode: 'closed'}`.",
              "text": "Note, these options are used in `createRenderRoot`. If this method\nis customized, options should be respected if possible.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 645,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L645",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "ShadowRootInit",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#parameters"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.shadowRootOptions"
            }
          },
          {
            "id": 1668,
            "name": "styles",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Array of styles to apply to the element. The styles should be defined\nusing the [`css`](/docs/api/styles/#css) tag function or via constructible stylesheets.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 433,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L433",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 2528,
              "name": "CSSResultGroup",
              "location": {
                "page": "styles",
                "anchor": "CSSResultGroup"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.styles"
            }
          },
          {
            "id": 1745,
            "name": "updateComplete",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
              "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
              "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1196,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1196",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              ],
              "name": "Promise"
            },
            "getSignature": [
              {
                "id": 1746,
                "name": "updateComplete",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                  "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update.",
                  "tags": [
                    {
                      "tag": "category",
                      "text": "updates\n"
                    }
                  ]
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ],
                  "name": "Promise"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 1606,
                  "name": "ReactiveControllerHost.updateComplete",
                  "location": {
                    "page": "controllers",
                    "anchor": "ReactiveControllerHost.updateComplete"
                  }
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 1606,
              "name": "ReactiveControllerHost.updateComplete",
              "location": {
                "page": "controllers",
                "anchor": "ReactiveControllerHost.updateComplete"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.updateComplete"
            }
          },
          {
            "id": 1669,
            "name": "observedAttributes",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns a list of attributes corresponding to the registered properties.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 440,
                "character": 13,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L440",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            "getSignature": [
              {
                "id": 1670,
                "name": "observedAttributes",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a list of attributes corresponding to the registered properties.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    },
                    {
                      "tag": "category",
                      "text": "attributes\n"
                    }
                  ]
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.observedAttributes"
            }
          },
          {
            "id": 1709,
            "name": "addController",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 771,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L771",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1710,
                "name": "addController",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "parameters": [
                  {
                    "id": 1711,
                    "name": "controller",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1588,
                      "name": "ReactiveController",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveController"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 1599,
                  "name": "ReactiveControllerHost.addController"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 1598,
              "name": "ReactiveControllerHost.addController",
              "location": {
                "page": "controllers",
                "anchor": "ReactiveControllerHost.addController"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.addController"
            }
          },
          {
            "id": 1725,
            "name": "attributeChangedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Synchronizes property values when attributes change."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 878,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L878",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1726,
                "name": "attributeChangedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Synchronizes property values when attributes change."
                },
                "parameters": [
                  {
                    "id": 1727,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 1728,
                    "name": "_old",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  },
                  {
                    "id": 1729,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.attributeChangedCallback"
            }
          },
          {
            "id": 1718,
            "name": "connectedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "On first connection, creates the element's renderRoot, sets up\nelement styling, and enables updating."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 843,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L843",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1719,
                "name": "connectedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "On first connection, creates the element's renderRoot, sets up\nelement styling, and enables updating."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.connectedCallback"
            }
          },
          {
            "id": 1716,
            "name": "createRenderRoot",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
              "returns": "Returns a node into which to render."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 825,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L825",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1717,
                "name": "createRenderRoot",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
                  "returns": "Returns a node into which to render."
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "ShadowRoot",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                      }
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.createRenderRoot"
            }
          },
          {
            "id": 1723,
            "name": "disconnectedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 870,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L870",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1724,
                "name": "disconnectedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.disconnectedCallback"
            }
          },
          {
            "id": 1720,
            "name": "enableUpdating",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 862,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L862",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1721,
                "name": "enableUpdating",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
                },
                "parameters": [
                  {
                    "id": 1722,
                    "name": "_requestedUpdate",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.enableUpdating"
            }
          },
          {
            "id": 1758,
            "name": "firstUpdated",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
              "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1282,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1282",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1759,
                "name": "firstUpdated",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "parameters": [
                  {
                    "id": 1760,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.firstUpdated"
            }
          },
          {
            "id": 1747,
            "name": "getUpdateComplete",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Override point for the `updateComplete` promise.",
              "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
              "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1223,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1223",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1748,
                "name": "getUpdateComplete",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Override point for the `updateComplete` promise.",
                  "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ],
                  "name": "Promise"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.getUpdateComplete"
            }
          },
          {
            "id": 1739,
            "name": "performUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
              "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1078,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1078",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1740,
                "name": "performUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                  "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Promise"
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.performUpdate"
            }
          },
          {
            "id": 1712,
            "name": "removeController",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 785,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L785",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1713,
                "name": "removeController",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "parameters": [
                  {
                    "id": 1714,
                    "name": "controller",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1588,
                      "name": "ReactiveController",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveController"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 1602,
                  "name": "ReactiveControllerHost.removeController"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 1601,
              "name": "ReactiveControllerHost.removeController",
              "location": {
                "page": "controllers",
                "anchor": "ReactiveControllerHost.removeController"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.removeController"
            }
          },
          {
            "id": 1731,
            "name": "requestUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 973,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L973",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1732,
                "name": "requestUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
                },
                "parameters": [
                  {
                    "id": 1733,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "name of requesting property"
                    },
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 1734,
                    "name": "oldValue",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "old value of requesting property"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  },
                  {
                    "id": 1735,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "property options to use instead of the previously\n    configured options"
                    },
                    "type": {
                      "type": "reference",
                      "id": 1618,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 1605,
                  "name": "ReactiveControllerHost.requestUpdate"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 1604,
              "name": "ReactiveControllerHost.requestUpdate",
              "location": {
                "page": "controllers",
                "anchor": "ReactiveControllerHost.requestUpdate"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.requestUpdate"
            }
          },
          {
            "id": 1737,
            "name": "scheduleUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
              "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1057,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1057",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1738,
                "name": "scheduleUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
                  "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Promise"
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.scheduleUpdate"
            }
          },
          {
            "id": 1749,
            "name": "shouldUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1235,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1235",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1750,
                "name": "shouldUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                },
                "parameters": [
                  {
                    "id": 1751,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.shouldUpdate"
            }
          },
          {
            "id": 1752,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Updates the element. This method reflects property values to attributes.\nIt can be overridden to render and keep updated element DOM.\nSetting properties inside this method will *not* trigger\nanother update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1248,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1248",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1753,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Updates the element. This method reflects property values to attributes.\nIt can be overridden to render and keep updated element DOM.\nSetting properties inside this method will *not* trigger\nanother update."
                },
                "parameters": [
                  {
                    "id": 1754,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.update"
            }
          },
          {
            "id": 1755,
            "name": "updated",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
              "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1270,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1270",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1756,
                "name": "updated",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "parameters": [
                  {
                    "id": 1757,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.updated"
            }
          },
          {
            "id": 1741,
            "name": "willUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1146,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1146",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1742,
                "name": "willUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "parameters": [
                  {
                    "id": 1743,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.willUpdate"
            }
          },
          {
            "id": 1660,
            "name": "addInitializer",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isStatic": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 358,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L358",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1661,
                "name": "addInitializer",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 1662,
                    "name": "initializer",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1646,
                      "name": "Initializer",
                      "location": {
                        "page": "misc",
                        "anchor": "Initializer"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.addInitializer"
            }
          },
          {
            "id": 1671,
            "name": "createProperty",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
              "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 481,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L481",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1672,
                "name": "createProperty",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
                  "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 1673,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 1674,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "id": 1618,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.createProperty"
            }
          },
          {
            "id": 1691,
            "name": "finalize",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 585,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L585",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1692,
                "name": "finalize",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.finalize"
            }
          },
          {
            "id": 1694,
            "name": "finalizeStyles",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
              "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 661,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L661",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1695,
                "name": "finalizeStyles",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
                  "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 1696,
                    "name": "styles",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "id": 2528,
                      "name": "CSSResultGroup",
                      "location": {
                        "page": "styles",
                        "anchor": "CSSResultGroup"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 2526,
                    "name": "CSSResultOrNative",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultOrNative"
                    }
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.finalizeStyles"
            }
          },
          {
            "id": 1675,
            "name": "getPropertyDescriptor",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
              "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 536,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L536",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1676,
                "name": "getPropertyDescriptor",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                  "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 1677,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 1678,
                    "name": "key",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "symbol"
                        }
                      ]
                    }
                  },
                  {
                    "id": 1679,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1618,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 1680,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 1686,
                        "name": "configurable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                            "line": 309,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 1687,
                        "name": "enumerable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                            "line": 310,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 1681,
                        "name": "get",
                        "kind": 2048,
                        "kindString": "Method",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 1682,
                            "name": "get",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        ]
                      },
                      {
                        "id": 1683,
                        "name": "set",
                        "kind": 2048,
                        "kindString": "Method",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 1684,
                            "name": "set",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 1685,
                                "name": "value",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                          1686,
                          1687
                        ]
                      },
                      {
                        "title": "Methods",
                        "kind": 2048,
                        "children": [
                          1681,
                          1683
                        ]
                      }
                    ]
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.getPropertyDescriptor"
            }
          },
          {
            "id": 1688,
            "name": "getPropertyOptions",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
              "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                },
                {
                  "tag": "final",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 575,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L575",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1689,
                "name": "getPropertyOptions",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                  "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    },
                    {
                      "tag": "final",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 1690,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 1618,
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "PropertyDeclaration",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "PropertyDeclaration"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.getPropertyOptions"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              1699
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2043,
              2044,
              2045,
              2046,
              2047,
              2048,
              2049,
              2050,
              2051,
              2052,
              2053,
              2054,
              2055,
              2056,
              2057,
              2058,
              2059,
              2060,
              1708,
              1736,
              1702,
              1744,
              1730,
              1706,
              1707,
              1715,
              1703,
              1761,
              1762,
              2064,
              2065,
              2066,
              2067,
              2068,
              2069,
              2070,
              2071,
              2072,
              2073,
              2074,
              2075,
              2076,
              2077,
              2078,
              2079,
              2080,
              2081,
              2082,
              2083,
              2084,
              2085,
              2086,
              2087,
              2088,
              2089,
              2090,
              2091,
              2092,
              2093,
              2094,
              2095,
              2096,
              2097,
              2098,
              2099,
              2154,
              1806,
              1763,
              1981,
              2121,
              1982,
              2122,
              1807,
              1808,
              1809,
              1810,
              1811,
              1812,
              2168,
              2517,
              1764,
              1765,
              2169,
              1983,
              2123,
              1705,
              1766,
              1813,
              2118,
              1767,
              2170,
              1984,
              2171,
              1704,
              1768,
              1985,
              2124,
              1814,
              1815,
              2119,
              1986,
              1987,
              1988,
              1989,
              2518,
              1769,
              1770,
              1771,
              1772,
              1773,
              2172,
              2176,
              2180,
              2184,
              2188,
              2192,
              2196,
              2200,
              2204,
              2208,
              2212,
              2216,
              2220,
              2155,
              2224,
              2159,
              2228,
              2232,
              2236,
              2240,
              2244,
              2248,
              2252,
              2256,
              2260,
              2264,
              2268,
              2272,
              2273,
              2277,
              1816,
              1820,
              2281,
              2285,
              2289,
              2293,
              2297,
              2301,
              2305,
              2309,
              2313,
              2317,
              2321,
              2325,
              2329,
              2333,
              2337,
              2341,
              2345,
              2349,
              2163,
              2353,
              2357,
              2361,
              2365,
              2369,
              2373,
              2377,
              2381,
              2385,
              2389,
              2393,
              2397,
              2401,
              2405,
              2409,
              2413,
              2417,
              2421,
              2425,
              2429,
              2433,
              2437,
              2441,
              2445,
              2449,
              2453,
              2457,
              2461,
              2465,
              2469,
              2473,
              2477,
              2481,
              2485,
              2489,
              2493,
              2497,
              2501,
              2505,
              2509,
              2513,
              1824,
              1774,
              1825,
              1990,
              1991,
              1826,
              1827,
              2120,
              1992,
              1701,
              1828,
              1829,
              1830,
              1831,
              1832,
              1833,
              1775,
              2167,
              2519,
              1834,
              1993,
              1776,
              1777,
              1697,
              1664,
              1663,
              1656,
              1665,
              1667,
              1652,
              1651,
              1698,
              1666,
              1693,
              1668
            ],
            "categories": [
              {
                "title": "Other",
                "children": [
                  2043,
                  2044,
                  2045,
                  2046,
                  2047,
                  2048,
                  2049,
                  2050,
                  2051,
                  2052,
                  2053,
                  2054,
                  2055,
                  2056,
                  2057,
                  2058,
                  2059,
                  2060,
                  1708,
                  1736,
                  1702,
                  1744,
                  1730,
                  1706,
                  1707,
                  1715,
                  1703,
                  1761,
                  1762,
                  2064,
                  2065,
                  2066,
                  2067,
                  2068,
                  2069,
                  2070,
                  2071,
                  2072,
                  2073,
                  2074,
                  2075,
                  2076,
                  2077,
                  2078,
                  2079,
                  2080,
                  2081,
                  2082,
                  2083,
                  2084,
                  2085,
                  2086,
                  2087,
                  2088,
                  2089,
                  2090,
                  2091,
                  2092,
                  2093,
                  2094,
                  2095,
                  2096,
                  2097,
                  2098,
                  2099,
                  2154,
                  1806,
                  1763,
                  1981,
                  2121,
                  1982,
                  2122,
                  1807,
                  1808,
                  1809,
                  1810,
                  1811,
                  1812,
                  2168,
                  2517,
                  1764,
                  1765,
                  2169,
                  1983,
                  2123,
                  1766,
                  1813,
                  2118,
                  1767,
                  2170,
                  1984,
                  2171,
                  1768,
                  1985,
                  2124,
                  1814,
                  1815,
                  2119,
                  1986,
                  1987,
                  1988,
                  1989,
                  2518,
                  1769,
                  1770,
                  1771,
                  1772,
                  1773,
                  2172,
                  2176,
                  2180,
                  2184,
                  2188,
                  2192,
                  2196,
                  2200,
                  2204,
                  2208,
                  2212,
                  2216,
                  2220,
                  2155,
                  2224,
                  2159,
                  2228,
                  2232,
                  2236,
                  2240,
                  2244,
                  2248,
                  2252,
                  2256,
                  2260,
                  2264,
                  2268,
                  2272,
                  2273,
                  2277,
                  1816,
                  1820,
                  2281,
                  2285,
                  2289,
                  2293,
                  2297,
                  2301,
                  2305,
                  2309,
                  2313,
                  2317,
                  2321,
                  2325,
                  2329,
                  2333,
                  2337,
                  2341,
                  2345,
                  2349,
                  2163,
                  2353,
                  2357,
                  2361,
                  2365,
                  2369,
                  2373,
                  2377,
                  2381,
                  2385,
                  2389,
                  2393,
                  2397,
                  2401,
                  2405,
                  2409,
                  2413,
                  2417,
                  2421,
                  2425,
                  2429,
                  2433,
                  2437,
                  2441,
                  2445,
                  2449,
                  2453,
                  2457,
                  2461,
                  2465,
                  2469,
                  2473,
                  2477,
                  2481,
                  2485,
                  2489,
                  2493,
                  2497,
                  2501,
                  2505,
                  2509,
                  2513,
                  1824,
                  1774,
                  1825,
                  1990,
                  1991,
                  1826,
                  1827,
                  2120,
                  1992,
                  1828,
                  1829,
                  1830,
                  1831,
                  1832,
                  1833,
                  1775,
                  2167,
                  2519,
                  1834,
                  1993,
                  1776,
                  1777,
                  1697,
                  1664,
                  1663,
                  1698
                ]
              },
              {
                "title": "dev-mode",
                "children": [
                  1656,
                  1652,
                  1651
                ]
              },
              {
                "title": "properties",
                "children": [
                  1665,
                  1666
                ]
              },
              {
                "title": "rendering",
                "children": [
                  1701,
                  1693
                ]
              },
              {
                "title": "styles",
                "children": [
                  1667,
                  1668
                ]
              },
              {
                "title": "updates",
                "children": [
                  1705,
                  1704
                ]
              }
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              1745,
              1669
            ],
            "categories": [
              {
                "title": "attributes",
                "children": [
                  1669
                ]
              },
              {
                "title": "updates",
                "children": [
                  1745
                ]
              }
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              1709,
              1780,
              2107,
              2100,
              2125,
              1994,
              1835,
              1725,
              2110,
              2520,
              1778,
              1998,
              1838,
              2001,
              1718,
              2004,
              1716,
              1723,
              2061,
              1720,
              1758,
              2522,
              2104,
              1848,
              1851,
              1855,
              1857,
              1860,
              1864,
              1866,
              1868,
              1871,
              1880,
              2007,
              1747,
              1890,
              1893,
              1897,
              2010,
              1899,
              1902,
              1906,
              1910,
              2012,
              2017,
              2020,
              2023,
              2026,
              2029,
              1914,
              2032,
              1739,
              2128,
              2131,
              2141,
              1917,
              2113,
              1920,
              1923,
              1927,
              2034,
              1712,
              1793,
              2038,
              2151,
              2115,
              1930,
              1933,
              1731,
              1737,
              1935,
              1941,
              1947,
              1950,
              1956,
              1960,
              1965,
              1968,
              1971,
              1749,
              1974,
              1752,
              1755,
              1978,
              1741,
              1660,
              1671,
              1691,
              1694,
              1675,
              1688
            ],
            "categories": [
              {
                "title": "Other",
                "children": [
                  1780,
                  2107,
                  2100,
                  2125,
                  1994,
                  1835,
                  2110,
                  2520,
                  1778,
                  1998,
                  1838,
                  2001,
                  2004,
                  2061,
                  2522,
                  2104,
                  1848,
                  1851,
                  1855,
                  1857,
                  1860,
                  1864,
                  1866,
                  1868,
                  1871,
                  1880,
                  2007,
                  1890,
                  1893,
                  1897,
                  2010,
                  1899,
                  1902,
                  1906,
                  1910,
                  2012,
                  2017,
                  2020,
                  2023,
                  2026,
                  2029,
                  1914,
                  2032,
                  2128,
                  2131,
                  2141,
                  1917,
                  2113,
                  1920,
                  1923,
                  1927,
                  2034,
                  1793,
                  2038,
                  2151,
                  2115,
                  1930,
                  1933,
                  1935,
                  1941,
                  1947,
                  1950,
                  1956,
                  1960,
                  1965,
                  1968,
                  1971,
                  1974,
                  1978,
                  1660,
                  1691
                ]
              },
              {
                "title": "attributes",
                "children": [
                  1725
                ]
              },
              {
                "title": "controllers",
                "children": [
                  1709,
                  1712
                ]
              },
              {
                "title": "lifecycle",
                "children": [
                  1718,
                  1723
                ]
              },
              {
                "title": "properties",
                "children": [
                  1671,
                  1675,
                  1688
                ]
              },
              {
                "title": "rendering",
                "children": [
                  1716
                ]
              },
              {
                "title": "styles",
                "children": [
                  1694
                ]
              },
              {
                "title": "updates",
                "children": [
                  1720,
                  1758,
                  1747,
                  1739,
                  1731,
                  1737,
                  1749,
                  1752,
                  1755,
                  1741
                ]
              }
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 302,
            "character": 22,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L302",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "HTMLElement",
            "externalLocation": {
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
            }
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 709,
            "name": "LitElement",
            "location": {
              "page": "LitElement",
              "anchor": "LitElement"
            }
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "id": 1597,
            "name": "ReactiveControllerHost",
            "location": {
              "page": "controllers",
              "anchor": "ReactiveControllerHost"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "ReactiveElement"
        },
        "heritage": [
          {
            "type": "reference",
            "name": "HTMLElement",
            "externalLocation": {
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
            }
          }
        ],
        "expandedCategories": [
          {
            "anchor": "ReactiveElement/attributes",
            "title": "Attributes",
            "children": [
              {
                "id": 1725,
                "name": "attributeChangedCallback",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "comment": {
                  "shortText": "Synchronizes property values when attributes change."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 878,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L878",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1726,
                    "name": "attributeChangedCallback",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Synchronizes property values when attributes change."
                    },
                    "parameters": [
                      {
                        "id": 1727,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 1728,
                        "name": "_old",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": null
                            },
                            {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1729,
                        "name": "value",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": null
                            },
                            {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          ]
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.attributeChangedCallback"
                }
              },
              {
                "id": 1669,
                "name": "observedAttributes",
                "kind": 262144,
                "kindString": "Accessor",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Returns a list of attributes corresponding to the registered properties.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 440,
                    "character": 13,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L440",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                "getSignature": [
                  {
                    "id": 1670,
                    "name": "observedAttributes",
                    "kind": 524288,
                    "kindString": "Get signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns a list of attributes corresponding to the registered properties.",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "category",
                          "text": "attributes\n"
                        }
                      ]
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.observedAttributes"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/controllers",
            "title": "Controllers",
            "children": [
              {
                "id": 1709,
                "name": "addController",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 771,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L771",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1710,
                    "name": "addController",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "parameters": [
                      {
                        "id": 1711,
                        "name": "controller",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 1588,
                          "name": "ReactiveController",
                          "location": {
                            "page": "controllers",
                            "anchor": "ReactiveController"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "implementationOf": {
                      "type": "reference",
                      "id": 1599,
                      "name": "ReactiveControllerHost.addController"
                    }
                  }
                ],
                "implementationOf": {
                  "type": "reference",
                  "id": 1598,
                  "name": "ReactiveControllerHost.addController",
                  "location": {
                    "page": "controllers",
                    "anchor": "ReactiveControllerHost.addController"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.addController"
                }
              },
              {
                "id": 1712,
                "name": "removeController",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 785,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L785",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1713,
                    "name": "removeController",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "parameters": [
                      {
                        "id": 1714,
                        "name": "controller",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 1588,
                          "name": "ReactiveController",
                          "location": {
                            "page": "controllers",
                            "anchor": "ReactiveController"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "implementationOf": {
                      "type": "reference",
                      "id": 1602,
                      "name": "ReactiveControllerHost.removeController"
                    }
                  }
                ],
                "implementationOf": {
                  "type": "reference",
                  "id": 1601,
                  "name": "ReactiveControllerHost.removeController",
                  "location": {
                    "page": "controllers",
                    "anchor": "ReactiveControllerHost.removeController"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.removeController"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/dev-mode",
            "title": "Dev mode",
            "children": [
              {
                "id": 1656,
                "name": "disableWarning",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Disable the given warning kind for this class.",
                  "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 353,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L353",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 1657,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 1658,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "comment": {
                          "shortText": "Disable the given warning kind for this class.",
                          "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
                          "tags": [
                            {
                              "tag": "nocollapse",
                              "text": ""
                            },
                            {
                              "tag": "category",
                              "text": "dev-mode\n"
                            }
                          ]
                        },
                        "parameters": [
                          {
                            "id": 1659,
                            "name": "warningKind",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "id": 1645,
                              "name": "WarningKind",
                              "location": {
                                "page": "misc",
                                "anchor": "WarningKind"
                              }
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.disableWarning"
                }
              },
              {
                "id": 1651,
                "name": "enabledWarnings",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Read or set all the enabled warning kinds for this class.",
                  "text": "This property is only used in development builds.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 315,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L315",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 1645,
                    "name": "WarningKind",
                    "location": {
                      "page": "misc",
                      "anchor": "WarningKind"
                    }
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.enabledWarnings"
                }
              },
              {
                "id": 1652,
                "name": "enableWarning",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Enable the given warning kind for this class.",
                  "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 334,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L334",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 1653,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 1654,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "comment": {
                          "shortText": "Enable the given warning kind for this class.",
                          "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
                          "tags": [
                            {
                              "tag": "nocollapse",
                              "text": ""
                            },
                            {
                              "tag": "category",
                              "text": "dev-mode\n"
                            }
                          ]
                        },
                        "parameters": [
                          {
                            "id": 1655,
                            "name": "warningKind",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "id": 1645,
                              "name": "WarningKind",
                              "location": {
                                "page": "misc",
                                "anchor": "WarningKind"
                              }
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.enableWarning"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/lifecycle",
            "title": "Lifecycle",
            "children": [
              {
                "id": 1718,
                "name": "connectedCallback",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "comment": {
                  "shortText": "On first connection, creates the element's renderRoot, sets up\nelement styling, and enables updating."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 843,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L843",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1719,
                    "name": "connectedCallback",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "On first connection, creates the element's renderRoot, sets up\nelement styling, and enables updating."
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.connectedCallback"
                }
              },
              {
                "id": 1723,
                "name": "disconnectedCallback",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "comment": {
                  "shortText": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 870,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L870",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1724,
                    "name": "disconnectedCallback",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future."
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.disconnectedCallback"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/Other",
            "title": "Other",
            "children": [
              {
                "id": 1660,
                "name": "addInitializer",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isStatic": true
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 358,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L358",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1661,
                    "name": "addInitializer",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": "\n"
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 1662,
                        "name": "initializer",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 1646,
                          "name": "Initializer",
                          "location": {
                            "page": "misc",
                            "anchor": "Initializer"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.addInitializer"
                }
              },
              {
                "id": 1691,
                "name": "finalize",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 585,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L585",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1692,
                    "name": "finalize",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": "\n"
                        }
                      ]
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.finalize"
                }
              },
              {
                "id": 1698,
                "name": "finalized",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Marks class as having finished creating properties."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 382,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L382",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.finalized"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/properties",
            "title": "Properties",
            "children": [
              {
                "id": 1671,
                "name": "createProperty",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
                  "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 481,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L481",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1672,
                    "name": "createProperty",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
                      "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 1673,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      },
                      {
                        "id": 1674,
                        "name": "options",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "id": 1618,
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.createProperty"
                }
              },
              {
                "id": 1665,
                "name": "elementProperties",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Memoized list of all element properties, including any superclass properties.\nCreated lazily on user subclasses when finalizing the class.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 390,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L390",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "PropertyDeclarationMap"
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.elementProperties"
                }
              },
              {
                "id": 1675,
                "name": "getPropertyDescriptor",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                  "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 536,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L536",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1676,
                    "name": "getPropertyDescriptor",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                      "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 1677,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      },
                      {
                        "id": 1678,
                        "name": "key",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1679,
                        "name": "options",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 1618,
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 1680,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 1686,
                            "name": "configurable",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                                "line": 309,
                                "character": 8
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 1687,
                            "name": "enumerable",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                                "line": 310,
                                "character": 8
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 1681,
                            "name": "get",
                            "kind": 2048,
                            "kindString": "Method",
                            "flags": {},
                            "signatures": [
                              {
                                "id": 1682,
                                "name": "get",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            ]
                          },
                          {
                            "id": 1683,
                            "name": "set",
                            "kind": 2048,
                            "kindString": "Method",
                            "flags": {},
                            "signatures": [
                              {
                                "id": 1684,
                                "name": "set",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 1685,
                                    "name": "value",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "unknown"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "void"
                                }
                              }
                            ]
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [
                              1686,
                              1687
                            ]
                          },
                          {
                            "title": "Methods",
                            "kind": 2048,
                            "children": [
                              1681,
                              1683
                            ]
                          }
                        ]
                      }
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.getPropertyDescriptor"
                }
              },
              {
                "id": 1688,
                "name": "getPropertyOptions",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                  "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    },
                    {
                      "tag": "final",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 575,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L575",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1689,
                    "name": "getPropertyOptions",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                      "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "final",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 1690,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 1618,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.getPropertyOptions"
                }
              },
              {
                "id": 1666,
                "name": "properties",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "User-supplied object that maps property names to `PropertyDeclaration`\nobjects containing options for configuring reactive properties. When\na reactive property is set the element will update and render.",
                  "text": "By default properties are public fields, and as such, they should be\nconsidered as primarily settable by element users, either via attribute or\nthe property itself.\n\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state: true` option. Properties\nmarked as `state` do not reflect from the corresponding attribute\n\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating\npublic properties should typically not be done for non-primitive (object or\narray) properties. In other cases when an element needs to manage state, a\nprivate property set with the `state: true` option should be used. When\nneeded, state properties can be initialized via public properties to\nfacilitate complex interactions.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 417,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L417",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 1631,
                  "name": "PropertyDeclarations",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "PropertyDeclarations"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.properties"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/rendering",
            "title": "Rendering",
            "children": [
              {
                "id": 1716,
                "name": "createRenderRoot",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
                  "returns": "Returns a node into which to render."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 825,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L825",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1717,
                    "name": "createRenderRoot",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
                      "returns": "Returns a node into which to render."
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "Element",
                          "externalLocation": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                          }
                        },
                        {
                          "type": "reference",
                          "name": "ShadowRoot",
                          "externalLocation": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                          }
                        }
                      ]
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.createRenderRoot"
                }
              },
              {
                "id": 1701,
                "name": "renderRoot",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "comment": {
                  "shortText": "Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 685,
                    "character": 11,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L685",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "HTMLElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "ShadowRoot",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                      }
                    }
                  ]
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.renderRoot"
                }
              },
              {
                "id": 1693,
                "name": "shadowRootOptions",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Options used when calling `attachShadow`. Set this property to customize\nthe options for the shadowRoot; for example, to create a closed\nshadowRoot: `{mode: 'closed'}`.",
                  "text": "Note, these options are used in `createRenderRoot`. If this method\nis customized, options should be respected if possible.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 645,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L645",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "ShadowRootInit",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#parameters"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.shadowRootOptions"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/styles",
            "title": "Styles",
            "children": [
              {
                "id": 1667,
                "name": "elementStyles",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Memoized list of all element styles.\nCreated lazily on user subclasses when finalizing the class.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 425,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L425",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 2526,
                    "name": "CSSResultOrNative",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultOrNative"
                    }
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.elementStyles"
                }
              },
              {
                "id": 1694,
                "name": "finalizeStyles",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
                  "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 661,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L661",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1695,
                    "name": "finalizeStyles",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
                      "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 1696,
                        "name": "styles",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "id": 2528,
                          "name": "CSSResultGroup",
                          "location": {
                            "page": "styles",
                            "anchor": "CSSResultGroup"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "id": 2526,
                        "name": "CSSResultOrNative",
                        "location": {
                          "page": "styles",
                          "anchor": "CSSResultOrNative"
                        }
                      }
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.finalizeStyles"
                }
              },
              {
                "id": 1668,
                "name": "styles",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Array of styles to apply to the element. The styles should be defined\nusing the [`css`](/docs/api/styles/#css) tag function or via constructible stylesheets.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 433,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L433",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2528,
                  "name": "CSSResultGroup",
                  "location": {
                    "page": "styles",
                    "anchor": "CSSResultGroup"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.styles"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/updates",
            "title": "Updates",
            "children": [
              {
                "id": 1720,
                "name": "enableUpdating",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 862,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L862",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1721,
                    "name": "enableUpdating",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
                    },
                    "parameters": [
                      {
                        "id": 1722,
                        "name": "_requestedUpdate",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.enableUpdating"
                }
              },
              {
                "id": 1758,
                "name": "firstUpdated",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1282,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1282",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1759,
                    "name": "firstUpdated",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                      "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                    },
                    "parameters": [
                      {
                        "id": 1760,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.firstUpdated"
                }
              },
              {
                "id": 1747,
                "name": "getUpdateComplete",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Override point for the `updateComplete` promise.",
                  "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1223,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1223",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1748,
                    "name": "getUpdateComplete",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Override point for the `updateComplete` promise.",
                      "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
                      "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      ],
                      "name": "Promise"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.getUpdateComplete"
                }
              },
              {
                "id": 1705,
                "name": "hasUpdated",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 718,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L718",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.hasUpdated"
                }
              },
              {
                "id": 1704,
                "name": "isUpdatePending",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 713,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L713",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.isUpdatePending"
                }
              },
              {
                "id": 1739,
                "name": "performUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                  "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1078,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1078",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1740,
                    "name": "performUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                      "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Promise"
                        }
                      ]
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.performUpdate"
                }
              },
              {
                "id": 1731,
                "name": "requestUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "comment": {
                  "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 973,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L973",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1732,
                    "name": "requestUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
                    },
                    "parameters": [
                      {
                        "id": 1733,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "text": "name of requesting property"
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      },
                      {
                        "id": 1734,
                        "name": "oldValue",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "text": "old value of requesting property"
                        },
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      },
                      {
                        "id": 1735,
                        "name": "options",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "text": "property options to use instead of the previously\n    configured options"
                        },
                        "type": {
                          "type": "reference",
                          "id": 1618,
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "implementationOf": {
                      "type": "reference",
                      "id": 1605,
                      "name": "ReactiveControllerHost.requestUpdate"
                    }
                  }
                ],
                "implementationOf": {
                  "type": "reference",
                  "id": 1604,
                  "name": "ReactiveControllerHost.requestUpdate",
                  "location": {
                    "page": "controllers",
                    "anchor": "ReactiveControllerHost.requestUpdate"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.requestUpdate"
                }
              },
              {
                "id": 1737,
                "name": "scheduleUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
                  "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1057,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1057",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1738,
                    "name": "scheduleUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
                      "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Promise"
                        }
                      ]
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.scheduleUpdate"
                }
              },
              {
                "id": 1749,
                "name": "shouldUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1235,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1235",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1750,
                    "name": "shouldUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                    },
                    "parameters": [
                      {
                        "id": 1751,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.shouldUpdate"
                }
              },
              {
                "id": 1752,
                "name": "update",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Updates the element. This method reflects property values to attributes.\nIt can be overridden to render and keep updated element DOM.\nSetting properties inside this method will *not* trigger\nanother update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1248,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1248",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1753,
                    "name": "update",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Updates the element. This method reflects property values to attributes.\nIt can be overridden to render and keep updated element DOM.\nSetting properties inside this method will *not* trigger\nanother update."
                    },
                    "parameters": [
                      {
                        "id": 1754,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.update"
                }
              },
              {
                "id": 1745,
                "name": "updateComplete",
                "kind": 262144,
                "kindString": "Accessor",
                "flags": {},
                "comment": {
                  "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                  "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1196,
                    "character": 6,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1196",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ],
                  "name": "Promise"
                },
                "getSignature": [
                  {
                    "id": 1746,
                    "name": "updateComplete",
                    "kind": 524288,
                    "kindString": "Get signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                      "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
                      "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update.",
                      "tags": [
                        {
                          "tag": "category",
                          "text": "updates\n"
                        }
                      ]
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      ],
                      "name": "Promise"
                    },
                    "implementationOf": {
                      "type": "reference",
                      "id": 1606,
                      "name": "ReactiveControllerHost.updateComplete",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveControllerHost.updateComplete"
                      }
                    }
                  }
                ],
                "implementationOf": {
                  "type": "reference",
                  "id": 1606,
                  "name": "ReactiveControllerHost.updateComplete",
                  "location": {
                    "page": "controllers",
                    "anchor": "ReactiveControllerHost.updateComplete"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.updateComplete"
                }
              },
              {
                "id": 1755,
                "name": "updated",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1270,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1270",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1756,
                    "name": "updated",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                      "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                    },
                    "parameters": [
                      {
                        "id": 1757,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.updated"
                }
              },
              {
                "id": 1741,
                "name": "willUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1146,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1146",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 1742,
                    "name": "willUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "parameters": [
                      {
                        "id": 1743,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.willUpdate"
                }
              }
            ]
          }
        ]
      },
      {
        "id": 708,
        "name": "UpdatingElement",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-element/src/lit-element.ts",
            "line": 56,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L56",
            "moduleSpecifier": "lit-element/lit-element.js"
          }
        ],
        "type": {
          "type": "query",
          "queryType": {
            "type": "reference",
            "id": 1650,
            "name": "ReactiveElement",
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement"
            }
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "UpdatingElement"
        }
      },
      {
        "id": 1607,
        "name": "ComplexAttributeConverter",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "Converts property values to and from attribute values."
        },
        "children": [
          {
            "id": 1608,
            "name": "fromAttribute",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Function called to convert an attribute value to a property\nvalue."
            },
            "children": [],
            "signatures": [
              {
                "id": 1609,
                "name": "fromAttribute",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Function called to convert an attribute value to a property\nvalue."
                },
                "parameters": [
                  {
                    "id": 1610,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  },
                  {
                    "id": 1611,
                    "name": "type",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "TypeHint"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "Type"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ComplexAttributeConverter.fromAttribute"
            }
          },
          {
            "id": 1612,
            "name": "toAttribute",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Function called to convert a property value to an attribute\nvalue.",
              "text": "It returns unknown instead of string, to be compatible with\nhttps://github.com/WICG/trusted-types (and similar efforts).\n"
            },
            "children": [],
            "signatures": [
              {
                "id": 1613,
                "name": "toAttribute",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Function called to convert a property value to an attribute\nvalue.",
                  "text": "It returns unknown instead of string, to be compatible with\nhttps://github.com/WICG/trusted-types (and similar efforts).\n"
                },
                "parameters": [
                  {
                    "id": 1614,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    }
                  },
                  {
                    "id": 1615,
                    "name": "type",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "TypeHint"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ComplexAttributeConverter.toAttribute"
            }
          }
        ],
        "groups": [
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              1608,
              1612
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 105,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L105",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "typeParameter": [
          {
            "id": 1616,
            "name": "Type",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            }
          },
          {
            "id": 1617,
            "name": "TypeHint",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "ComplexAttributeConverter"
        }
      },
      {
        "id": 1618,
        "name": "PropertyDeclaration",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "Defines options for a property accessor."
        },
        "children": [
          {
            "id": 1620,
            "name": "attribute",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates how and whether the property becomes an observed attribute.\nIf the value is `false`, the property is not added to `observedAttributes`.\nIf true or absent, the lowercased property name is observed (e.g. `fooBar`\nbecomes `foobar`). If a string, the string value is observed (e.g\n`attribute: 'foo-bar'`)."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 146,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L146",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.attribute"
            }
          },
          {
            "id": 1622,
            "name": "converter",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates how to convert the attribute to/from a property. If this value\nis a function, it is used to convert the attribute value a the property\nvalue. If it's an object, it can have keys for `fromAttribute` and\n`toAttribute`. If no `toAttribute` function is provided and\n`reflect` is set to `true`, the property value is set directly to the\nattribute. A default `converter` is used if none is provided; it supports\n`Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\nwhen a property changes and the converter is used to update the attribute,\nthe property is never updated again as a result of the attribute changing,\nand vice versa."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 167,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L167",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Type"
                },
                {
                  "type": "reference",
                  "name": "TypeHint"
                }
              ],
              "name": "AttributeConverter"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.converter"
            }
          },
          {
            "id": 1628,
            "name": "noAccessor",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates whether an accessor will be created for this property. By\ndefault, an accessor will be generated for this property that requests an\nupdate when set. If this flag is `true`, no accessor will be created, and\nit will be the user's responsibility to call\n`this.requestUpdate(propertyName, oldValue)` to request an update when\nthe property changes."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 193,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L193",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.noAccessor"
            }
          },
          {
            "id": 1623,
            "name": "reflect",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates if the property should reflect to an attribute.\nIf `true`, when the property is set, the attribute is set using the\nattribute name determined according to the rules for the `attribute`\nproperty option and the value of the property converted using the rules\nfrom the `converter` property option."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 176,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L176",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.reflect"
            }
          },
          {
            "id": 1619,
            "name": "state",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "When set to `true`, indicates the property is internal private state. The\nproperty should not be set by users. When using TypeScript, this property\nshould be marked as `private` or `protected`, and it is also a common\npractice to use a leading `_` in the name. The property is not added to\n`observedAttributes`."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 137,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L137",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.state"
            }
          },
          {
            "id": 1621,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates the type of the property. This is used only as a hint for the\n`converter` to determine how to convert the attribute\nto/from a property."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 153,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L153",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "TypeHint"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.type"
            }
          },
          {
            "id": 1624,
            "name": "hasChanged",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "A function that indicates if a property should be considered changed when\nit is set. The function should take the `newValue` and `oldValue` and\nreturn `true` if an update should be requested."
            },
            "children": [],
            "signatures": [
              {
                "id": 1625,
                "name": "hasChanged",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "A function that indicates if a property should be considered changed when\nit is set. The function should take the `newValue` and `oldValue` and\nreturn `true` if an update should be requested."
                },
                "parameters": [
                  {
                    "id": 1626,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    }
                  },
                  {
                    "id": 1627,
                    "name": "oldValue",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.hasChanged"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              1620,
              1622,
              1628,
              1623,
              1619,
              1621
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              1624
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 129,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L129",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "typeParameter": [
          {
            "id": 1629,
            "name": "Type",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            }
          },
          {
            "id": 1630,
            "name": "TypeHint",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "PropertyDeclaration"
        }
      },
      {
        "id": 1631,
        "name": "PropertyDeclarations",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "Map of properties to PropertyDeclaration options. For each property an\naccessor is made, and the property is processed according to the\nPropertyDeclaration options."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 201,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L201",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "indexSignature": {
          "id": 1632,
          "name": "__index",
          "kind": 8192,
          "kindString": "Index signature",
          "flags": {},
          "parameters": [
            {
              "id": 1633,
              "name": "key",
              "kind": 32768,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "reference",
            "id": 1618,
            "name": "PropertyDeclaration",
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration"
            }
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "PropertyDeclarations"
        }
      },
      {
        "id": 1634,
        "name": "PropertyValues",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "Map of changed properties with old values. Takes an optional generic\ninterface corresponding to the declared element properties."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 214,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L214",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "typeParameter": [
          {
            "id": 1635,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "conditional",
          "checkType": {
            "type": "typeOperator",
            "operator": "keyof",
            "target": {
              "type": "reference",
              "name": "T"
            }
          },
          "extendsType": {
            "type": "reference",
            "name": "PropertyKey"
          },
          "trueType": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "typeOperator",
                "operator": "keyof",
                "target": {
                  "type": "reference",
                  "name": "T"
                }
              },
              {
                "type": "intrinsic",
                "name": "unknown"
              }
            ],
            "name": "Map"
          },
          "falseType": {
            "type": "intrinsic",
            "name": "never"
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "PropertyValues"
        }
      }
    ]
  },
  {
    "slug": "templates",
    "title": "Templates",
    "items": [
      {
        "id": 2576,
        "name": "html",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Interprets a template literal as an HTML template that can efficiently\nrender to and update a container."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 314,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L314",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "signatures": [
          {
            "id": 2577,
            "name": "html",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Interprets a template literal as an HTML template that can efficiently\nrender to and update a container."
            },
            "parameters": [
              {
                "id": 2578,
                "name": "strings",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 2579,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 2562,
              "typeArguments": [
                {
                  "type": "literal",
                  "value": 1
                }
              ],
              "name": "TemplateResult",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "html"
        }
      },
      {
        "id": 2585,
        "name": "nothing",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A sentinel value that signals a ChildPart to fully clear its content."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 331,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L331",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "typeOperator",
          "operator": "unique",
          "target": {
            "type": "intrinsic",
            "name": "symbol"
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "nothing"
        }
      },
      {
        "id": 2596,
        "name": "render",
        "kind": 32,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Renders a value, usually a lit-html TemplateResult, to the container."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 395,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L395",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 2597,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 2601,
                "name": "createSanitizer",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                    "line": 128,
                    "character": 4
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2552,
                  "name": "SanitizerFactory",
                  "location": {
                    "page": "templates",
                    "anchor": "SanitizerFactory"
                  }
                }
              },
              {
                "id": 2602,
                "name": "_testOnlyClearSanitizerFactoryDoNotCallOrElse",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                    "line": 129,
                    "character": 4
                  }
                ],
                "signatures": [
                  {
                    "id": 2603,
                    "name": "_testOnlyClearSanitizerFactoryDoNotCallOrElse",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              },
              {
                "id": 2598,
                "name": "setSanitizer",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                    "line": 127,
                    "character": 4
                  }
                ],
                "signatures": [
                  {
                    "id": 2599,
                    "name": "setSanitizer",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 2600,
                        "name": "newSanitizer",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 2552,
                          "name": "SanitizerFactory",
                          "location": {
                            "page": "templates",
                            "anchor": "SanitizerFactory"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "kind": 1024,
                "children": [
                  2601
                ]
              },
              {
                "title": "Methods",
                "kind": 2048,
                "children": [
                  2602,
                  2598
                ]
              }
            ],
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                "line": 125,
                "character": 29
              }
            ],
            "signatures": [
              {
                "id": 2604,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Renders a value, usually a lit-html TemplateResult, to the container."
                },
                "parameters": [
                  {
                    "id": 2605,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  },
                  {
                    "id": 2606,
                    "name": "container",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "HTMLElement",
                          "externalLocation": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                          }
                        },
                        {
                          "type": "reference",
                          "name": "DocumentFragment",
                          "externalLocation": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "id": 2607,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "shortText": "\n"
                    },
                    "type": {
                      "type": "reference",
                      "id": 2586,
                      "name": "RenderOptions",
                      "location": {
                        "page": "LitElement",
                        "anchor": "RenderOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2619,
                  "name": "RootPart",
                  "location": {
                    "page": "misc",
                    "anchor": "RootPart"
                  }
                }
              }
            ]
          }
        },
        "signatures": [
          {
            "id": 2604,
            "name": "render",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Renders a value, usually a lit-html TemplateResult, to the container."
            },
            "parameters": [
              {
                "id": 2605,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 2606,
                "name": "container",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "HTMLElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "DocumentFragment",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"
                      }
                    }
                  ]
                }
              },
              {
                "id": 2607,
                "name": "options",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "shortText": "\n"
                },
                "type": {
                  "type": "reference",
                  "id": 2586,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 2619,
              "name": "RootPart",
              "location": {
                "page": "misc",
                "anchor": "RootPart"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "render"
        }
      },
      {
        "id": 2580,
        "name": "svg",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Interprets a template literal as an SVG template that can efficiently\nrender to and update a container."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 320,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L320",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "signatures": [
          {
            "id": 2581,
            "name": "svg",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Interprets a template literal as an SVG template that can efficiently\nrender to and update a container."
            },
            "parameters": [
              {
                "id": 2582,
                "name": "strings",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 2583,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 2562,
              "typeArguments": [
                {
                  "type": "literal",
                  "value": 2
                }
              ],
              "name": "TemplateResult",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "svg"
        }
      },
      {
        "id": 2552,
        "name": "SanitizerFactory",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 87,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L87",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 2553,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "comment": {
              "shortText": "Used to sanitize any value before it is written into the DOM. This can be\nused to implement a security policy of allowed and disallowed values in\norder to prevent XSS attacks.",
              "text": "One way of using this callback would be to check attributes and properties\nagainst a list of high risk fields, and require that values written to such\nfields be instances of a class which is safe by construction. Closure's Safe\nHTML Types is one implementation of this technique (\nhttps://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\nThe TrustedTypes polyfill in API-only mode could also be used as a basis\nfor this technique (https://github.com/WICG/trusted-types).\n",
              "returns": "A function that will sanitize this class of writes.\n"
            },
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                "line": 29,
                "character": 39
              }
            ],
            "signatures": [
              {
                "id": 2554,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Used to sanitize any value before it is written into the DOM. This can be\nused to implement a security policy of allowed and disallowed values in\norder to prevent XSS attacks.",
                  "text": "One way of using this callback would be to check attributes and properties\nagainst a list of high risk fields, and require that values written to such\nfields be instances of a class which is safe by construction. Closure's Safe\nHTML Types is one implementation of this technique (\nhttps://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\nThe TrustedTypes polyfill in API-only mode could also be used as a basis\nfor this technique (https://github.com/WICG/trusted-types).\n",
                  "returns": "A function that will sanitize this class of writes.\n"
                },
                "parameters": [
                  {
                    "id": 2555,
                    "name": "node",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "shortText": "The HTML node (usually either a #text node or an Element) that\n    is being written to. Note that this is just an exemplar node, the write\n    may take place against another instance of the same class of node."
                    },
                    "type": {
                      "type": "reference",
                      "name": "Node"
                    }
                  },
                  {
                    "id": 2556,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "shortText": "The name of an attribute or property (for example, 'href')."
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 2557,
                    "name": "type",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "shortText": "Indicates whether the write that's about to be performed will\n    be to a property or a node."
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "property"
                        },
                        {
                          "type": "literal",
                          "value": "attribute"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2558,
                  "name": "ValueSanitizer",
                  "location": {
                    "page": "misc",
                    "anchor": "ValueSanitizer"
                  }
                }
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "SanitizerFactory"
        }
      },
      {
        "id": 2569,
        "name": "SVGTemplateResult",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 268,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L268",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "reference",
          "id": 2562,
          "typeArguments": [
            {
              "type": "query",
              "queryType": {
                "type": "reference",
                "name": "SVG_RESULT"
              }
            }
          ],
          "name": "TemplateResult",
          "location": {
            "page": "templates",
            "anchor": "TemplateResult"
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "SVGTemplateResult"
        }
      },
      {
        "id": 2562,
        "name": "TemplateResult",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "The return type of the template tag functions."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 259,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L259",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "typeParameter": [
          {
            "id": 2567,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "ResultType"
            },
            "default": {
              "type": "reference",
              "name": "ResultType"
            }
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 2563,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 2564,
                "name": "_$litType$",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                    "line": 50,
                    "character": 4
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "T"
                }
              },
              {
                "id": 2565,
                "name": "strings",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                    "line": 51,
                    "character": 4
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 2566,
                "name": "values",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                    "line": 52,
                    "character": 4
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "kind": 1024,
                "children": [
                  2564,
                  2565,
                  2566
                ]
              }
            ],
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                "line": 49,
                "character": 72
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "TemplateResult"
        }
      }
    ]
  },
  {
    "slug": "styles",
    "title": "Styles",
    "items": [
      {
        "id": 2545,
        "name": "adoptStyles",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Applies the given styles to a `shadowRoot`. When Shadow DOM is\navailable but `adoptedStyleSheets` is not, styles are appended to the\n`shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\nNote, when shimming is used, any styles that are subsequently placed into\nthe shadowRoot should be placed *before* any shimmed adopted styles. This\nwill match spec behavior that gives adopted sheets precedence over styles in\nshadowRoot."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 138,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L138",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "signatures": [
          {
            "id": 2546,
            "name": "adoptStyles",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Applies the given styles to a `shadowRoot`. When Shadow DOM is\navailable but `adoptedStyleSheets` is not, styles are appended to the\n`shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\nNote, when shimming is used, any styles that are subsequently placed into\nthe shadowRoot should be placed *before* any shimmed adopted styles. This\nwill match spec behavior that gives adopted sheets precedence over styles in\nshadowRoot."
            },
            "parameters": [
              {
                "id": 2547,
                "name": "renderRoot",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "ShadowRoot",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                  }
                }
              },
              {
                "id": 2548,
                "name": "styles",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 2526,
                    "name": "CSSResultOrNative",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultOrNative"
                    }
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "adoptStyles"
        }
      },
      {
        "id": 2541,
        "name": "css",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A template literal tag which can be used with LitElement's\n[`styles`](/docs/api/LitElement/#LitElement.styles) property to set element styles.",
          "text": "For security reasons, only literal string values and number may be used in\nembedded expressions. To incorporate non-literal values [`unsafeCSS`](/docs/api/styles/#unsafeCSS) may\nbe used inside an expression.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 115,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L115",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "signatures": [
          {
            "id": 2542,
            "name": "css",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A template literal tag which can be used with LitElement's\n[`styles`](/docs/api/LitElement/#LitElement.styles) property to set element styles.",
              "text": "For security reasons, only literal string values and number may be used in\nembedded expressions. To incorporate non-literal values [`unsafeCSS`](/docs/api/styles/#unsafeCSS) may\nbe used inside an expression.\n"
            },
            "parameters": [
              {
                "id": 2543,
                "name": "strings",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 2544,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      {
                        "type": "reference",
                        "id": 2528,
                        "name": "CSSResultGroup",
                        "location": {
                          "page": "styles",
                          "anchor": "CSSResultGroup"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 2529,
              "name": "CSSResult",
              "location": {
                "page": "styles",
                "anchor": "CSSResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "css"
        }
      },
      {
        "id": 2529,
        "name": "CSSResult",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "A container for a string of CSS text, that may be used to create a CSSStyleSheet.",
          "text": "CSSResult is the return value of `css`-tagged template literals and\n`unsafeCSS()`. In order to ensure that CSSResults are only created via the\n`css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n"
        },
        "children": [
          {
            "id": 2533,
            "name": "cssText",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/css-tag.ts",
                "line": 46,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L46",
                "moduleSpecifier": "reactive-element/css-tag.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "styles",
              "anchor": "CSSResult.cssText"
            }
          },
          {
            "id": 2534,
            "name": "styleSheet",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/css-tag.ts",
                "line": 59,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L59",
                "moduleSpecifier": "reactive-element/css-tag.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "name": "CSSStyleSheet",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet"
                  }
                }
              ]
            },
            "getSignature": [
              {
                "id": 2535,
                "name": "styleSheet",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "reference",
                      "name": "CSSStyleSheet",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet"
                      }
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "styles",
              "anchor": "CSSResult.styleSheet"
            }
          },
          {
            "id": 2536,
            "name": "toString",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/css-tag.ts",
                "line": 70,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L70",
                "moduleSpecifier": "reactive-element/css-tag.js"
              }
            ],
            "signatures": [
              {
                "id": 2537,
                "name": "toString",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "styles",
              "anchor": "CSSResult.toString"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              2530
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2532,
              2533
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              2534
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              2536
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 43,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L43",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResult"
        }
      },
      {
        "id": 2549,
        "name": "getCompatibleStyle",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 163,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L163",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "signatures": [
          {
            "id": 2550,
            "name": "getCompatibleStyle",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 2551,
                "name": "s",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 2526,
                  "name": "CSSResultOrNative",
                  "location": {
                    "page": "styles",
                    "anchor": "CSSResultOrNative"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 2526,
              "name": "CSSResultOrNative",
              "location": {
                "page": "styles",
                "anchor": "CSSResultOrNative"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "getCompatibleStyle"
        }
      },
      {
        "id": 2525,
        "name": "supportsAdoptingStyleSheets",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Whether the current browser supports `adoptedStyleSheets`."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 10,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L10",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "supportsAdoptingStyleSheets"
        }
      },
      {
        "id": 2538,
        "name": "unsafeCSS",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Wrap a value for interpolation in a [`css`](/docs/api/styles/#css) tagged template literal.",
          "text": "This is unsafe because untrusted CSS text can be used to phone home\nor exfiltrate data to an attacker controlled site. Take care to only use\nthis with trusted input.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 101,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L101",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "signatures": [
          {
            "id": 2539,
            "name": "unsafeCSS",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Wrap a value for interpolation in a [`css`](/docs/api/styles/#css) tagged template literal.",
              "text": "This is unsafe because untrusted CSS text can be used to phone home\nor exfiltrate data to an attacker controlled site. Take care to only use\nthis with trusted input.\n"
            },
            "parameters": [
              {
                "id": 2540,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 2529,
              "name": "CSSResult",
              "location": {
                "page": "styles",
                "anchor": "CSSResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "unsafeCSS"
        }
      },
      {
        "id": 2527,
        "name": "CSSResultArray",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 25,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L25",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "type": {
          "type": "array",
          "elementType": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "id": 2526,
                "name": "CSSResultOrNative",
                "location": {
                  "page": "styles",
                  "anchor": "CSSResultOrNative"
                }
              },
              {
                "type": "reference",
                "id": 2527,
                "name": "CSSResultArray",
                "location": {
                  "page": "styles",
                  "anchor": "CSSResultArray"
                }
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResultArray"
        }
      },
      {
        "id": 2528,
        "name": "CSSResultGroup",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "A single CSSResult, CSSStyleSheet, or an array or nested arrays of those."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 30,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L30",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "id": 2526,
              "name": "CSSResultOrNative",
              "location": {
                "page": "styles",
                "anchor": "CSSResultOrNative"
              }
            },
            {
              "type": "reference",
              "id": 2527,
              "name": "CSSResultArray",
              "location": {
                "page": "styles",
                "anchor": "CSSResultArray"
              }
            }
          ]
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResultGroup"
        }
      },
      {
        "id": 2526,
        "name": "CSSResultOrNative",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "A CSSResult or native CSSStyleSheet.",
          "text": "In browsers that support constructible CSS style sheets, CSSStyleSheet\nobject can be used for styling along side CSSResult from the `css`\ntemplate tag.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 23,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L23",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "id": 2529,
              "name": "CSSResult",
              "location": {
                "page": "styles",
                "anchor": "CSSResult"
              }
            },
            {
              "type": "reference",
              "name": "CSSStyleSheet",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet"
              }
            }
          ]
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResultOrNative"
        }
      }
    ]
  },
  {
    "slug": "decorators",
    "title": "Decorators",
    "items": [
      {
        "id": 54,
        "name": "customElement",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Class decorator factory that defines the decorated class as a custom element.",
          "text": "```js\n@customElement('my-element')\nclass MyElement extends LitElement {\n  render() {\n    return html``;\n  }\n}\n```"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/custom-element.ts",
            "line": 60,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/custom-element.ts#L60",
            "moduleSpecifier": "reactive-element/decorators/custom-element.js"
          }
        ],
        "signatures": [
          {
            "id": 55,
            "name": "customElement",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Class decorator factory that defines the decorated class as a custom element.",
              "text": "```js\n@customElement('my-element')\nclass MyElement extends LitElement {\n  render() {\n    return html``;\n  }\n}\n```"
            },
            "parameters": [
              {
                "id": 56,
                "name": "tagName",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "The tag name of the custom element to define.\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 57,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 58,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 59,
                        "name": "classOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "CustomElementClass"
                            },
                            {
                              "type": "reference",
                              "name": "ClassDescriptor"
                            }
                          ]
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "customElement"
        }
      },
      {
        "id": 80,
        "name": "eventOptions",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "Adds event listener options to a method used as an event listener in a\nlit-html template."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/event-options.ts",
            "line": 47,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/event-options.ts#L47",
            "moduleSpecifier": "reactive-element/decorators/event-options.js"
          }
        ],
        "signatures": [
          {
            "id": 81,
            "name": "eventOptions",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Adds event listener options to a method used as an event listener in a\nlit-html template."
            },
            "parameters": [
              {
                "id": 82,
                "name": "options",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "An object that specifies event listener options as accepted by\n`EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n\nCurrent browsers support the `capture`, `passive`, and `once` options. See:\nhttps://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n\n```ts\nclass MyElement {\n  clicked = false;\n\n  render() {\n    return html`\n      <div @click=${this._onClick}`>\n        <button></button>\n      </div>\n    `;\n  }\n\n  @eventOptions({capture: true})\n  _onClick(e) {\n    this.clicked = true;\n  }\n}\n```"
                },
                "type": {
                  "type": "reference",
                  "name": "AddEventListenerOptions"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 83,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/decorators/event-options.d.ts",
                    "line": 37,
                    "character": 72
                  }
                ],
                "signatures": [
                  {
                    "id": 84,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Adds event listener options to a method used as an event listener in a\nlit-html template."
                    },
                    "parameters": [
                      {
                        "id": 85,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "id": 1650,
                              "name": "ReactiveElement",
                              "location": {
                                "page": "ReactiveElement",
                                "anchor": "ReactiveElement"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 86,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "eventOptions"
        }
      },
      {
        "id": 60,
        "name": "property",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "A property decorator which creates a reactive property that reflects a\ncorresponding attribute value. When a decorated property is set\nthe element will update and render. A [`PropertyDeclaration`](/docs/api/ReactiveElement/#PropertyDeclaration) may\noptionally be supplied to configure property features.",
          "text": "This decorator should only be used for public fields. As public fields,\nproperties should be considered as primarily settable by element users,\neither via attribute or the property itself.\n\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state` decorator.\n\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating public\nproperties should typically not be done for non-primitive (object or array)\nproperties. In other cases when an element needs to manage state, a private\nproperty decorated via the `state` decorator should be used. When needed,\nstate properties can be initialized via public properties to facilitate\ncomplex interactions.\n\n```ts\nclass MyElement {\n  @property({ type: Boolean })\n  clicked = false;\n}\n```",
          "tags": [
            {
              "tag": "exportdecorateditems",
              "text": "\n"
            }
          ]
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/property.ts",
            "line": 106,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/property.ts#L106",
            "moduleSpecifier": "reactive-element/decorators/property.js"
          }
        ],
        "signatures": [
          {
            "id": 61,
            "name": "property",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A property decorator which creates a reactive property that reflects a\ncorresponding attribute value. When a decorated property is set\nthe element will update and render. A [`PropertyDeclaration`](/docs/api/ReactiveElement/#PropertyDeclaration) may\noptionally be supplied to configure property features.",
              "text": "This decorator should only be used for public fields. As public fields,\nproperties should be considered as primarily settable by element users,\neither via attribute or the property itself.\n\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state` decorator.\n\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating public\nproperties should typically not be done for non-primitive (object or array)\nproperties. In other cases when an element needs to manage state, a private\nproperty decorated via the `state` decorator should be used. When needed,\nstate properties can be initialized via public properties to facilitate\ncomplex interactions.\n\n```ts\nclass MyElement {\n  @property({ type: Boolean })\n  clicked = false;\n}\n```",
              "tags": [
                {
                  "tag": "exportdecorateditems",
                  "text": "\n"
                }
              ]
            },
            "parameters": [
              {
                "id": 62,
                "name": "options",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "id": 1618,
                  "name": "PropertyDeclaration",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "PropertyDeclaration"
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 63,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/decorators/property.d.ts",
                    "line": 40,
                    "character": 65
                  }
                ],
                "signatures": [
                  {
                    "id": 64,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "A property decorator which creates a reactive property that reflects a\ncorresponding attribute value. When a decorated property is set\nthe element will update and render. A [[`PropertyDeclaration`]] may\noptionally be supplied to configure property features.",
                      "text": "This decorator should only be used for public fields. As public fields,\nproperties should be considered as primarily settable by element users,\neither via attribute or the property itself.\n\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the [[`state`]] decorator.\n\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating public\nproperties should typically not be done for non-primitive (object or array)\nproperties. In other cases when an element needs to manage state, a private\nproperty decorated via the [[`state`]] decorator should be used. When needed,\nstate properties can be initialized via public properties to facilitate\ncomplex interactions.\n\n```ts\nclass MyElement {\n  @property({ type: Boolean })\n  clicked = false;\n}\n```"
                    },
                    "parameters": [
                      {
                        "id": 65,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Object"
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 66,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "property"
        }
      },
      {
        "id": 87,
        "name": "query",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter that\nexecutes a querySelector on the element's renderRoot."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/query.ts",
            "line": 42,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/query.ts#L42",
            "moduleSpecifier": "reactive-element/decorators/query.js"
          }
        ],
        "signatures": [
          {
            "id": 88,
            "name": "query",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A property decorator that converts a class property into a getter that\nexecutes a querySelector on the element's renderRoot."
            },
            "parameters": [
              {
                "id": 89,
                "name": "selector",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "A DOMString containing one or more selectors to match."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 90,
                "name": "cache",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "An optional boolean which when true performs the DOM query only\n    once and caches the result.\n\nSee: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n\n```ts\nclass MyElement {\n  @query('#first')\n  first;\n\n  render() {\n    return html`\n      <div id=\"first\"></div>\n      <div id=\"second\"></div>\n    `;\n  }\n}\n```"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 91,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/decorators/query.d.ts",
                    "line": 32,
                    "character": 66
                  }
                ],
                "signatures": [
                  {
                    "id": 92,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "A property decorator that converts a class property into a getter that\nexecutes a querySelector on the element's renderRoot."
                    },
                    "parameters": [
                      {
                        "id": 93,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "id": 1650,
                              "name": "ReactiveElement",
                              "location": {
                                "page": "ReactiveElement",
                                "anchor": "ReactiveElement"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 94,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "query"
        }
      },
      {
        "id": 95,
        "name": "queryAll",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter\nthat executes a querySelectorAll on the element's renderRoot."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/query-all.ts",
            "line": 41,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/query-all.ts#L41",
            "moduleSpecifier": "reactive-element/decorators/query-all.js"
          }
        ],
        "signatures": [
          {
            "id": 96,
            "name": "queryAll",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A property decorator that converts a class property into a getter\nthat executes a querySelectorAll on the element's renderRoot."
            },
            "parameters": [
              {
                "id": 97,
                "name": "selector",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "A DOMString containing one or more selectors to match.\n\nSee:\nhttps://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n\n```ts\nclass MyElement {\n  @queryAll('div')\n  divs;\n\n  render() {\n    return html`\n      <div id=\"first\"></div>\n      <div id=\"second\"></div>\n    `;\n  }\n}\n```"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 98,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/decorators/query-all.d.ts",
                    "line": 31,
                    "character": 52
                  }
                ],
                "signatures": [
                  {
                    "id": 99,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "A property decorator that converts a class property into a getter\nthat executes a querySelectorAll on the element's renderRoot."
                    },
                    "parameters": [
                      {
                        "id": 100,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "id": 1650,
                              "name": "ReactiveElement",
                              "location": {
                                "page": "ReactiveElement",
                                "anchor": "ReactiveElement"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 101,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "queryAll"
        }
      },
      {
        "id": 109,
        "name": "queryAssignedNodes",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter that\nreturns the `assignedNodes` of the given named `slot`. Note, the type of\nthis property should be annotated as `NodeListOf<HTMLElement>`."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/query-assigned-nodes.ts",
            "line": 43,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/query-assigned-nodes.ts#L43",
            "moduleSpecifier": "reactive-element/decorators/query-assigned-nodes.js"
          }
        ],
        "signatures": [
          {
            "id": 110,
            "name": "queryAssignedNodes",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A property decorator that converts a class property into a getter that\nreturns the `assignedNodes` of the given named `slot`. Note, the type of\nthis property should be annotated as `NodeListOf<HTMLElement>`."
            },
            "parameters": [
              {
                "id": 111,
                "name": "slotName",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "A string name of the slot."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 112,
                "name": "flatten",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "A boolean which when true flattens the assigned nodes,\n    meaning any assigned nodes that are slot elements are replaced with their\n    assigned nodes."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 113,
                "name": "selector",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "A string which filters the results to elements that match\n    the given css selector.\n\n```ts\nclass MyElement {\n  @queryAssignedNodes('list', true, '.item')\n  listItems;\n\n  render() {\n    return html`\n      <slot name=\"list\"></slot>\n    `;\n  }\n}\n```"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 114,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/decorators/query-assigned-nodes.d.ts",
                    "line": 33,
                    "character": 101
                  }
                ],
                "signatures": [
                  {
                    "id": 115,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "A property decorator that converts a class property into a getter that\nreturns the `assignedNodes` of the given named `slot`. Note, the type of\nthis property should be annotated as `NodeListOf<HTMLElement>`."
                    },
                    "parameters": [
                      {
                        "id": 116,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "id": 1650,
                              "name": "ReactiveElement",
                              "location": {
                                "page": "ReactiveElement",
                                "anchor": "ReactiveElement"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 117,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "queryAssignedNodes"
        }
      },
      {
        "id": 102,
        "name": "queryAsync",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter that\nreturns a promise that resolves to the result of a querySelector on the\nelement's renderRoot done after the element's `updateComplete` promise\nresolves. When the queried property may change with element state, this\ndecorator can be used instead of requiring users to await the\n`updateComplete` before accessing the property."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/query-async.ts",
            "line": 54,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/query-async.ts#L54",
            "moduleSpecifier": "reactive-element/decorators/query-async.js"
          }
        ],
        "signatures": [
          {
            "id": 103,
            "name": "queryAsync",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A property decorator that converts a class property into a getter that\nreturns a promise that resolves to the result of a querySelector on the\nelement's renderRoot done after the element's `updateComplete` promise\nresolves. When the queried property may change with element state, this\ndecorator can be used instead of requiring users to await the\n`updateComplete` before accessing the property."
            },
            "parameters": [
              {
                "id": 104,
                "name": "selector",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "A DOMString containing one or more selectors to match.\n\nSee: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n\n```ts\nclass MyElement {\n  @queryAsync('#first')\n  first;\n\n  render() {\n    return html`\n      <div id=\"first\"></div>\n      <div id=\"second\"></div>\n    `;\n  }\n}\n\n// external usage\nasync doSomethingWithFirst() {\n (await aMyElement.first).doSomething();\n}\n```"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 105,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/decorators/query-async.d.ts",
                    "line": 39,
                    "character": 54
                  }
                ],
                "signatures": [
                  {
                    "id": 106,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "A property decorator that converts a class property into a getter that\nreturns a promise that resolves to the result of a querySelector on the\nelement's renderRoot done after the element's `updateComplete` promise\nresolves. When the queried property may change with element state, this\ndecorator can be used instead of requiring users to await the\n`updateComplete` before accessing the property."
                    },
                    "parameters": [
                      {
                        "id": 107,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "id": 1650,
                              "name": "ReactiveElement",
                              "location": {
                                "page": "ReactiveElement",
                                "anchor": "ReactiveElement"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 108,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "queryAsync"
        }
      },
      {
        "id": 67,
        "name": "state",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "Declares a private or protected reactive property that still triggers\nupdates to the element when it changes. It does not reflect from the\ncorresponding attribute.",
          "text": "Properties declared this way must not be used from HTML or HTML templating\nsystems, they're solely for properties internal to the element. These\nproperties may be renamed by optimization tools like closure compiler."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/state.ts",
            "line": 35,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/state.ts#L35",
            "moduleSpecifier": "reactive-element/decorators/state.js"
          }
        ],
        "signatures": [
          {
            "id": 68,
            "name": "state",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Declares a private or protected reactive property that still triggers\nupdates to the element when it changes. It does not reflect from the\ncorresponding attribute.",
              "text": "Properties declared this way must not be used from HTML or HTML templating\nsystems, they're solely for properties internal to the element. These\nproperties may be renamed by optimization tools like closure compiler."
            },
            "parameters": [
              {
                "id": 69,
                "name": "options",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "id": 74,
                  "name": "InternalPropertyDeclaration",
                  "location": {
                    "page": "decorators",
                    "anchor": "InternalPropertyDeclaration"
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 70,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/decorators/state.d.ts",
                    "line": 24,
                    "character": 70
                  }
                ],
                "signatures": [
                  {
                    "id": 71,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Declares a private or protected reactive property that still triggers\nupdates to the element when it changes. It does not reflect from the\ncorresponding attribute.",
                      "text": "Properties declared this way must not be used from HTML or HTML templating\nsystems, they're solely for properties internal to the element. These\nproperties may be renamed by optimization tools like closure compiler."
                    },
                    "parameters": [
                      {
                        "id": 72,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Object"
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 73,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "state"
        }
      },
      {
        "id": 74,
        "name": "InternalPropertyDeclaration",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "tags": [
            {
              "tag": "license",
              "text": "\nCopyright 2017 Google LLC\nSPDX-License-Identifier: BSD-3-Clause\n"
            }
          ]
        },
        "children": [
          {
            "id": 75,
            "name": "hasChanged",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "A function that indicates if a property should be considered changed when\nit is set. The function should take the `newValue` and `oldValue` and\nreturn `true` if an update should be requested."
            },
            "children": [],
            "signatures": [
              {
                "id": 76,
                "name": "hasChanged",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "A function that indicates if a property should be considered changed when\nit is set. The function should take the `newValue` and `oldValue` and\nreturn `true` if an update should be requested."
                },
                "parameters": [
                  {
                    "id": 77,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    }
                  },
                  {
                    "id": 78,
                    "name": "oldValue",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/decorators.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
                "moduleSpecifier": "lit/decorators.js"
              }
            ],
            "location": {
              "page": "decorators",
              "anchor": "InternalPropertyDeclaration.hasChanged"
            }
          }
        ],
        "groups": [
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              75
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/state.ts",
            "line": 16,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/state.ts#L16",
            "moduleSpecifier": "reactive-element/decorators/state.js"
          }
        ],
        "typeParameter": [
          {
            "id": 79,
            "name": "Type",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "InternalPropertyDeclaration"
        }
      }
    ]
  },
  {
    "slug": "directives",
    "title": "Directives",
    "items": [
      {
        "id": 118,
        "name": "asyncAppend",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A directive that renders the items of an async iterable[1], appending new\nvalues after previous values, similar to the built-in support for iterables.\nThis directive is usable only in child expressions.",
          "text": "Async iterables are objects with a [Symbol.asyncIterator] method, which\nreturns an iterator who's `next()` method returns a Promise. When a new\nvalue is available, the Promise resolves and the value is appended to the\nPart controlled by the directive. If another value other than this\ndirective has been set on the Part, the iterable will no longer be listened\nto and new values won't be written to the Part.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/async-append.ts",
            "line": 69,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-append.ts#L69",
            "moduleSpecifier": "lit-html/directives/async-append.js"
          }
        ],
        "signatures": [
          {
            "id": 119,
            "name": "asyncAppend",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that renders the items of an async iterable[1], appending new\nvalues after previous values, similar to the built-in support for iterables.\nThis directive is usable only in child expressions.",
              "text": "Async iterables are objects with a [Symbol.asyncIterator] method, which\nreturns an iterator who's `next()` method returns a Promise. When a new\nvalue is available, the Promise resolves and the value is appended to the\nPart controlled by the directive. If another value other than this\ndirective has been set on the Part, the iterable will no longer be listened\nto and new values won't be written to the Part.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n"
            },
            "parameters": [
              {
                "id": 120,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "An async iterable"
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "AsyncIterable"
                }
              },
              {
                "id": 121,
                "name": "_mapper",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 122,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 123,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 124,
                            "name": "v",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          },
                          {
                            "id": 125,
                            "name": "index",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                              "isOptional": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 628,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 126,
                    "name": "AsyncAppendDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "AsyncAppendDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/async-append.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
            "moduleSpecifier": "lit/directives/async-append.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "asyncAppend"
        }
      },
      {
        "id": 126,
        "name": "AsyncAppendDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 127,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/async-append.d.ts",
                "line": 11,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 128,
                "name": "new AsyncAppendDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 129,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 126,
                  "name": "AsyncAppendDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "AsyncAppendDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 161,
                  "name": "AsyncReplaceDirective.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 160,
              "name": "AsyncReplaceDirective.constructor",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.constructor"
            }
          },
          {
            "id": 148,
            "name": "isConnected",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {
              "shortText": "The connection state for this Directive."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 304,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L304",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 183,
              "name": "AsyncReplaceDirective.isConnected",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.isConnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.isConnected"
            }
          },
          {
            "id": 135,
            "name": "commitValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-append.ts",
                "line": 39,
                "character": 21,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-append.ts#L39",
                "moduleSpecifier": "lit-html/directives/async-append.js"
              }
            ],
            "signatures": [
              {
                "id": 136,
                "name": "commitValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 137,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  },
                  {
                    "id": 138,
                    "name": "index",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 176,
                  "name": "AsyncReplaceDirective.commitValue"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 175,
              "name": "AsyncReplaceDirective.commitValue",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.commitValue"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.commitValue"
            }
          },
          {
            "id": 144,
            "name": "disconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 84,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L84",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 145,
                "name": "disconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 180,
                  "name": "AsyncReplaceDirective.disconnected"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 179,
              "name": "AsyncReplaceDirective.disconnected",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.disconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.disconnected"
            }
          },
          {
            "id": 146,
            "name": "reconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 89,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L89",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 147,
                "name": "reconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 182,
                  "name": "AsyncReplaceDirective.reconnected"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 181,
              "name": "AsyncReplaceDirective.reconnected",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.reconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.reconnected"
            }
          },
          {
            "id": 139,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 21,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L21",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 140,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "typeParameter": [
                  {
                    "id": 141,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {}
                  }
                ],
                "parameters": [
                  {
                    "id": 142,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "AsyncIterable"
                    }
                  },
                  {
                    "id": 143,
                    "name": "_mapper",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "Mapper"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "symbol"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 167,
                  "name": "AsyncReplaceDirective.render"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 166,
              "name": "AsyncReplaceDirective.render",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.render"
            }
          },
          {
            "id": 154,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
              "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 364,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L364",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "id": 155,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
                  "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
                },
                "parameters": [
                  {
                    "id": 156,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The value to set\n"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 190,
                  "name": "AsyncReplaceDirective.setValue"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 189,
              "name": "AsyncReplaceDirective.setValue",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.setValue"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.setValue"
            }
          },
          {
            "id": 131,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-append.ts",
                "line": 33,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-append.ts#L33",
                "moduleSpecifier": "lit-html/directives/async-append.js"
              }
            ],
            "signatures": [
              {
                "id": 132,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 133,
                    "name": "part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 539,
                      "name": "ChildPart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ChildPart"
                      }
                    }
                  },
                  {
                    "id": 134,
                    "name": "params",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "value",
                          "isOptional": false,
                          "element": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "AsyncIterable"
                          }
                        },
                        {
                          "type": "named-tuple-member",
                          "name": "_mapper",
                          "isOptional": true,
                          "element": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Mapper"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 2584,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 172,
                  "name": "AsyncReplaceDirective.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 171,
              "name": "AsyncReplaceDirective.update",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              127
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              130,
              148
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              157
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              149,
              135,
              144,
              146,
              139,
              154,
              131
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/async-append.ts",
            "line": 21,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-append.ts#L21",
            "moduleSpecifier": "lit-html/directives/async-append.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 159,
            "name": "AsyncReplaceDirective",
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/async-append.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
            "moduleSpecifier": "lit/directives/async-append.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 159,
            "name": "AsyncReplaceDirective",
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective"
            }
          },
          {
            "type": "reference",
            "id": 28,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          },
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 194,
        "name": "asyncReplace",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A directive that renders the items of an async iterable[1], replacing\nprevious values with new values, so that only one value is ever rendered\nat a time. This directive may be used in any expression type.",
          "text": "Async iterables are objects with a `[Symbol.asyncIterator]` method, which\nreturns an iterator who's `next()` method returns a Promise. When a new\nvalue is available, the Promise resolves and the value is rendered to the\nPart controlled by the directive. If another value other than this\ndirective has been set on the Part, the iterable will no longer be listened\nto and new values won't be written to the Part.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/async-replace.ts",
            "line": 113,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L113",
            "moduleSpecifier": "lit-html/directives/async-replace.js"
          }
        ],
        "signatures": [
          {
            "id": 195,
            "name": "asyncReplace",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that renders the items of an async iterable[1], replacing\nprevious values with new values, so that only one value is ever rendered\nat a time. This directive may be used in any expression type.",
              "text": "Async iterables are objects with a `[Symbol.asyncIterator]` method, which\nreturns an iterator who's `next()` method returns a Promise. When a new\nvalue is available, the Promise resolves and the value is rendered to the\nPart controlled by the directive. If another value other than this\ndirective has been set on the Part, the iterable will no longer be listened\nto and new values won't be written to the Part.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n"
            },
            "parameters": [
              {
                "id": 196,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "An async iterable"
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "AsyncIterable"
                }
              },
              {
                "id": 197,
                "name": "_mapper",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "Mapper"
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 628,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 159,
                    "name": "AsyncReplaceDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "AsyncReplaceDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/async-replace.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
            "moduleSpecifier": "lit/directives/async-replace.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "asyncReplace"
        }
      },
      {
        "id": 159,
        "name": "AsyncReplaceDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 160,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 161,
                "name": "new AsyncReplaceDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 162,
                    "name": "_partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 159,
                  "name": "AsyncReplaceDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "AsyncReplaceDirective"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 30,
                  "name": "AsyncDirective.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 29,
              "name": "AsyncDirective.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.constructor"
            }
          },
          {
            "id": 183,
            "name": "isConnected",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {
              "shortText": "The connection state for this Directive."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 304,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L304",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 32,
              "name": "AsyncDirective.isConnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.isConnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.isConnected"
            }
          },
          {
            "id": 175,
            "name": "commitValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 80,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L80",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 176,
                "name": "commitValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 177,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  },
                  {
                    "id": 178,
                    "name": "_index",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.commitValue"
            }
          },
          {
            "id": 179,
            "name": "disconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 84,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L84",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 180,
                "name": "disconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 42,
                  "name": "AsyncDirective.disconnected"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 41,
              "name": "AsyncDirective.disconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.disconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.disconnected"
            }
          },
          {
            "id": 181,
            "name": "reconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 89,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L89",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 182,
                "name": "reconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 44,
                  "name": "AsyncDirective.reconnected"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 43,
              "name": "AsyncDirective.reconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.reconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.reconnected"
            }
          },
          {
            "id": 166,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 21,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L21",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 167,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "typeParameter": [
                  {
                    "id": 168,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {}
                  }
                ],
                "parameters": [
                  {
                    "id": 169,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "AsyncIterable"
                    }
                  },
                  {
                    "id": 170,
                    "name": "_mapper",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "Mapper"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "symbol"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 48,
                  "name": "AsyncDirective.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 47,
              "name": "AsyncDirective.render",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.render"
            }
          },
          {
            "id": 189,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
              "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 364,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L364",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "id": 190,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
                  "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
                },
                "parameters": [
                  {
                    "id": 191,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The value to set\n"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 39,
                  "name": "AsyncDirective.setValue"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 38,
              "name": "AsyncDirective.setValue",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.setValue"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.setValue"
            }
          },
          {
            "id": 171,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 25,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L25",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 172,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 173,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 539,
                      "name": "ChildPart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ChildPart"
                      }
                    }
                  },
                  {
                    "id": 174,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "value",
                          "isOptional": false,
                          "element": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "AsyncIterable"
                          }
                        },
                        {
                          "type": "named-tuple-member",
                          "name": "_mapper",
                          "isOptional": true,
                          "element": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Mapper"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 2584,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 51,
                  "name": "AsyncDirective.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 50,
              "name": "AsyncDirective.update",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              160
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              165,
              163,
              164,
              183
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              192
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              184,
              175,
              179,
              181,
              166,
              189,
              171
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/async-replace.ts",
            "line": 14,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L14",
            "moduleSpecifier": "lit-html/directives/async-replace.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 28,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 126,
            "name": "AsyncAppendDirective",
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/async-replace.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
            "moduleSpecifier": "lit/directives/async-replace.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 28,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          },
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 198,
        "name": "cache",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Enables fast switching between multiple templates by caching the DOM nodes\nand TemplateInstances produced by the templates.",
          "text": "Example:\n\n```js\nlet checked = false;\n\nhtml`\n  ${cache(checked ? html`input is checked` : html`input is not checked`)}\n`\n```\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/cache.ts",
            "line": 104,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/cache.ts#L104",
            "moduleSpecifier": "lit-html/directives/cache.js"
          }
        ],
        "signatures": [
          {
            "id": 199,
            "name": "cache",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Enables fast switching between multiple templates by caching the DOM nodes\nand TemplateInstances produced by the templates.",
              "text": "Example:\n\n```js\nlet checked = false;\n\nhtml`\n  ${cache(checked ? html`input is checked` : html`input is not checked`)}\n`\n```\n"
            },
            "parameters": [
              {
                "id": 200,
                "name": "v",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 628,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 201,
                    "name": "CacheDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "CacheDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/cache.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/cache.ts#L7",
            "moduleSpecifier": "lit/directives/cache.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "cache"
        }
      },
      {
        "id": 201,
        "name": "CacheDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 202,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/cache.d.ts",
                "line": 11,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 203,
                "name": "new CacheDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 204,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 201,
                  "name": "CacheDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "CacheDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 652,
                  "name": "Directive.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 651,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/cache.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/cache.ts#L7",
                "moduleSpecifier": "lit/directives/cache.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "CacheDirective.constructor"
            }
          },
          {
            "id": 207,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/cache.ts",
                "line": 36,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/cache.ts#L36",
                "moduleSpecifier": "lit-html/directives/cache.js"
              }
            ],
            "signatures": [
              {
                "id": 208,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 209,
                    "name": "v",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 657,
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 656,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/cache.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/cache.ts#L7",
                "moduleSpecifier": "lit/directives/cache.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "CacheDirective.render"
            }
          },
          {
            "id": 210,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/cache.ts",
                "line": 42,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/cache.ts#L42",
                "moduleSpecifier": "lit-html/directives/cache.js"
              }
            ],
            "signatures": [
              {
                "id": 211,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 212,
                    "name": "containerPart",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 539,
                      "name": "ChildPart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ChildPart"
                      }
                    }
                  },
                  {
                    "id": 213,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "v",
                          "isOptional": false,
                          "element": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 660,
                  "name": "Directive.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 659,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/cache.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/cache.ts#L7",
                "moduleSpecifier": "lit/directives/cache.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "CacheDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              202
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              205,
              206
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              214
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              207,
              210
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/cache.ts",
            "line": 28,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/cache.ts#L28",
            "moduleSpecifier": "lit-html/directives/cache.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/cache.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/cache.ts#L7",
            "moduleSpecifier": "lit/directives/cache.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 219,
        "name": "classMap",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A directive that applies dynamic CSS classes.",
          "text": "This must be used in the `class` attribute and must be the only part used in\nthe attribute. It takes each property in the `classInfo` argument and adds\nthe property name to the element's `classList` if the property value is\ntruthy; if the property value is falsey, the property name is removed from\nthe element's `class`.\n\nFor example `{foo: bar}` applies the class `foo` if the value of `bar` is\ntruthy.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/class-map.ts",
            "line": 124,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/class-map.ts#L124",
            "moduleSpecifier": "lit-html/directives/class-map.js"
          }
        ],
        "signatures": [
          {
            "id": 220,
            "name": "classMap",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that applies dynamic CSS classes.",
              "text": "This must be used in the `class` attribute and must be the only part used in\nthe attribute. It takes each property in the `classInfo` argument and adds\nthe property name to the element's `classList` if the property value is\ntruthy; if the property value is falsey, the property name is removed from\nthe element's `class`.\n\nFor example `{foo: bar}` applies the class `foo` if the value of `bar` is\ntruthy.\n"
            },
            "parameters": [
              {
                "id": 221,
                "name": "classInfo",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "\n"
                },
                "type": {
                  "type": "reference",
                  "id": 216,
                  "name": "ClassInfo",
                  "location": {
                    "page": "directives",
                    "anchor": "ClassInfo"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 628,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 222,
                    "name": "ClassMapDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "ClassMapDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/class-map.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/class-map.ts#L7",
            "moduleSpecifier": "lit/directives/class-map.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "classMap"
        }
      },
      {
        "id": 222,
        "name": "ClassMapDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 223,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/class-map.d.ts",
                "line": 21,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 224,
                "name": "new ClassMapDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 225,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 222,
                  "name": "ClassMapDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "ClassMapDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 652,
                  "name": "Directive.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 651,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/class-map.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/class-map.ts#L7",
                "moduleSpecifier": "lit/directives/class-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "ClassMapDirective.constructor"
            }
          },
          {
            "id": 228,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/class-map.ts",
                "line": 45,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/class-map.ts#L45",
                "moduleSpecifier": "lit-html/directives/class-map.js"
              }
            ],
            "signatures": [
              {
                "id": 229,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 230,
                    "name": "classInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 216,
                      "name": "ClassInfo",
                      "location": {
                        "page": "directives",
                        "anchor": "ClassInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 657,
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 656,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/class-map.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/class-map.ts#L7",
                "moduleSpecifier": "lit/directives/class-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "ClassMapDirective.render"
            }
          },
          {
            "id": 231,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/class-map.ts",
                "line": 56,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/class-map.ts#L56",
                "moduleSpecifier": "lit-html/directives/class-map.js"
              }
            ],
            "signatures": [
              {
                "id": 232,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 233,
                    "name": "part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 503,
                      "name": "AttributePart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "AttributePart"
                      }
                    }
                  },
                  {
                    "id": 234,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "classInfo",
                          "isOptional": false,
                          "element": {
                            "type": "reference",
                            "id": 216,
                            "name": "ClassInfo",
                            "location": {
                              "page": "directives",
                              "anchor": "ClassInfo"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 2584,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 660,
                  "name": "Directive.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 659,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/class-map.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/class-map.ts#L7",
                "moduleSpecifier": "lit/directives/class-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "ClassMapDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              223
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              226,
              227
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              235
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              228,
              231
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/class-map.ts",
            "line": 23,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/class-map.ts#L23",
            "moduleSpecifier": "lit-html/directives/class-map.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/class-map.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/class-map.ts#L7",
            "moduleSpecifier": "lit/directives/class-map.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 216,
        "name": "ClassInfo",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "A key-value set of class names to truthy values."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/class-map.ts",
            "line": 19,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/class-map.ts#L19",
            "moduleSpecifier": "lit-html/directives/class-map.js"
          }
        ],
        "indexSignature": {
          "id": 217,
          "name": "__index",
          "kind": 8192,
          "kindString": "Index signature",
          "flags": {},
          "parameters": [
            {
              "id": 218,
              "name": "name",
              "kind": 32768,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/class-map.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/class-map.ts#L7",
            "moduleSpecifier": "lit/directives/class-map.js"
          }
        ]
      },
      {
        "id": 237,
        "name": "guard",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Prevents re-render of a template function until a single value or an array of\nvalues changes.",
          "text": "Values are checked against previous values with strict equality (`===`), and\nso the check won't detect nested property changes inside objects or arrays.\nArrays values have each item checked against the previous value at the same\nindex with strict equality. Nested arrays are also checked only by strict\nequality.\n\nExample:\n\n```js\nhtml`\n  <div>\n    ${guard([user.id, company.id], () => html`...`)}\n  </div>\n`\n```\n\nIn this case, the template only rerenders if either `user.id` or `company.id`\nchanges.\n\nguard() is useful with immutable data patterns, by preventing expensive work\nuntil data updates.\n\nExample:\n\n```js\nhtml`\n  <div>\n    ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n  </div>\n`\n```\n\nIn this case, items are mapped over only when the array reference changes.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/guard.ts",
            "line": 84,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/guard.ts#L84",
            "moduleSpecifier": "lit-html/directives/guard.js"
          }
        ],
        "signatures": [
          {
            "id": 238,
            "name": "guard",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Prevents re-render of a template function until a single value or an array of\nvalues changes.",
              "text": "Values are checked against previous values with strict equality (`===`), and\nso the check won't detect nested property changes inside objects or arrays.\nArrays values have each item checked against the previous value at the same\nindex with strict equality. Nested arrays are also checked only by strict\nequality.\n\nExample:\n\n```js\nhtml`\n  <div>\n    ${guard([user.id, company.id], () => html`...`)}\n  </div>\n`\n```\n\nIn this case, the template only rerenders if either `user.id` or `company.id`\nchanges.\n\nguard() is useful with immutable data patterns, by preventing expensive work\nuntil data updates.\n\nExample:\n\n```js\nhtml`\n  <div>\n    ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n  </div>\n`\n```\n\nIn this case, items are mapped over only when the array reference changes.\n"
            },
            "parameters": [
              {
                "id": 239,
                "name": "_value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 240,
                "name": "f",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "the template function\n"
                },
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 241,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 242,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 628,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 243,
                    "name": "GuardDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "GuardDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/guard.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/guard.ts#L7",
            "moduleSpecifier": "lit/directives/guard.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "guard"
        }
      },
      {
        "id": 243,
        "name": "GuardDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 244,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 245,
                "name": "new GuardDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 246,
                    "name": "_partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 243,
                  "name": "GuardDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "GuardDirective"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 652,
                  "name": "Directive.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 651,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/guard.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/guard.ts#L7",
                "moduleSpecifier": "lit/directives/guard.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "GuardDirective.constructor"
            }
          },
          {
            "id": 248,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/guard.ts",
                "line": 16,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/guard.ts#L16",
                "moduleSpecifier": "lit-html/directives/guard.js"
              }
            ],
            "signatures": [
              {
                "id": 249,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 250,
                    "name": "_value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  },
                  {
                    "id": 251,
                    "name": "f",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 252,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 253,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 657,
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 656,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/guard.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/guard.ts#L7",
                "moduleSpecifier": "lit/directives/guard.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "GuardDirective.render"
            }
          },
          {
            "id": 254,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/guard.ts",
                "line": 20,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/guard.ts#L20",
                "moduleSpecifier": "lit-html/directives/guard.js"
              }
            ],
            "signatures": [
              {
                "id": 255,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 256,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 603,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  },
                  {
                    "id": 257,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "_value",
                          "isOptional": false,
                          "element": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        },
                        {
                          "type": "named-tuple-member",
                          "name": "f",
                          "isOptional": false,
                          "element": {
                            "type": "reflection",
                            "declaration": {
                              "id": 258,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 259,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "unknown"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 660,
                  "name": "Directive.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 659,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/guard.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/guard.ts#L7",
                "moduleSpecifier": "lit/directives/guard.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "GuardDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              244
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              247
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              260
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              248,
              254
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/guard.ts",
            "line": 13,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/guard.ts#L13",
            "moduleSpecifier": "lit-html/directives/guard.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/guard.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/guard.ts#L7",
            "moduleSpecifier": "lit/directives/guard.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 262,
        "name": "ifDefined",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "For AttributeParts, sets the attribute if the value is defined and removes\nthe attribute if the value is undefined.",
          "text": "For other part types, this directive is a no-op.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/if-defined.ts",
            "line": 15,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/if-defined.ts#L15",
            "moduleSpecifier": "lit-html/directives/if-defined.js"
          }
        ],
        "signatures": [
          {
            "id": 263,
            "name": "ifDefined",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "For AttributeParts, sets the attribute if the value is defined and removes\nthe attribute if the value is undefined.",
              "text": "For other part types, this directive is a no-op.\n"
            },
            "typeParameter": [
              {
                "id": 264,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 265,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "T"
                }
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 2585,
                    "name": "nothing",
                    "location": {
                      "page": "templates",
                      "anchor": "nothing"
                    }
                  }
                },
                {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "NonNullable"
                }
              ]
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/if-defined.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/if-defined.ts#L7",
            "moduleSpecifier": "lit/directives/if-defined.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "ifDefined"
        }
      },
      {
        "id": 266,
        "name": "live",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Checks binding values against live DOM values, instead of previously bound\nvalues, when determining whether to update the value.",
          "text": "This is useful for cases where the DOM value may change from outside of\nlit-html, such as with a binding to an `<input>` element's `value` property,\na content editable elements text, or to a custom element that changes it's\nown properties or attributes.\n\nIn these cases if the DOM value changes, but the value set through lit-html\nbindings hasn't, lit-html won't know to update the DOM value and will leave\nit alone. If this is not what you want--if you want to overwrite the DOM\nvalue with the bound value no matter what--use the `live()` directive:\n\n```js\nhtml`<input .value=${live(x)}>`\n```\n\n`live()` performs a strict equality check agains the live DOM value, and if\nthe new value is equal to the live value, does nothing. This means that\n`live()` should not be used when the binding will cause a type conversion. If\nyou use `live()` with an attribute binding, make sure that only strings are\npassed in, or the binding will update every render.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/live.ts",
            "line": 92,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/live.ts#L92",
            "moduleSpecifier": "lit-html/directives/live.js"
          }
        ],
        "signatures": [
          {
            "id": 267,
            "name": "live",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Checks binding values against live DOM values, instead of previously bound\nvalues, when determining whether to update the value.",
              "text": "This is useful for cases where the DOM value may change from outside of\nlit-html, such as with a binding to an `<input>` element's `value` property,\na content editable elements text, or to a custom element that changes it's\nown properties or attributes.\n\nIn these cases if the DOM value changes, but the value set through lit-html\nbindings hasn't, lit-html won't know to update the DOM value and will leave\nit alone. If this is not what you want--if you want to overwrite the DOM\nvalue with the bound value no matter what--use the `live()` directive:\n\n```js\nhtml`<input .value=${live(x)}>`\n```\n\n`live()` performs a strict equality check agains the live DOM value, and if\nthe new value is equal to the live value, does nothing. This means that\n`live()` should not be used when the binding will cause a type conversion. If\nyou use `live()` with an attribute binding, make sure that only strings are\npassed in, or the binding will update every render.\n"
            },
            "parameters": [
              {
                "id": 268,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 628,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 269,
                    "name": "LiveDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "LiveDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/live.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/live.ts#L7",
            "moduleSpecifier": "lit/directives/live.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "live"
        }
      },
      {
        "id": 269,
        "name": "LiveDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 270,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/live.d.ts",
                "line": 9,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 271,
                "name": "new LiveDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 272,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 269,
                  "name": "LiveDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "LiveDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 652,
                  "name": "Directive.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 651,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/live.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/live.ts#L7",
                "moduleSpecifier": "lit/directives/live.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "LiveDirective.constructor"
            }
          },
          {
            "id": 273,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/live.ts",
                "line": 36,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/live.ts#L36",
                "moduleSpecifier": "lit-html/directives/live.js"
              }
            ],
            "signatures": [
              {
                "id": 274,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 275,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 657,
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 656,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/live.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/live.ts#L7",
                "moduleSpecifier": "lit/directives/live.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "LiveDirective.render"
            }
          },
          {
            "id": 276,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/live.ts",
                "line": 40,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/live.ts#L40",
                "moduleSpecifier": "lit-html/directives/live.js"
              }
            ],
            "signatures": [
              {
                "id": 277,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 278,
                    "name": "part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 503,
                      "name": "AttributePart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "AttributePart"
                      }
                    }
                  },
                  {
                    "id": 279,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "value",
                          "isOptional": false,
                          "element": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 660,
                  "name": "Directive.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 659,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/live.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/live.ts#L7",
                "moduleSpecifier": "lit/directives/live.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "LiveDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              270
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              280
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              273,
              276
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/live.ts",
            "line": 17,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/live.ts#L17",
            "moduleSpecifier": "lit-html/directives/live.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/live.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/live.ts#L7",
            "moduleSpecifier": "lit/directives/live.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 282,
        "name": "createRef",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Creates a new Ref object, which is container for a reference to an element."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/ref.ts",
            "line": 12,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L12",
            "moduleSpecifier": "lit-html/directives/ref.js"
          }
        ],
        "signatures": [
          {
            "id": 283,
            "name": "createRef",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Creates a new Ref object, which is container for a reference to an element."
            },
            "typeParameter": [
              {
                "id": 284,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {},
                "default": {
                  "type": "reference",
                  "name": "Element",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 285,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "T"
                }
              ],
              "name": "Ref",
              "location": {
                "page": "directives",
                "anchor": "Ref"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/ref.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
            "moduleSpecifier": "lit/directives/ref.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "createRef"
        }
      },
      {
        "id": 295,
        "name": "ref",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Sets the value of a Ref object or calls a ref callback with the element it's\nbound to.",
          "text": "A Ref object acts as a container for a reference to an element. A ref\ncallback is a function that takes an element as its only argument.\n\nThe ref directive sets the value of the Ref object or calls the ref callback\nduring rendering, if the referenced element changed.\n\nNote: If a ref callback is rendered to a different element position or is\nremoved in a subsequent render, it will first be called with `undefined`,\nfollowed by another call with the new element it was rendered to (if any).\n\n```js\n// Using Ref object\nconst inputRef = createRef();\nrender(html`<input ${ref(inputRef)}>`, container);\ninputRef.value.focus();\n\n// Using callback\nconst callback = (inputElement) => inputElement.focus();\nrender(html`<input ${ref(callback)}>`, container);\n```\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/ref.ts",
            "line": 134,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L134",
            "moduleSpecifier": "lit-html/directives/ref.js"
          }
        ],
        "signatures": [
          {
            "id": 296,
            "name": "ref",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Sets the value of a Ref object or calls a ref callback with the element it's\nbound to.",
              "text": "A Ref object acts as a container for a reference to an element. A ref\ncallback is a function that takes an element as its only argument.\n\nThe ref directive sets the value of the Ref object or calls the ref callback\nduring rendering, if the referenced element changed.\n\nNote: If a ref callback is rendered to a different element position or is\nremoved in a subsequent render, it will first be called with `undefined`,\nfollowed by another call with the new element it was rendered to (if any).\n\n```js\n// Using Ref object\nconst inputRef = createRef();\nrender(html`<input ${ref(inputRef)}>`, container);\ninputRef.value.focus();\n\n// Using callback\nconst callback = (inputElement) => inputElement.focus();\nrender(html`<input ${ref(callback)}>`, container);\n```\n"
            },
            "parameters": [
              {
                "id": 297,
                "name": "_ref",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 291,
                  "name": "RefOrCallback",
                  "location": {
                    "page": "directives",
                    "anchor": "RefOrCallback"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 628,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 298,
                    "name": "RefDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "RefDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/ref.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
            "moduleSpecifier": "lit/directives/ref.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "ref"
        }
      },
      {
        "id": 285,
        "name": "Ref",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "An object that holds a ref value."
        },
        "children": [
          {
            "id": 286,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 287,
                "name": "new Ref",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "typeParameter": [
                  {
                    "id": 288,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {},
                    "default": {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 285,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Ref",
                  "location": {
                    "page": "directives",
                    "anchor": "Ref"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "Ref.constructor"
            }
          },
          {
            "id": 289,
            "name": "value",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "The current Element value of the ref, or else `undefined` if the ref is no\nlonger rendered."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/ref.ts",
                "line": 22,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L22",
                "moduleSpecifier": "lit-html/directives/ref.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "T"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "Ref.value"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              286
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              289
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/ref.ts",
            "line": 17,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L17",
            "moduleSpecifier": "lit-html/directives/ref.js"
          }
        ],
        "typeParameter": [
          {
            "id": 290,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "reference",
              "name": "Element",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/ref.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
            "moduleSpecifier": "lit/directives/ref.js"
          }
        ]
      },
      {
        "id": 298,
        "name": "RefDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 299,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 300,
                "name": "new RefDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 301,
                    "name": "_partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 298,
                  "name": "RefDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "RefDirective"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 30,
                  "name": "AsyncDirective.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 29,
              "name": "AsyncDirective.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.constructor"
            }
          },
          {
            "id": 319,
            "name": "isConnected",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {
              "shortText": "The connection state for this Directive."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 304,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L304",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 32,
              "name": "AsyncDirective.isConnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.isConnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.isConnected"
            }
          },
          {
            "id": 315,
            "name": "disconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/ref.ts",
                "line": 92,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L92",
                "moduleSpecifier": "lit-html/directives/ref.js"
              }
            ],
            "signatures": [
              {
                "id": 316,
                "name": "disconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 42,
                  "name": "AsyncDirective.disconnected"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 41,
              "name": "AsyncDirective.disconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.disconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.disconnected"
            }
          },
          {
            "id": 317,
            "name": "reconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/ref.ts",
                "line": 102,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L102",
                "moduleSpecifier": "lit-html/directives/ref.js"
              }
            ],
            "signatures": [
              {
                "id": 318,
                "name": "reconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 44,
                  "name": "AsyncDirective.reconnected"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 43,
              "name": "AsyncDirective.reconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.reconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.reconnected"
            }
          },
          {
            "id": 305,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/ref.ts",
                "line": 44,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L44",
                "moduleSpecifier": "lit-html/directives/ref.js"
              }
            ],
            "signatures": [
              {
                "id": 306,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 307,
                    "name": "_ref",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 291,
                      "name": "RefOrCallback",
                      "location": {
                        "page": "directives",
                        "anchor": "RefOrCallback"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "symbol"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 48,
                  "name": "AsyncDirective.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 47,
              "name": "AsyncDirective.render",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.render"
            }
          },
          {
            "id": 325,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
              "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 364,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L364",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "id": 326,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
                  "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
                },
                "parameters": [
                  {
                    "id": 327,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The value to set\n"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 39,
                  "name": "AsyncDirective.setValue"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 38,
              "name": "AsyncDirective.setValue",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.setValue"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.setValue"
            }
          },
          {
            "id": 308,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/ref.ts",
                "line": 48,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L48",
                "moduleSpecifier": "lit-html/directives/ref.js"
              }
            ],
            "signatures": [
              {
                "id": 309,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 310,
                    "name": "part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 567,
                      "name": "ElementPart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ElementPart"
                      }
                    }
                  },
                  {
                    "id": 311,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "_ref",
                          "isOptional": false,
                          "element": {
                            "type": "reference",
                            "id": 291,
                            "name": "RefOrCallback",
                            "location": {
                              "page": "directives",
                              "anchor": "RefOrCallback"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "symbol"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 51,
                  "name": "AsyncDirective.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 50,
              "name": "AsyncDirective.update",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              299
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              304,
              302,
              303,
              312,
              319
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              328,
              313
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              320,
              315,
              317,
              305,
              325,
              308
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/ref.ts",
            "line": 39,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L39",
            "moduleSpecifier": "lit-html/directives/ref.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 28,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/ref.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
            "moduleSpecifier": "lit/directives/ref.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 28,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          },
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 291,
        "name": "RefOrCallback",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/ref.ts",
            "line": 37,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L37",
            "moduleSpecifier": "lit-html/directives/ref.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "id": 285,
              "name": "Ref",
              "location": {
                "page": "directives",
                "anchor": "Ref"
              }
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 292,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directives/ref.d.ts",
                    "line": 23,
                    "character": 43
                  }
                ],
                "signatures": [
                  {
                    "id": 293,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 294,
                        "name": "el",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Element",
                              "externalLocation": {
                                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                              }
                            },
                            {
                              "type": "intrinsic",
                              "name": "undefined"
                            }
                          ]
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            }
          ]
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/ref.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
            "moduleSpecifier": "lit/directives/ref.js"
          }
        ]
      },
      {
        "id": 357,
        "name": "repeat",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A directive that repeats a series of values (usually `TemplateResults`)\ngenerated from an iterable, and updates those items efficiently when the\niterable changes based on user-provided `keys` associated with each item.",
          "text": "Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\nmeaning previous DOM for a given key is moved into the new position if\nneeded, and DOM will never be reused with values for different keys (new DOM\nwill always be created for new keys). This is generally the most efficient\nway to use `repeat` since it performs minimum unnecessary work for insertions\nand removals.\n\nThe `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n\n```js\nhtml`\n  <ol>\n    ${repeat(this.items, (item) => item.id, (item, index) => {\n      return html`<li>${index}: ${item.name}</li>`;\n    })}\n  </ol>\n`\n```\n\n**Important**: If providing a `keyFn`, keys *must* be unique for all items in a\ngiven call to `repeat`. The behavior when two or more items have the same key\nis undefined.\n\nIf no `keyFn` is provided, this directive will perform similar to mapping\nitems to values, and DOM will be reused against potentially different items.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/repeat.ts",
            "line": 481,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/repeat.ts#L481",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "signatures": [
          {
            "id": 358,
            "name": "repeat",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that repeats a series of values (usually `TemplateResults`)\ngenerated from an iterable, and updates those items efficiently when the\niterable changes based on user-provided `keys` associated with each item.",
              "text": "Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\nmeaning previous DOM for a given key is moved into the new position if\nneeded, and DOM will never be reused with values for different keys (new DOM\nwill always be created for new keys). This is generally the most efficient\nway to use `repeat` since it performs minimum unnecessary work for insertions\nand removals.\n\nThe `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n\n```js\nhtml`\n  <ol>\n    ${repeat(this.items, (item) => item.id, (item, index) => {\n      return html`<li>${index}: ${item.name}</li>`;\n    })}\n  </ol>\n`\n```\n\n**Important**: If providing a `keyFn`, keys *must* be unique for all items in a\ngiven call to `repeat`. The behavior when two or more items have the same key\nis undefined.\n\nIf no `keyFn` is provided, this directive will perform similar to mapping\nitems to values, and DOM will be reused against potentially different items.\n"
            },
            "typeParameter": [
              {
                "id": 359,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 360,
                "name": "items",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable"
                }
              },
              {
                "id": 361,
                "name": "keyFnOrTemplate",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "id": 330,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "KeyFn",
                      "location": {
                        "page": "directives",
                        "anchor": "KeyFn"
                      }
                    },
                    {
                      "type": "reference",
                      "id": 336,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate"
                      }
                    }
                  ]
                }
              },
              {
                "id": 362,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "id": 336,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          },
          {
            "id": 363,
            "name": "repeat",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that repeats a series of values (usually `TemplateResults`)\ngenerated from an iterable, and updates those items efficiently when the\niterable changes based on user-provided `keys` associated with each item.",
              "text": "Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\nmeaning previous DOM for a given key is moved into the new position if\nneeded, and DOM will never be reused with values for different keys (new DOM\nwill always be created for new keys). This is generally the most efficient\nway to use `repeat` since it performs minimum unnecessary work for insertions\nand removals.\n\nThe `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n\n```js\nhtml`\n  <ol>\n    ${repeat(this.items, (item) => item.id, (item, index) => {\n      return html`<li>${index}: ${item.name}</li>`;\n    })}\n  </ol>\n`\n```\n\n**Important**: If providing a `keyFn`, keys *must* be unique for all items in a\ngiven call to `repeat`. The behavior when two or more items have the same key\nis undefined.\n\nIf no `keyFn` is provided, this directive will perform similar to mapping\nitems to values, and DOM will be reused against potentially different items.\n"
            },
            "typeParameter": [
              {
                "id": 364,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 365,
                "name": "items",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable"
                }
              },
              {
                "id": 366,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 336,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          },
          {
            "id": 367,
            "name": "repeat",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that repeats a series of values (usually `TemplateResults`)\ngenerated from an iterable, and updates those items efficiently when the\niterable changes based on user-provided `keys` associated with each item.",
              "text": "Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\nmeaning previous DOM for a given key is moved into the new position if\nneeded, and DOM will never be reused with values for different keys (new DOM\nwill always be created for new keys). This is generally the most efficient\nway to use `repeat` since it performs minimum unnecessary work for insertions\nand removals.\n\nThe `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n\n```js\nhtml`\n  <ol>\n    ${repeat(this.items, (item) => item.id, (item, index) => {\n      return html`<li>${index}: ${item.name}</li>`;\n    })}\n  </ol>\n`\n```\n\n**Important**: If providing a `keyFn`, keys *must* be unique for all items in a\ngiven call to `repeat`. The behavior when two or more items have the same key\nis undefined.\n\nIf no `keyFn` is provided, this directive will perform similar to mapping\nitems to values, and DOM will be reused against potentially different items.\n"
            },
            "typeParameter": [
              {
                "id": 368,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 369,
                "name": "items",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable"
                }
              },
              {
                "id": 370,
                "name": "keyFn",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "id": 330,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "KeyFn",
                      "location": {
                        "page": "directives",
                        "anchor": "KeyFn"
                      }
                    },
                    {
                      "type": "reference",
                      "id": 336,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate"
                      }
                    }
                  ]
                }
              },
              {
                "id": 371,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 336,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/repeat.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
            "moduleSpecifier": "lit/directives/repeat.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "repeat"
        }
      },
      {
        "id": 372,
        "name": "RepeatDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 373,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/repeat.d.ts",
                "line": 12,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 374,
                "name": "new RepeatDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 375,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 372,
                  "name": "RepeatDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "RepeatDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 652,
                  "name": "Directive.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 651,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/repeat.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
                "moduleSpecifier": "lit/directives/repeat.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RepeatDirective.constructor"
            }
          },
          {
            "id": 378,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/repeat.ts",
                "line": 66,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/repeat.ts#L66",
                "moduleSpecifier": "lit-html/directives/repeat.js"
              }
            ],
            "signatures": [
              {
                "id": 379,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "typeParameter": [
                  {
                    "id": 380,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {}
                  }
                ],
                "parameters": [
                  {
                    "id": 381,
                    "name": "items",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "Iterable"
                    }
                  },
                  {
                    "id": 382,
                    "name": "template",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 336,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 657,
                  "name": "Directive.render"
                }
              },
              {
                "id": 383,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "typeParameter": [
                  {
                    "id": 384,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {}
                  }
                ],
                "parameters": [
                  {
                    "id": 385,
                    "name": "items",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "Iterable"
                    }
                  },
                  {
                    "id": 386,
                    "name": "keyFn",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "id": 330,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "T"
                            }
                          ],
                          "name": "KeyFn",
                          "location": {
                            "page": "directives",
                            "anchor": "KeyFn"
                          }
                        },
                        {
                          "type": "reference",
                          "id": 336,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "T"
                            }
                          ],
                          "name": "ItemTemplate",
                          "location": {
                            "page": "directives",
                            "anchor": "ItemTemplate"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "id": 387,
                    "name": "template",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 336,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 656,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/repeat.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
                "moduleSpecifier": "lit/directives/repeat.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RepeatDirective.render"
            }
          },
          {
            "id": 388,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/repeat.ts",
                "line": 80,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/repeat.ts#L80",
                "moduleSpecifier": "lit-html/directives/repeat.js"
              }
            ],
            "signatures": [
              {
                "id": 389,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "typeParameter": [
                  {
                    "id": 390,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {}
                  }
                ],
                "parameters": [
                  {
                    "id": 391,
                    "name": "containerPart",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 539,
                      "name": "ChildPart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ChildPart"
                      }
                    }
                  },
                  {
                    "id": 392,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "T"
                            }
                          ],
                          "name": "Iterable"
                        },
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "id": 330,
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "T"
                                }
                              ],
                              "name": "KeyFn",
                              "location": {
                                "page": "directives",
                                "anchor": "KeyFn"
                              }
                            },
                            {
                              "type": "reference",
                              "id": 336,
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "T"
                                }
                              ],
                              "name": "ItemTemplate",
                              "location": {
                                "page": "directives",
                                "anchor": "ItemTemplate"
                              }
                            }
                          ]
                        },
                        {
                          "type": "reference",
                          "id": 336,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "T"
                            }
                          ],
                          "name": "ItemTemplate",
                          "location": {
                            "page": "directives",
                            "anchor": "ItemTemplate"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 2584,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 660,
                  "name": "Directive.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 659,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/repeat.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
                "moduleSpecifier": "lit/directives/repeat.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RepeatDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              373
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              377,
              376
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              393
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              378,
              388
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/repeat.ts",
            "line": 31,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/repeat.ts#L31",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/repeat.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
            "moduleSpecifier": "lit/directives/repeat.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 336,
        "name": "ItemTemplate",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/repeat.ts",
            "line": 18,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/repeat.ts#L18",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "typeParameter": [
          {
            "id": 341,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 337,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directives/repeat.d.ts",
                "line": 9,
                "character": 38
              }
            ],
            "signatures": [
              {
                "id": 338,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 339,
                    "name": "item",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "T"
                    }
                  },
                  {
                    "id": 340,
                    "name": "index",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/repeat.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
            "moduleSpecifier": "lit/directives/repeat.js"
          }
        ]
      },
      {
        "id": 330,
        "name": "KeyFn",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/repeat.ts",
            "line": 17,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/repeat.ts#L17",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "typeParameter": [
          {
            "id": 335,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 331,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directives/repeat.d.ts",
                "line": 8,
                "character": 31
              }
            ],
            "signatures": [
              {
                "id": 332,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 333,
                    "name": "item",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "T"
                    }
                  },
                  {
                    "id": 334,
                    "name": "index",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/repeat.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
            "moduleSpecifier": "lit/directives/repeat.js"
          }
        ]
      },
      {
        "id": 342,
        "name": "RepeatDirectiveFn",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/repeat.ts",
            "line": 436,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/repeat.ts#L436",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "signatures": [
          {
            "id": 343,
            "name": "RepeatDirectiveFn",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "typeParameter": [
              {
                "id": 344,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 345,
                "name": "items",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable"
                }
              },
              {
                "id": 346,
                "name": "keyFnOrTemplate",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "id": 330,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "KeyFn",
                      "location": {
                        "page": "directives",
                        "anchor": "KeyFn"
                      }
                    },
                    {
                      "type": "reference",
                      "id": 336,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate"
                      }
                    }
                  ]
                }
              },
              {
                "id": 347,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "id": 336,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          },
          {
            "id": 348,
            "name": "RepeatDirectiveFn",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "typeParameter": [
              {
                "id": 349,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 350,
                "name": "items",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable"
                }
              },
              {
                "id": 351,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 336,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          },
          {
            "id": 352,
            "name": "RepeatDirectiveFn",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "typeParameter": [
              {
                "id": 353,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 354,
                "name": "items",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable"
                }
              },
              {
                "id": 355,
                "name": "keyFn",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "id": 330,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "KeyFn",
                      "location": {
                        "page": "directives",
                        "anchor": "KeyFn"
                      }
                    },
                    {
                      "type": "reference",
                      "id": 336,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate"
                      }
                    }
                  ]
                }
              },
              {
                "id": 356,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 336,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/repeat.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
            "moduleSpecifier": "lit/directives/repeat.js"
          }
        ]
      },
      {
        "id": 398,
        "name": "styleMap",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A directive that applies CSS properties to an element.",
          "text": "`styleMap` can only be used in the `style` attribute and must be the only\nexpression in the attribute. It takes the property names in the `styleInfo`\nobject and adds the property values as CSS properties. Property names with\ndashes (`-`) are assumed to be valid CSS property names and set on the\nelement's style object using `setProperty()`. Names without dashes are\nassumed to be camelCased JavaScript property names and set on the element's\nstyle object using property assignment, allowing the style object to\ntranslate JavaScript-style names to CSS property names.\n\nFor example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n'0'})` sets the `background-color`, `border-top` and `--size` properties.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/style-map.ts",
            "line": 127,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/style-map.ts#L127",
            "moduleSpecifier": "lit-html/directives/style-map.js"
          }
        ],
        "signatures": [
          {
            "id": 399,
            "name": "styleMap",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that applies CSS properties to an element.",
              "text": "`styleMap` can only be used in the `style` attribute and must be the only\nexpression in the attribute. It takes the property names in the `styleInfo`\nobject and adds the property values as CSS properties. Property names with\ndashes (`-`) are assumed to be valid CSS property names and set on the\nelement's style object using `setProperty()`. Names without dashes are\nassumed to be camelCased JavaScript property names and set on the element's\nstyle object using property assignment, allowing the style object to\ntranslate JavaScript-style names to CSS property names.\n\nFor example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n'0'})` sets the `background-color`, `border-top` and `--size` properties.\n"
            },
            "parameters": [
              {
                "id": 400,
                "name": "styleInfo",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "\n"
                },
                "type": {
                  "type": "reference",
                  "id": 395,
                  "name": "StyleInfo",
                  "location": {
                    "page": "directives",
                    "anchor": "StyleInfo"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 628,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 401,
                    "name": "StyleMapDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "StyleMapDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/style-map.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/style-map.ts#L7",
            "moduleSpecifier": "lit/directives/style-map.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "styleMap"
        }
      },
      {
        "id": 401,
        "name": "StyleMapDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 402,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/style-map.d.ts",
                "line": 20,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 403,
                "name": "new StyleMapDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 404,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 401,
                  "name": "StyleMapDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "StyleMapDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 652,
                  "name": "Directive.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 651,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/style-map.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/style-map.ts#L7",
                "moduleSpecifier": "lit/directives/style-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "StyleMapDirective.constructor"
            }
          },
          {
            "id": 406,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/style-map.ts",
                "line": 44,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/style-map.ts#L44",
                "moduleSpecifier": "lit-html/directives/style-map.js"
              }
            ],
            "signatures": [
              {
                "id": 407,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 408,
                    "name": "styleInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 395,
                      "name": "StyleInfo",
                      "location": {
                        "page": "directives",
                        "anchor": "StyleInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 657,
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 656,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/style-map.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/style-map.ts#L7",
                "moduleSpecifier": "lit/directives/style-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "StyleMapDirective.render"
            }
          },
          {
            "id": 409,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/style-map.ts",
                "line": 64,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/style-map.ts#L64",
                "moduleSpecifier": "lit-html/directives/style-map.js"
              }
            ],
            "signatures": [
              {
                "id": 410,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 411,
                    "name": "part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 503,
                      "name": "AttributePart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "AttributePart"
                      }
                    }
                  },
                  {
                    "id": 412,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "styleInfo",
                          "isOptional": false,
                          "element": {
                            "type": "reference",
                            "id": 395,
                            "name": "StyleInfo",
                            "location": {
                              "page": "directives",
                              "anchor": "StyleInfo"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 2584,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 660,
                  "name": "Directive.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 659,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/style-map.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/style-map.ts#L7",
                "moduleSpecifier": "lit/directives/style-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "StyleMapDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              402
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              405
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              413
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              406,
              409
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/style-map.ts",
            "line": 27,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/style-map.ts#L27",
            "moduleSpecifier": "lit-html/directives/style-map.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/style-map.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/style-map.ts#L7",
            "moduleSpecifier": "lit/directives/style-map.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 395,
        "name": "StyleInfo",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "A key-value set of CSS properties and values.",
          "text": "The key should be either a valid CSS property name string, like\n`'background-color'`, or a valid JavaScript camel case property name\nfor CSSStyleDeclaration like `backgroundColor`.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/style-map.ts",
            "line": 23,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/style-map.ts#L23",
            "moduleSpecifier": "lit-html/directives/style-map.js"
          }
        ],
        "indexSignature": {
          "id": 396,
          "name": "__index",
          "kind": 8192,
          "kindString": "Index signature",
          "flags": {},
          "parameters": [
            {
              "id": 397,
              "name": "name",
              "kind": 32768,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "literal",
                "value": null
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/style-map.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/style-map.ts#L7",
            "moduleSpecifier": "lit/directives/style-map.js"
          }
        ]
      },
      {
        "id": 415,
        "name": "templateContent",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Renders the content of a template element as HTML.",
          "text": "Note, the template should be developer controlled and not user controlled.\nRendering a user-controlled template with this directive\ncould lead to cross-site-scripting vulnerabilities.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/template-content.ts",
            "line": 36,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/template-content.ts#L36",
            "moduleSpecifier": "lit-html/directives/template-content.js"
          }
        ],
        "signatures": [
          {
            "id": 416,
            "name": "templateContent",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Renders the content of a template element as HTML.",
              "text": "Note, the template should be developer controlled and not user controlled.\nRendering a user-controlled template with this directive\ncould lead to cross-site-scripting vulnerabilities.\n"
            },
            "parameters": [
              {
                "id": 417,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "HTMLTemplateElement",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 628,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 418,
                    "name": "TemplateContentDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "TemplateContentDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/template-content.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/template-content.ts#L7",
            "moduleSpecifier": "lit/directives/template-content.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "templateContent"
        }
      },
      {
        "id": 418,
        "name": "TemplateContentDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 419,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/template-content.d.ts",
                "line": 10,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 420,
                "name": "new TemplateContentDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 421,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 418,
                  "name": "TemplateContentDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "TemplateContentDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 652,
                  "name": "Directive.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 651,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/template-content.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/template-content.ts#L7",
                "moduleSpecifier": "lit/directives/template-content.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "TemplateContentDirective.constructor"
            }
          },
          {
            "id": 423,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/template-content.ts",
                "line": 20,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/template-content.ts#L20",
                "moduleSpecifier": "lit-html/directives/template-content.js"
              }
            ],
            "signatures": [
              {
                "id": 424,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 425,
                    "name": "template",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "HTMLTemplateElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 2584,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    },
                    {
                      "type": "reference",
                      "name": "DocumentFragment",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 657,
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 656,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/template-content.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/template-content.ts#L7",
                "moduleSpecifier": "lit/directives/template-content.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "TemplateContentDirective.render"
            }
          },
          {
            "id": 428,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 139,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L139",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "id": 429,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 430,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 603,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  },
                  {
                    "id": 431,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 660,
                  "name": "Directive.update"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 659,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/template-content.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/template-content.ts#L7",
                "moduleSpecifier": "lit/directives/template-content.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "TemplateContentDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              419
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              422
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              426
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              423,
              428
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/template-content.ts",
            "line": 10,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/template-content.ts#L10",
            "moduleSpecifier": "lit-html/directives/template-content.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/template-content.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/template-content.ts#L7",
            "moduleSpecifier": "lit/directives/template-content.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 449,
        "name": "unsafeHTML",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Renders the result as HTML, rather than text.",
          "text": "The values `undefined`, `null`, and `nothing`, will all result in no content\n(empty string) being rendered.\n\nNote, this is unsafe to use with any user-provided input that hasn't been\nsanitized or escaped, as it may lead to cross-site-scripting\nvulnerabilities.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
            "line": 76,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-html.ts#L76",
            "moduleSpecifier": "lit-html/directives/unsafe-html.js"
          }
        ],
        "signatures": [
          {
            "id": 450,
            "name": "unsafeHTML",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Renders the result as HTML, rather than text.",
              "text": "The values `undefined`, `null`, and `nothing`, will all result in no content\n(empty string) being rendered.\n\nNote, this is unsafe to use with any user-provided input that hasn't been\nsanitized or escaped, as it may lead to cross-site-scripting\nvulnerabilities.\n"
            },
            "parameters": [
              {
                "id": 451,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 2584,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 2585,
                        "name": "nothing",
                        "location": {
                          "page": "templates",
                          "anchor": "nothing"
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 628,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 432,
                    "name": "UnsafeHTMLDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "UnsafeHTMLDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/unsafe-html.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-html.ts#L7",
            "moduleSpecifier": "lit/directives/unsafe-html.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "unsafeHTML"
        }
      },
      {
        "id": 432,
        "name": "UnsafeHTMLDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 435,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/unsafe-html.d.ts",
                "line": 13,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 436,
                "name": "new UnsafeHTMLDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 437,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 432,
                  "name": "UnsafeHTMLDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "UnsafeHTMLDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 652,
                  "name": "Directive.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 651,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-html.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-html.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-html.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective.constructor"
            }
          },
          {
            "id": 433,
            "name": "directiveName",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
                "line": 13,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-html.ts#L13",
                "moduleSpecifier": "lit-html/directives/unsafe-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-html.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-html.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-html.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective.directiveName"
            }
          },
          {
            "id": 434,
            "name": "resultType",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
                "line": 14,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-html.ts#L14",
                "moduleSpecifier": "lit-html/directives/unsafe-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-html.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-html.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-html.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective.resultType"
            }
          },
          {
            "id": 440,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
                "line": 30,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-html.ts#L30",
                "moduleSpecifier": "lit-html/directives/unsafe-html.js"
              }
            ],
            "signatures": [
              {
                "id": 441,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 442,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "query",
                          "queryType": {
                            "type": "reference",
                            "id": 2584,
                            "name": "noChange",
                            "location": {
                              "page": "custom-directives",
                              "anchor": "noChange"
                            }
                          }
                        },
                        {
                          "type": "query",
                          "queryType": {
                            "type": "reference",
                            "id": 2585,
                            "name": "nothing",
                            "location": {
                              "page": "templates",
                              "anchor": "nothing"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 2584,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 2585,
                        "name": "nothing",
                        "location": {
                          "page": "templates",
                          "anchor": "nothing"
                        }
                      }
                    },
                    {
                      "type": "reference",
                      "id": 2562,
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": 1
                            },
                            {
                              "type": "literal",
                              "value": 2
                            }
                          ]
                        }
                      ],
                      "name": "TemplateResult",
                      "location": {
                        "page": "templates",
                        "anchor": "TemplateResult"
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 657,
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 656,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-html.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-html.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-html.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective.render"
            }
          },
          {
            "id": 445,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 139,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L139",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "id": 446,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 447,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 603,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  },
                  {
                    "id": 448,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 660,
                  "name": "Directive.update"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 659,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-html.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-html.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-html.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              435
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              439,
              438,
              433,
              434
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              443
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              440,
              445
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
            "line": 12,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-html.ts#L12",
            "moduleSpecifier": "lit-html/directives/unsafe-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 455,
            "name": "UnsafeSVGDirective",
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/unsafe-html.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-html.ts#L7",
            "moduleSpecifier": "lit/directives/unsafe-html.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 452,
        "name": "unsafeSVG",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Renders the result as SVG, rather than text.",
          "text": "The values `undefined`, `null`, and `nothing`, will all result in no content\n(empty string) being rendered.\n\nNote, this is unsafe to use with any user-provided input that hasn't been\nsanitized or escaped, as it may lead to cross-site-scripting\nvulnerabilities.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/unsafe-svg.ts",
            "line": 27,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-svg.ts#L27",
            "moduleSpecifier": "lit-html/directives/unsafe-svg.js"
          }
        ],
        "signatures": [
          {
            "id": 453,
            "name": "unsafeSVG",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Renders the result as SVG, rather than text.",
              "text": "The values `undefined`, `null`, and `nothing`, will all result in no content\n(empty string) being rendered.\n\nNote, this is unsafe to use with any user-provided input that hasn't been\nsanitized or escaped, as it may lead to cross-site-scripting\nvulnerabilities.\n"
            },
            "parameters": [
              {
                "id": 454,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 2584,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 2585,
                        "name": "nothing",
                        "location": {
                          "page": "templates",
                          "anchor": "nothing"
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 628,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 455,
                    "name": "UnsafeSVGDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "UnsafeSVGDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/unsafe-svg.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-svg.ts#L7",
            "moduleSpecifier": "lit/directives/unsafe-svg.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "unsafeSVG"
        }
      },
      {
        "id": 455,
        "name": "UnsafeSVGDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 458,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 459,
                "name": "new UnsafeSVGDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 460,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 455,
                  "name": "UnsafeSVGDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "UnsafeSVGDirective"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 436,
                  "name": "UnsafeHTMLDirective.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 435,
              "name": "UnsafeHTMLDirective.constructor",
              "location": {
                "page": "directives",
                "anchor": "UnsafeHTMLDirective.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-svg.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-svg.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-svg.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective.constructor"
            }
          },
          {
            "id": 456,
            "name": "directiveName",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-svg.ts",
                "line": 13,
                "character": 18,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-svg.ts#L13",
                "moduleSpecifier": "lit-html/directives/unsafe-svg.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "overwrites": {
              "type": "reference",
              "id": 433,
              "name": "UnsafeHTMLDirective.directiveName",
              "location": {
                "page": "directives",
                "anchor": "UnsafeHTMLDirective.directiveName"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-svg.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-svg.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-svg.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective.directiveName"
            }
          },
          {
            "id": 457,
            "name": "resultType",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-svg.ts",
                "line": 14,
                "character": 18,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-svg.ts#L14",
                "moduleSpecifier": "lit-html/directives/unsafe-svg.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "overwrites": {
              "type": "reference",
              "id": 434,
              "name": "UnsafeHTMLDirective.resultType",
              "location": {
                "page": "directives",
                "anchor": "UnsafeHTMLDirective.resultType"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-svg.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-svg.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-svg.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective.resultType"
            }
          },
          {
            "id": 461,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
                "line": 30,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-html.ts#L30",
                "moduleSpecifier": "lit-html/directives/unsafe-html.js"
              }
            ],
            "signatures": [
              {
                "id": 462,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 463,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "query",
                          "queryType": {
                            "type": "reference",
                            "id": 2584,
                            "name": "noChange",
                            "location": {
                              "page": "custom-directives",
                              "anchor": "noChange"
                            }
                          }
                        },
                        {
                          "type": "query",
                          "queryType": {
                            "type": "reference",
                            "id": 2585,
                            "name": "nothing",
                            "location": {
                              "page": "templates",
                              "anchor": "nothing"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 2584,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 2585,
                        "name": "nothing",
                        "location": {
                          "page": "templates",
                          "anchor": "nothing"
                        }
                      }
                    },
                    {
                      "type": "reference",
                      "id": 2562,
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": 1
                            },
                            {
                              "type": "literal",
                              "value": 2
                            }
                          ]
                        }
                      ],
                      "name": "TemplateResult",
                      "location": {
                        "page": "templates",
                        "anchor": "TemplateResult"
                      }
                    }
                  ]
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 441,
                  "name": "UnsafeHTMLDirective.render"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 440,
              "name": "UnsafeHTMLDirective.render",
              "location": {
                "page": "directives",
                "anchor": "UnsafeHTMLDirective.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-svg.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-svg.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-svg.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective.render"
            }
          },
          {
            "id": 466,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 139,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L139",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "id": 467,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 468,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 603,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  },
                  {
                    "id": 469,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 446,
                  "name": "UnsafeHTMLDirective.update"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 445,
              "name": "UnsafeHTMLDirective.update",
              "location": {
                "page": "directives",
                "anchor": "UnsafeHTMLDirective.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-svg.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-svg.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-svg.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              458
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              456,
              457
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              464
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              461,
              466
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/unsafe-svg.ts",
            "line": 12,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-svg.ts#L12",
            "moduleSpecifier": "lit-html/directives/unsafe-svg.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 432,
            "name": "UnsafeHTMLDirective",
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/unsafe-svg.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-svg.ts#L7",
            "moduleSpecifier": "lit/directives/unsafe-svg.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 432,
            "name": "UnsafeHTMLDirective",
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective"
            }
          },
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 500,
        "name": "until",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Renders one of a series of values, including Promises, to a Part.",
          "text": "Values are rendered in priority order, with the first argument having the\nhighest priority and the last argument having the lowest priority. If a\nvalue is a Promise, low-priority values will be rendered until it resolves.\n\nThe priority of values can be used to create placeholder content for async\ndata. For example, a Promise with pending content can be the first,\nhighest-priority, argument, and a non_promise loading indicator template can\nbe used as the second, lower-priority, argument. The loading indicator will\nrender immediately, and the primary content will render when the Promise\nresolves.\n\nExample:\n\n```js\nconst content = fetch('./content.txt').then(r => r.text());\nhtml`${until(content, html`<span>Loading...</span>`)}`\n```\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/until.ts",
            "line": 132,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/until.ts#L132",
            "moduleSpecifier": "lit-html/directives/until.js"
          }
        ],
        "signatures": [
          {
            "id": 501,
            "name": "until",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Renders one of a series of values, including Promises, to a Part.",
              "text": "Values are rendered in priority order, with the first argument having the\nhighest priority and the last argument having the lowest priority. If a\nvalue is a Promise, low-priority values will be rendered until it resolves.\n\nThe priority of values can be used to create placeholder content for async\ndata. For example, a Promise with pending content can be the first,\nhighest-priority, argument, and a non_promise loading indicator template can\nbe used as the second, lower-priority, argument. The loading indicator will\nrender immediately, and the primary content will render when the Promise\nresolves.\n\nExample:\n\n```js\nconst content = fetch('./content.txt').then(r => r.text());\nhtml`${until(content, html`<span>Loading...</span>`)}`\n```\n"
            },
            "parameters": [
              {
                "id": 502,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 628,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 470,
                    "name": "UntilDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "UntilDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/until.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
            "moduleSpecifier": "lit/directives/until.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "until"
        }
      },
      {
        "id": 470,
        "name": "UntilDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 471,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 472,
                "name": "new UntilDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 473,
                    "name": "_partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 470,
                  "name": "UntilDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "UntilDirective"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 30,
                  "name": "AsyncDirective.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 29,
              "name": "AsyncDirective.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.constructor"
            }
          },
          {
            "id": 489,
            "name": "isConnected",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {
              "shortText": "The connection state for this Directive."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 304,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L304",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 32,
              "name": "AsyncDirective.isConnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.isConnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.isConnected"
            }
          },
          {
            "id": 485,
            "name": "disconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/until.ts",
                "line": 100,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/until.ts#L100",
                "moduleSpecifier": "lit-html/directives/until.js"
              }
            ],
            "signatures": [
              {
                "id": 486,
                "name": "disconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 42,
                  "name": "AsyncDirective.disconnected"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 41,
              "name": "AsyncDirective.disconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.disconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.disconnected"
            }
          },
          {
            "id": 487,
            "name": "reconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/until.ts",
                "line": 105,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/until.ts#L105",
                "moduleSpecifier": "lit-html/directives/until.js"
              }
            ],
            "signatures": [
              {
                "id": 488,
                "name": "reconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 44,
                  "name": "AsyncDirective.reconnected"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 43,
              "name": "AsyncDirective.reconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.reconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.reconnected"
            }
          },
          {
            "id": 478,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/until.ts",
                "line": 25,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/until.ts#L25",
                "moduleSpecifier": "lit-html/directives/until.js"
              }
            ],
            "signatures": [
              {
                "id": 479,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 480,
                    "name": "args",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isRest": true
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 48,
                  "name": "AsyncDirective.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 47,
              "name": "AsyncDirective.render",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.render"
            }
          },
          {
            "id": 495,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
              "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 364,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L364",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "id": 496,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
                  "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
                },
                "parameters": [
                  {
                    "id": 497,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The value to set\n"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 39,
                  "name": "AsyncDirective.setValue"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 38,
              "name": "AsyncDirective.setValue",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.setValue"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.setValue"
            }
          },
          {
            "id": 481,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/until.ts",
                "line": 29,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/until.ts#L29",
                "moduleSpecifier": "lit-html/directives/until.js"
              }
            ],
            "signatures": [
              {
                "id": 482,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 483,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 603,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  },
                  {
                    "id": 484,
                    "name": "args",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 51,
                  "name": "AsyncDirective.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 50,
              "name": "AsyncDirective.update",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              471
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              474,
              477,
              475,
              476,
              489
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              498
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              490,
              485,
              487,
              478,
              495,
              481
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/until.ts",
            "line": 19,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/until.ts#L19",
            "moduleSpecifier": "lit-html/directives/until.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 28,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/until.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
            "moduleSpecifier": "lit/directives/until.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 28,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          },
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      }
    ]
  },
  {
    "slug": "custom-directives",
    "title": "Custom directives",
    "items": [
      {
        "id": 28,
        "name": "AsyncDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {
          "isAbstract": true
        },
        "comment": {
          "shortText": "An abstract `Directive` base class whose `disconnected` method will be\ncalled when the part containing the directive is cleared as a result of\nre-rendering, or when the user calls `part.setConnected(false)` on\na part that was previously rendered containing the directive (as happens\nwhen e.g. a LitElement disconnects from the DOM).",
          "text": "If `part.setConnected(true)` is subsequently called on a\ncontaining part, the directive's `reconnected` method will be called prior\nto its next `update`/`render` callbacks. When implementing `disconnected`,\n`reconnected` should also be implemented to be compatible with reconnection.\n\nNote that updates may occur while the directive is disconnected. As such,\ndirectives should generally check the `this.isConnected` flag during\nrender/update to determine whether it is safe to subscribe to resources\nthat may prevent garbage collection.\n"
        },
        "children": [
          {
            "id": 29,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 30,
                "name": "new AsyncDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 31,
                    "name": "_partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 28,
                  "name": "AsyncDirective",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "AsyncDirective"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 652,
                  "name": "Directive.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 651,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.constructor"
            }
          },
          {
            "id": 32,
            "name": "isConnected",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {
              "shortText": "The connection state for this Directive."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 304,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L304",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.isConnected"
            }
          },
          {
            "id": 41,
            "name": "disconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 385,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L385",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "id": 42,
                "name": "disconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.disconnected"
            }
          },
          {
            "id": 43,
            "name": "reconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 386,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L386",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "id": 44,
                "name": "reconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.reconnected"
            }
          },
          {
            "id": 47,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isAbstract": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 137,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L137",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "id": 48,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 49,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isRest": true
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 657,
                  "name": "Directive.render"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 656,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.render"
            }
          },
          {
            "id": 38,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
              "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 364,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L364",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "id": 39,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
                  "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
                },
                "parameters": [
                  {
                    "id": 40,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The value to set\n"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.setValue"
            }
          },
          {
            "id": 50,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 139,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L139",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "id": 51,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 52,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 603,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  },
                  {
                    "id": 53,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 660,
                  "name": "Directive.update"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 659,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              29
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              32
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              45
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              33,
              41,
              43,
              47,
              38,
              50
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/async-directive.ts",
            "line": 295,
            "character": 22,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L295",
            "moduleSpecifier": "lit-html/async-directive.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 159,
            "name": "AsyncReplaceDirective",
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective"
            }
          },
          {
            "type": "reference",
            "id": 298,
            "name": "RefDirective",
            "location": {
              "page": "directives",
              "anchor": "RefDirective"
            }
          },
          {
            "type": "reference",
            "id": 470,
            "name": "UntilDirective",
            "location": {
              "page": "directives",
              "anchor": "UntilDirective"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "AsyncDirective"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 21,
        "name": "directive",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Creates a user-facing directive function from a Directive class. This\nfunction has the same parameters as the directive's render() method."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 84,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L84",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "signatures": [
          {
            "id": 22,
            "name": "directive",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Creates a user-facing directive function from a Directive class. This\nfunction has the same parameters as the directive's render() method."
            },
            "typeParameter": [
              {
                "id": 23,
                "name": "C",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 622,
                  "name": "DirectiveClass",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "DirectiveClass"
                  }
                }
              }
            ],
            "parameters": [
              {
                "id": 24,
                "name": "c",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "C"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 25,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 26,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 27,
                        "name": "values",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isRest": true
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "literal",
                                "value": "render"
                              },
                              "objectType": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "name": "C"
                                  }
                                ],
                                "name": "InstanceType"
                              }
                            }
                          ],
                          "name": "Parameters"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 628,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "C"
                        }
                      ],
                      "name": "DirectiveResult",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "DirectiveResult"
                      }
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "directive"
        }
      },
      {
        "id": 705,
        "name": "clearPart",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 226,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L226",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 706,
            "name": "clearPart",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 707,
                "name": "part",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 539,
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "clearPart"
        }
      },
      {
        "id": 699,
        "name": "getCommittedValue",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Returns the committed value of a ChildPart.",
          "text": "The committed value is used for change detection and efficient updates of\nthe part. It can differ from the value set by the template or directive in\ncases where the template value is transformed before being commited.\n\n- `TemplateResult`s are committed as a `TemplateInstance`\n- Iterables are committed as `Array<ChildPart>`\n- All other types are committed as the template value or value returned or\n  set by a directive.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 208,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L208",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 700,
            "name": "getCommittedValue",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Returns the committed value of a ChildPart.",
              "text": "The committed value is used for change detection and efficient updates of\nthe part. It can differ from the value set by the template or directive in\ncases where the template value is transformed before being commited.\n\n- `TemplateResult`s are committed as a `TemplateInstance`\n- Iterables are committed as `Array<ChildPart>`\n- All other types are committed as the template value or value returned or\n  set by a directive.\n"
            },
            "parameters": [
              {
                "id": 701,
                "name": "part",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "\n"
                },
                "type": {
                  "type": "reference",
                  "id": 539,
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "getCommittedValue"
        }
      },
      {
        "id": 678,
        "name": "getDirectiveClass",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Retrieves the Directive class for a DirectiveResult"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 67,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L67",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 679,
            "name": "getDirectiveClass",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Retrieves the Directive class for a DirectiveResult"
            },
            "parameters": [
              {
                "id": 680,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 622,
                  "name": "DirectiveClass",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "DirectiveClass"
                  }
                }
              ]
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "getDirectiveClass"
        }
      },
      {
        "id": 684,
        "name": "insertPart",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Inserts a ChildPart into the given container ChildPart's DOM, either at the\nend of the container ChildPart, or before the optional `refPart`.",
          "text": "This does not add the part to the containerPart's committed value. That must\nbe done by callers.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 96,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L96",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 685,
            "name": "insertPart",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Inserts a ChildPart into the given container ChildPart's DOM, either at the\nend of the container ChildPart, or before the optional `refPart`.",
              "text": "This does not add the part to the containerPart's committed value. That must\nbe done by callers.\n"
            },
            "parameters": [
              {
                "id": 686,
                "name": "containerPart",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "Part within which to add the new ChildPart"
                },
                "type": {
                  "type": "reference",
                  "id": 539,
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              },
              {
                "id": 687,
                "name": "refPart",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "Part before which to add the new ChildPart; when omitted the\n    part added to the end of the `containerPart`"
                },
                "type": {
                  "type": "reference",
                  "id": 539,
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              },
              {
                "id": 688,
                "name": "part",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "Part to insert, or undefined to create a new part\n"
                },
                "type": {
                  "type": "reference",
                  "id": 539,
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 539,
              "name": "ChildPart",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "insertPart"
        }
      },
      {
        "id": 675,
        "name": "isDirectiveResult",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Tests if a value is a DirectiveResult."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 60,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L60",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 676,
            "name": "isDirectiveResult",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Tests if a value is a DirectiveResult."
            },
            "parameters": [
              {
                "id": 677,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "predicate",
              "name": "value",
              "asserts": false,
              "targetType": {
                "type": "reference",
                "id": 628,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 622,
                    "name": "DirectiveClass",
                    "location": {
                      "page": "custom-directives",
                      "anchor": "DirectiveClass"
                    }
                  }
                ],
                "name": "DirectiveResult",
                "location": {
                  "page": "custom-directives",
                  "anchor": "DirectiveResult"
                }
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isDirectiveResult"
        }
      },
      {
        "id": 663,
        "name": "isPrimitive",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Tests if a value is a primitive value.",
          "text": "See https://tc39.github.io/ecma262/#sec-typeof-operator\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 34,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L34",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 664,
            "name": "isPrimitive",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Tests if a value is a primitive value.",
              "text": "See https://tc39.github.io/ecma262/#sec-typeof-operator\n"
            },
            "parameters": [
              {
                "id": 665,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "predicate",
              "name": "value",
              "asserts": false,
              "targetType": {
                "type": "reference",
                "name": "Primitive"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isPrimitive"
        }
      },
      {
        "id": 681,
        "name": "isSingleExpression",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Tests whether a part has only a single-expression with no strings to\ninterpolate between.",
          "text": "Only AttributePart and PropertyPart can have multiple expressions.\nMulti-expression parts have a `strings` property and single-expression\nparts do not.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 79,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L79",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 682,
            "name": "isSingleExpression",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Tests whether a part has only a single-expression with no strings to\ninterpolate between.",
              "text": "Only AttributePart and PropertyPart can have multiple expressions.\nMulti-expression parts have a `strings` property and single-expression\nparts do not.\n"
            },
            "parameters": [
              {
                "id": 683,
                "name": "part",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 648,
                  "name": "PartInfo",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "PartInfo"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isSingleExpression"
        }
      },
      {
        "id": 671,
        "name": "isTemplateResult",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Tests if a value is a TemplateResult."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 48,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L48",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 672,
            "name": "isTemplateResult",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Tests if a value is a TemplateResult."
            },
            "parameters": [
              {
                "id": 673,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 674,
                "name": "type",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "id": 666,
                  "name": "TemplateResultType",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "TemplateResultType"
                  }
                }
              }
            ],
            "type": {
              "type": "predicate",
              "name": "value",
              "asserts": false,
              "targetType": {
                "type": "reference",
                "id": 2562,
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": 1
                      },
                      {
                        "type": "literal",
                        "value": 2
                      }
                    ]
                  }
                ],
                "name": "TemplateResult",
                "location": {
                  "page": "templates",
                  "anchor": "TemplateResult"
                }
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isTemplateResult"
        }
      },
      {
        "id": 702,
        "name": "removePart",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Removes a ChildPart from the DOM, including any of its content."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 215,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L215",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 703,
            "name": "removePart",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Removes a ChildPart from the DOM, including any of its content."
            },
            "parameters": [
              {
                "id": 704,
                "name": "part",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "The Part to remove\n"
                },
                "type": {
                  "type": "reference",
                  "id": 539,
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "removePart"
        }
      },
      {
        "id": 689,
        "name": "setChildPartValue",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Sets the value of a Part.",
          "text": "Note that this should only be used to set/update the value of user-created\nparts (i.e. those created using `insertPart`); it should not be used\nby directives to set the value of the directive's container part. Directives\nshould return a value from `update`/`render` to update their part state.\n\nFor directives that require setting their part value asynchronously, they\nshould extend `AsyncDirective` and call `this.setValue()`.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 167,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L167",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 690,
            "name": "setChildPartValue",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Sets the value of a Part.",
              "text": "Note that this should only be used to set/update the value of user-created\nparts (i.e. those created using `insertPart`); it should not be used\nby directives to set the value of the directive's container part. Directives\nshould return a value from `update`/`render` to update their part state.\n\nFor directives that require setting their part value asynchronously, they\nshould extend `AsyncDirective` and call `this.setValue()`.\n"
            },
            "typeParameter": [
              {
                "id": 691,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 539,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              }
            ],
            "parameters": [
              {
                "id": 692,
                "name": "part",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "Part to set"
                },
                "type": {
                  "type": "reference",
                  "name": "T"
                }
              },
              {
                "id": 693,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "Value to set"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 694,
                "name": "directiveParent",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "Used internally; should not be set by user\n"
                },
                "type": {
                  "type": "reference",
                  "id": 2608,
                  "name": "DirectiveParent",
                  "location": {
                    "page": "misc",
                    "anchor": "DirectiveParent"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "T"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "setChildPartValue"
        }
      },
      {
        "id": 695,
        "name": "setCommittedValue",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Sets the committed value of a ChildPart directly without triggering the\ncommit stage of the part.",
          "text": "This is useful in cases where a directive needs to update the part such\nthat the next update detects a value change or not. When value is omitted,\nthe next update will be guaranteed to be detected as a change.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 191,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L191",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 696,
            "name": "setCommittedValue",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Sets the committed value of a ChildPart directly without triggering the\ncommit stage of the part.",
              "text": "This is useful in cases where a directive needs to update the part such\nthat the next update detects a value change or not. When value is omitted,\nthe next update will be guaranteed to be detected as a change.\n"
            },
            "parameters": [
              {
                "id": 697,
                "name": "part",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {},
                "type": {
                  "type": "reference",
                  "id": 603,
                  "name": "Part",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "Part"
                  }
                }
              },
              {
                "id": 698,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "setCommittedValue"
        }
      },
      {
        "id": 666,
        "name": "TemplateResultType",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 37,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L37",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 667,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 668,
                "name": "HTML",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive-helpers.d.ts",
                    "line": 16,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 1
                }
              },
              {
                "id": 669,
                "name": "SVG",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive-helpers.d.ts",
                    "line": 17,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 2
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "kind": 1024,
                "children": [
                  668,
                  669
                ]
              }
            ],
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive-helpers.d.ts",
                "line": 15,
                "character": 41
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "TemplateResultType"
        }
      },
      {
        "id": 503,
        "name": "AttributePart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 504,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/lit-html.d.ts",
                "line": 241,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 505,
                "name": "new AttributePart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 506,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "HTMLElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                      }
                    }
                  },
                  {
                    "id": 507,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 508,
                    "name": "strings",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  },
                  {
                    "id": 509,
                    "name": "parent",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 2613,
                      "name": "Disconnectable",
                      "location": {
                        "page": "misc",
                        "anchor": "Disconnectable"
                      }
                    }
                  },
                  {
                    "id": 510,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 2586,
                          "name": "RenderOptions",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 503,
                  "name": "AttributePart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "AttributePart"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.constructor"
            }
          },
          {
            "id": 512,
            "name": "element",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1389,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1389",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLElement",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.element"
            }
          },
          {
            "id": 513,
            "name": "name",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1390,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1390",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.name"
            }
          },
          {
            "id": 514,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1391,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1391",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 2586,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.options"
            }
          },
          {
            "id": 515,
            "name": "strings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "If this attribute part represents an interpolation, this contains the\nstatic strings of the interpolation. For single-value, complete bindings,\nthis is undefined."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1398,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1398",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.strings"
            }
          },
          {
            "id": 511,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1384,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1384",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": 1
                },
                {
                  "type": "literal",
                  "value": 3
                },
                {
                  "type": "literal",
                  "value": 4
                },
                {
                  "type": "literal",
                  "value": 5
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.type"
            }
          },
          {
            "id": 517,
            "name": "tagName",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1410,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1410",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "getSignature": [
              {
                "id": 518,
                "name": "tagName",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.tagName"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              504
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              516,
              512,
              513,
              514,
              515,
              511
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              519,
              517
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1383,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1383",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 521,
            "name": "BooleanAttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart"
            }
          },
          {
            "type": "reference",
            "id": 582,
            "name": "EventPart",
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart"
            }
          },
          {
            "type": "reference",
            "id": 604,
            "name": "PropertyPart",
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart"
            }
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "id": 2613,
            "name": "Disconnectable",
            "location": {
              "page": "misc",
              "anchor": "Disconnectable"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "AttributePart"
        }
      },
      {
        "id": 521,
        "name": "BooleanAttributePart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 522,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 523,
                "name": "new BooleanAttributePart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 524,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "HTMLElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                      }
                    }
                  },
                  {
                    "id": 525,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 526,
                    "name": "strings",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  },
                  {
                    "id": 527,
                    "name": "parent",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 2613,
                      "name": "Disconnectable",
                      "location": {
                        "page": "misc",
                        "anchor": "Disconnectable"
                      }
                    }
                  },
                  {
                    "id": 528,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 2586,
                          "name": "RenderOptions",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 521,
                  "name": "BooleanAttributePart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "BooleanAttributePart"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 505,
                  "name": "AttributePart.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 504,
              "name": "AttributePart.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.constructor"
            }
          },
          {
            "id": 530,
            "name": "element",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1389,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1389",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLElement",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 512,
              "name": "AttributePart.element",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.element"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.element"
            }
          },
          {
            "id": 531,
            "name": "name",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1390,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1390",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 513,
              "name": "AttributePart.name",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.name"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.name"
            }
          },
          {
            "id": 532,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1391,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1391",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 2586,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 514,
              "name": "AttributePart.options",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.options"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.options"
            }
          },
          {
            "id": 533,
            "name": "strings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "If this attribute part represents an interpolation, this contains the\nstatic strings of the interpolation. For single-value, complete bindings,\nthis is undefined."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1398,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1398",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 515,
              "name": "AttributePart.strings",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.strings"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.strings"
            }
          },
          {
            "id": 529,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1559,
                "character": 20,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1559",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 4
            },
            "defaultValue": "4",
            "overwrites": {
              "type": "reference",
              "id": 511,
              "name": "AttributePart.type",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.type"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.type"
            }
          },
          {
            "id": 535,
            "name": "tagName",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1410,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1410",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "getSignature": [
              {
                "id": 536,
                "name": "tagName",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 517,
              "name": "AttributePart.tagName",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.tagName"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.tagName"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              522
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              534,
              530,
              531,
              532,
              533,
              529
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              537,
              535
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1558,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1558",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 503,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "BooleanAttributePart"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 503,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ]
      },
      {
        "id": 539,
        "name": "ChildPart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 540,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/lit-html.d.ts",
                "line": 167,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 541,
                "name": "new ChildPart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 542,
                    "name": "startNode",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "ChildNode"
                    }
                  },
                  {
                    "id": 543,
                    "name": "endNode",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "reference",
                          "name": "ChildNode"
                        }
                      ]
                    }
                  },
                  {
                    "id": 544,
                    "name": "parent",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 539,
                          "name": "ChildPart",
                          "location": {
                            "page": "custom-directives",
                            "anchor": "ChildPart"
                          }
                        },
                        {
                          "type": "reference",
                          "name": "TemplateInstance"
                        }
                      ]
                    }
                  },
                  {
                    "id": 545,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 2586,
                          "name": "RenderOptions",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 539,
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.constructor"
            }
          },
          {
            "id": 547,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1008,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1008",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 2586,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.options"
            }
          },
          {
            "id": 546,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1007,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1007",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 2
            },
            "defaultValue": "2",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.type"
            }
          },
          {
            "id": 556,
            "name": "endNode",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "The part's trailing marker node, if any. See `.parentNode` for more\ninformation."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1115,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1115",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "Node"
                }
              ]
            },
            "getSignature": [
              {
                "id": 557,
                "name": "endNode",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "The part's trailing marker node, if any. See `.parentNode` for more\ninformation."
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "Node"
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.endNode"
            }
          },
          {
            "id": 552,
            "name": "parentNode",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "The parent node into which the part renders its content.",
              "text": "A ChildPart's content consists of a range of adjacent child nodes of\n`.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n`.endNode`).\n\n- If both `.startNode` and `.endNode` are non-null, then the part's content\nconsists of all siblings between `.startNode` and `.endNode`, exclusively.\n\n- If `.startNode` is non-null but `.endNode` is null, then the part's\ncontent consists of all siblings following `.startNode`, up to and\nincluding the last child of `.parentNode`. If `.endNode` is non-null, then\n`.startNode` will always be non-null.\n\n- If both `.endNode` and `.startNode` are null, then the part's content\nconsists of all child nodes of `.parentNode`.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1088,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1088",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Node"
            },
            "getSignature": [
              {
                "id": 553,
                "name": "parentNode",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "The parent node into which the part renders its content.",
                  "text": "A ChildPart's content consists of a range of adjacent child nodes of\n`.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n`.endNode`).\n\n- If both `.startNode` and `.endNode` are non-null, then the part's content\nconsists of all siblings between `.startNode` and `.endNode`, exclusively.\n\n- If `.startNode` is non-null but `.endNode` is null, then the part's\ncontent consists of all siblings following `.startNode`, up to and\nincluding the last child of `.parentNode`. If `.endNode` is non-null, then\n`.startNode` will always be non-null.\n\n- If both `.endNode` and `.startNode` are null, then the part's content\nconsists of all child nodes of `.parentNode`.\n"
                },
                "type": {
                  "type": "reference",
                  "name": "Node"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.parentNode"
            }
          },
          {
            "id": 554,
            "name": "startNode",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "The part's leading marker node, if any. See `.parentNode` for more\ninformation."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1107,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1107",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "Node"
                }
              ]
            },
            "getSignature": [
              {
                "id": 555,
                "name": "startNode",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "The part's leading marker node, if any. See `.parentNode` for more\ninformation."
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "Node"
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.startNode"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              540
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              548,
              566,
              563,
              565,
              564,
              562,
              549,
              547,
              546
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              550,
              556,
              552,
              554
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              558
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1006,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1006",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 2619,
            "name": "RootPart",
            "location": {
              "page": "misc",
              "anchor": "RootPart"
            }
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "id": 2613,
            "name": "Disconnectable",
            "location": {
              "page": "misc",
              "anchor": "Disconnectable"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "ChildPart"
        }
      },
      {
        "id": 650,
        "name": "Directive",
        "kind": 128,
        "kindString": "Class",
        "flags": {
          "isAbstract": true
        },
        "comment": {
          "shortText": "Base class for creating custom directives. Users should extend this class,\nimplement `render` and/or `update`, and then pass their subclass to\n`directive`."
        },
        "children": [
          {
            "id": 651,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directive.d.ts",
                "line": 61,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 652,
                "name": "new Directive",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 653,
                    "name": "_partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 650,
                  "name": "Directive",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "Directive"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "Directive.constructor"
            }
          },
          {
            "id": 656,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isAbstract": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 137,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L137",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "id": 657,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 658,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isRest": true
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "Directive.render"
            }
          },
          {
            "id": 659,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 139,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L139",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "id": 660,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 661,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 603,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  },
                  {
                    "id": 662,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "Directive.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              651
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              654
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              656,
              659
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 97,
            "character": 22,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L97",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 28,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          },
          {
            "type": "reference",
            "id": 201,
            "name": "CacheDirective",
            "location": {
              "page": "directives",
              "anchor": "CacheDirective"
            }
          },
          {
            "type": "reference",
            "id": 222,
            "name": "ClassMapDirective",
            "location": {
              "page": "directives",
              "anchor": "ClassMapDirective"
            }
          },
          {
            "type": "reference",
            "id": 243,
            "name": "GuardDirective",
            "location": {
              "page": "directives",
              "anchor": "GuardDirective"
            }
          },
          {
            "type": "reference",
            "id": 269,
            "name": "LiveDirective",
            "location": {
              "page": "directives",
              "anchor": "LiveDirective"
            }
          },
          {
            "type": "reference",
            "id": 372,
            "name": "RepeatDirective",
            "location": {
              "page": "directives",
              "anchor": "RepeatDirective"
            }
          },
          {
            "type": "reference",
            "id": 401,
            "name": "StyleMapDirective",
            "location": {
              "page": "directives",
              "anchor": "StyleMapDirective"
            }
          },
          {
            "type": "reference",
            "id": 418,
            "name": "TemplateContentDirective",
            "location": {
              "page": "directives",
              "anchor": "TemplateContentDirective"
            }
          },
          {
            "type": "reference",
            "id": 432,
            "name": "UnsafeHTMLDirective",
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective"
            }
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "id": 2613,
            "name": "Disconnectable",
            "location": {
              "page": "misc",
              "anchor": "Disconnectable"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "Directive"
        }
      },
      {
        "id": 567,
        "name": "ElementPart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 568,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/lit-html.d.ts",
                "line": 274,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 569,
                "name": "new ElementPart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 570,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    }
                  },
                  {
                    "id": 571,
                    "name": "parent",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 2613,
                      "name": "Disconnectable",
                      "location": {
                        "page": "misc",
                        "anchor": "Disconnectable"
                      }
                    }
                  },
                  {
                    "id": 572,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 2586,
                          "name": "RenderOptions",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 567,
                  "name": "ElementPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ElementPart"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPart.constructor"
            }
          },
          {
            "id": 573,
            "name": "element",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1686,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1686",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPart.element"
            }
          },
          {
            "id": 576,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1683,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1683",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 2586,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPart.options"
            }
          },
          {
            "id": 574,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1669,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1669",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 6
            },
            "defaultValue": "6",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPart.type"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              568
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              575,
              573,
              576,
              574
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              577
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              579
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1668,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1668",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "id": 2613,
            "name": "Disconnectable",
            "location": {
              "page": "misc",
              "anchor": "Disconnectable"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "ElementPart"
        }
      },
      {
        "id": 582,
        "name": "EventPart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 583,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/lit-html.d.ts",
                "line": 265,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 584,
                "name": "new EventPart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 585,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "HTMLElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                      }
                    }
                  },
                  {
                    "id": 586,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 587,
                    "name": "strings",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  },
                  {
                    "id": 588,
                    "name": "parent",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 2613,
                      "name": "Disconnectable",
                      "location": {
                        "page": "misc",
                        "anchor": "Disconnectable"
                      }
                    }
                  },
                  {
                    "id": 589,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 2586,
                          "name": "RenderOptions",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 582,
                  "name": "EventPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "EventPart"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 505,
                  "name": "AttributePart.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 504,
              "name": "AttributePart.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.constructor"
            }
          },
          {
            "id": 594,
            "name": "element",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1389,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1389",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLElement",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 512,
              "name": "AttributePart.element",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.element"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.element"
            }
          },
          {
            "id": 595,
            "name": "name",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1390,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1390",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 513,
              "name": "AttributePart.name",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.name"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.name"
            }
          },
          {
            "id": 596,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1391,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1391",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 2586,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 514,
              "name": "AttributePart.options",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.options"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.options"
            }
          },
          {
            "id": 597,
            "name": "strings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "If this attribute part represents an interpolation, this contains the\nstatic strings of the interpolation. For single-value, complete bindings,\nthis is undefined."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1398,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1398",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 515,
              "name": "AttributePart.strings",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.strings"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.strings"
            }
          },
          {
            "id": 590,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1587,
                "character": 20,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1587",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 5
            },
            "defaultValue": "5",
            "overwrites": {
              "type": "reference",
              "id": 511,
              "name": "AttributePart.type",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.type"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.type"
            }
          },
          {
            "id": 599,
            "name": "tagName",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1410,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1410",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "getSignature": [
              {
                "id": 600,
                "name": "tagName",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 517,
              "name": "AttributePart.tagName",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.tagName"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.tagName"
            }
          },
          {
            "id": 591,
            "name": "handleEvent",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1658,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1658",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "signatures": [
              {
                "id": 592,
                "name": "handleEvent",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 593,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Event"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.handleEvent"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              583
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              598,
              594,
              595,
              596,
              597,
              590
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              601,
              599
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              591
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1586,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1586",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 503,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "EventPart"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 503,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ]
      },
      {
        "id": 630,
        "name": "PartType",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 42,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L42",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 631,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 632,
                "name": "ATTRIBUTE",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive.d.ts",
                    "line": 23,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 1
                }
              },
              {
                "id": 635,
                "name": "BOOLEAN_ATTRIBUTE",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive.d.ts",
                    "line": 26,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 4
                }
              },
              {
                "id": 633,
                "name": "CHILD",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive.d.ts",
                    "line": 24,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 2
                }
              },
              {
                "id": 637,
                "name": "ELEMENT",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive.d.ts",
                    "line": 28,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 6
                }
              },
              {
                "id": 636,
                "name": "EVENT",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive.d.ts",
                    "line": 27,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 5
                }
              },
              {
                "id": 634,
                "name": "PROPERTY",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive.d.ts",
                    "line": 25,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 3
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "kind": 1024,
                "children": [
                  632,
                  635,
                  633,
                  637,
                  636,
                  634
                ]
              }
            ],
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive.d.ts",
                "line": 22,
                "character": 31
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "PartType"
        }
      },
      {
        "id": 604,
        "name": "PropertyPart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 605,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 606,
                "name": "new PropertyPart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 607,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "HTMLElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                      }
                    }
                  },
                  {
                    "id": 608,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 609,
                    "name": "strings",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  },
                  {
                    "id": 610,
                    "name": "parent",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 2613,
                      "name": "Disconnectable",
                      "location": {
                        "page": "misc",
                        "anchor": "Disconnectable"
                      }
                    }
                  },
                  {
                    "id": 611,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 2586,
                          "name": "RenderOptions",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 604,
                  "name": "PropertyPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "PropertyPart"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 505,
                  "name": "AttributePart.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 504,
              "name": "AttributePart.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.constructor"
            }
          },
          {
            "id": 613,
            "name": "element",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1389,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1389",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLElement",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 512,
              "name": "AttributePart.element",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.element"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.element"
            }
          },
          {
            "id": 614,
            "name": "name",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1390,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1390",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 513,
              "name": "AttributePart.name",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.name"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.name"
            }
          },
          {
            "id": 615,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1391,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1391",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 2586,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 514,
              "name": "AttributePart.options",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.options"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.options"
            }
          },
          {
            "id": 616,
            "name": "strings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "If this attribute part represents an interpolation, this contains the\nstatic strings of the interpolation. For single-value, complete bindings,\nthis is undefined."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1398,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1398",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 515,
              "name": "AttributePart.strings",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.strings"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.strings"
            }
          },
          {
            "id": 612,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1538,
                "character": 20,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1538",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 3
            },
            "defaultValue": "3",
            "overwrites": {
              "type": "reference",
              "id": 511,
              "name": "AttributePart.type",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.type"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.type"
            }
          },
          {
            "id": 618,
            "name": "tagName",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1410,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1410",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "getSignature": [
              {
                "id": 619,
                "name": "tagName",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 517,
              "name": "AttributePart.tagName",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.tagName"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.tagName"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              605
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              617,
              613,
              614,
              615,
              616,
              612
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              620,
              618
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1537,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1537",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 503,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "PropertyPart"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 503,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ]
      },
      {
        "id": 641,
        "name": "AttributePartInfo",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 644,
            "name": "name",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 64,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L64",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePartInfo.name"
            }
          },
          {
            "id": 643,
            "name": "strings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 63,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L63",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePartInfo.strings"
            }
          },
          {
            "id": 645,
            "name": "tagName",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 65,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L65",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePartInfo.tagName"
            }
          },
          {
            "id": 642,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 58,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L58",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": 1
                },
                {
                  "type": "literal",
                  "value": 3
                },
                {
                  "type": "literal",
                  "value": 4
                },
                {
                  "type": "literal",
                  "value": 5
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePartInfo.type"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              644,
              643,
              645,
              642
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 57,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L57",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "AttributePartInfo"
        }
      },
      {
        "id": 639,
        "name": "ChildPartInfo",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 640,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 54,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L54",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 2
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPartInfo.type"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              640
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 53,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L53",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "ChildPartInfo"
        }
      },
      {
        "id": 622,
        "name": "DirectiveClass",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 623,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 624,
                "name": "new DirectiveClass",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 625,
                    "name": "part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 648,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 650,
                  "name": "Directive",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "Directive"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "DirectiveClass.constructor"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              623
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 19,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L19",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "DirectiveClass"
        }
      },
      {
        "id": 626,
        "name": "DirectiveParameters",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "This utility type extracts the signature of a directive class's render()\nmethod so we can use it for the type of the generated directive function."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 27,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L27",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "typeParameter": [
          {
            "id": 627,
            "name": "C",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "id": 650,
              "name": "Directive",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive"
              }
            }
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "indexedAccess",
              "indexType": {
                "type": "literal",
                "value": "render"
              },
              "objectType": {
                "type": "reference",
                "name": "C"
              }
            }
          ],
          "name": "Parameters"
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "DirectiveParameters"
        }
      },
      {
        "id": 628,
        "name": "DirectiveResult",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "A generated directive function doesn't evaluate the directive, but just\nreturns a DirectiveResult object that captures the arguments."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 33,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L33",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "typeParameter": [
          {
            "id": 629,
            "name": "C",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "id": 622,
              "name": "DirectiveClass",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveClass"
              }
            },
            "default": {
              "type": "reference",
              "id": 622,
              "name": "DirectiveClass",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveClass"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "DirectiveResult"
        }
      },
      {
        "id": 646,
        "name": "ElementPartInfo",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 647,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 69,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L69",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 6
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPartInfo.type"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              647
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 68,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L68",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "ElementPartInfo"
        }
      },
      {
        "id": 603,
        "name": "Part",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 997,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L997",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "id": 539,
              "name": "ChildPart",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart"
              }
            },
            {
              "type": "reference",
              "id": 503,
              "name": "AttributePart",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart"
              }
            },
            {
              "type": "reference",
              "id": 604,
              "name": "PropertyPart",
              "location": {
                "page": "custom-directives",
                "anchor": "PropertyPart"
              }
            },
            {
              "type": "reference",
              "id": 521,
              "name": "BooleanAttributePart",
              "location": {
                "page": "custom-directives",
                "anchor": "BooleanAttributePart"
              }
            },
            {
              "type": "reference",
              "id": 567,
              "name": "ElementPart",
              "location": {
                "page": "custom-directives",
                "anchor": "ElementPart"
              }
            },
            {
              "type": "reference",
              "id": 582,
              "name": "EventPart",
              "location": {
                "page": "custom-directives",
                "anchor": "EventPart"
              }
            }
          ]
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "Part"
        }
      },
      {
        "id": 648,
        "name": "PartInfo",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "Information about the part a directive is bound to.",
          "text": "This is useful for checking that a directive is attached to a valid part,\nsuch as with directive that can only be used on attribute bindings.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 78,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L78",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "id": 639,
              "name": "ChildPartInfo",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPartInfo"
              }
            },
            {
              "type": "reference",
              "id": 641,
              "name": "AttributePartInfo",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePartInfo"
              }
            },
            {
              "type": "reference",
              "id": 646,
              "name": "ElementPartInfo",
              "location": {
                "page": "custom-directives",
                "anchor": "ElementPartInfo"
              }
            }
          ]
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "PartInfo"
        }
      },
      {
        "id": 2584,
        "name": "noChange",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A sentinel value that signals that a value was handled by a directive and\nshould not be written to the DOM."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 326,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L326",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "typeOperator",
          "operator": "unique",
          "target": {
            "type": "intrinsic",
            "name": "symbol"
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "noChange"
        }
      }
    ]
  },
  {
    "slug": "static-html",
    "title": "Static HTML",
    "items": [
      {
        "id": 2690,
        "name": "html",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Interprets a template literal as an HTML template that can efficiently\nrender to and update a container.",
          "text": "Includes static value support from `lit-html/static.js`.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 124,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/static.ts#L124",
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "signatures": [
          {
            "id": 2691,
            "name": "html",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Interprets a template literal as an HTML template that can efficiently\nrender to and update a container.",
              "text": "Includes static value support from `lit-html/static.js`.\n"
            },
            "parameters": [
              {
                "id": 2692,
                "name": "strings",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 2693,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 2562,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "ResultType"
                }
              ],
              "name": "TemplateResult",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/static-html.ts#L7",
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "html"
        }
      },
      {
        "id": 2669,
        "name": "literal",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Tags a string literal so that it behaves like part of the static template\nstrings instead of a dynamic value.",
          "text": "The only values that may be used in template expressions are other tagged\n`literal` results or `unsafeStatic` values (note that untrusted content\nshould never be passed to `unsafeStatic`).\n\nUsers must take care to ensure that adding the static string to the template\nresults in well-formed HTML, or else templates may break unexpectedly.\n\nStatic values can be changed, but they will cause a complete re-render since\nthey effectively create a new template.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 51,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/static.ts#L51",
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "signatures": [
          {
            "id": 2670,
            "name": "literal",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Tags a string literal so that it behaves like part of the static template\nstrings instead of a dynamic value.",
              "text": "The only values that may be used in template expressions are other tagged\n`literal` results or `unsafeStatic` values (note that untrusted content\nshould never be passed to `unsafeStatic`).\n\nUsers must take care to ensure that adding the static string to the template\nresults in well-formed HTML, or else templates may break unexpectedly.\n\nStatic values can be changed, but they will cause a complete re-render since\nthey effectively create a new template.\n"
            },
            "parameters": [
              {
                "id": 2671,
                "name": "strings",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 2672,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2673,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 2674,
                    "name": "_$litStatic$",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/static.d.ts",
                        "line": 39,
                        "character": 4
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [
                      2674
                    ]
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/static-html.ts#L7",
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "literal"
        }
      },
      {
        "id": 2694,
        "name": "svg",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Interprets a template literal as an SVG template that can efficiently\nrender to and update a container.",
          "text": "Includes static value support from `lit-html/static.js`.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 132,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/static.ts#L132",
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "signatures": [
          {
            "id": 2695,
            "name": "svg",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Interprets a template literal as an SVG template that can efficiently\nrender to and update a container.",
              "text": "Includes static value support from `lit-html/static.js`.\n"
            },
            "parameters": [
              {
                "id": 2696,
                "name": "strings",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 2697,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 2562,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "ResultType"
                }
              ],
              "name": "TemplateResult",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/static-html.ts#L7",
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "svg"
        }
      },
      {
        "id": 2664,
        "name": "unsafeStatic",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Wraps a string so that it behaves like part of the static template\nstrings instead of a dynamic value.",
          "text": "Users must take care to ensure that adding the static string to the template\nresults in well-formed HTML, or else templates may break unexpectedly.\n\nNote that this function is unsafe to use on untrusted content, as it will be\ndirectly parsed into HTML. Do not pass user input to this function\nwithout sanitizing it.\n\nStatic values can be changed, but they will cause a complete re-render\nsince they effectively create a new template.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 22,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/static.ts#L22",
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "signatures": [
          {
            "id": 2665,
            "name": "unsafeStatic",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Wraps a string so that it behaves like part of the static template\nstrings instead of a dynamic value.",
              "text": "Users must take care to ensure that adding the static string to the template\nresults in well-formed HTML, or else templates may break unexpectedly.\n\nNote that this function is unsafe to use on untrusted content, as it will be\ndirectly parsed into HTML. Do not pass user input to this function\nwithout sanitizing it.\n\nStatic values can be changed, but they will cause a complete re-render\nsince they effectively create a new template.\n"
            },
            "parameters": [
              {
                "id": 2666,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2667,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 2668,
                    "name": "_$litStatic$",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/static.d.ts",
                        "line": 22,
                        "character": 4
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [
                      2668
                    ]
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/static-html.ts#L7",
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "unsafeStatic"
        }
      },
      {
        "id": 2675,
        "name": "withStatic",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Wraps a lit-html template tag (`html` or `svg`) to add static value support."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 68,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/static.ts#L68",
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "signatures": [
          {
            "id": 2676,
            "name": "withStatic",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Wraps a lit-html template tag (`html` or `svg`) to add static value support."
            },
            "parameters": [
              {
                "id": 2677,
                "name": "coreTag",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 2678,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 2679,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 2680,
                                "name": "strings",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "reference",
                                  "name": "TemplateStringsArray"
                                }
                              },
                              {
                                "id": 2681,
                                "name": "values",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {
                                  "isRest": true
                                },
                                "type": {
                                  "type": "array",
                                  "elementType": {
                                    "type": "intrinsic",
                                    "name": "unknown"
                                  }
                                }
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "id": 2562,
                              "typeArguments": [
                                {
                                  "type": "literal",
                                  "value": 1
                                }
                              ],
                              "name": "TemplateResult",
                              "location": {
                                "page": "templates",
                                "anchor": "TemplateResult"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 2682,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 2683,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 2684,
                                "name": "strings",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "reference",
                                  "name": "TemplateStringsArray"
                                }
                              },
                              {
                                "id": 2685,
                                "name": "values",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {
                                  "isRest": true
                                },
                                "type": {
                                  "type": "array",
                                  "elementType": {
                                    "type": "intrinsic",
                                    "name": "unknown"
                                  }
                                }
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "id": 2562,
                              "typeArguments": [
                                {
                                  "type": "literal",
                                  "value": 2
                                }
                              ],
                              "name": "TemplateResult",
                              "location": {
                                "page": "templates",
                                "anchor": "TemplateResult"
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2686,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 2687,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 2688,
                        "name": "strings",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "TemplateStringsArray"
                        }
                      },
                      {
                        "id": 2689,
                        "name": "values",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isRest": true
                        },
                        "type": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 2562,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "ResultType"
                        }
                      ],
                      "name": "TemplateResult",
                      "location": {
                        "page": "templates",
                        "anchor": "TemplateResult"
                      }
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/static-html.ts#L7",
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "withStatic"
        }
      }
    ]
  },
  {
    "slug": "controllers",
    "title": "Controllers",
    "items": [
      {
        "id": 1588,
        "name": "ReactiveController",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "A Reactive Controller is an object that enables sub-component code\norganization and reuse by aggregating the state, behavior, and lifecycle\nhooks related to a single feature.",
          "text": "Controllers are added to a host component, or other object that implements\nthe `ReactiveControllerHost` interface, via the `addController()` method.\nThey can hook their host components's lifecycle by implementing one or more\nof the lifecycle callbacks, or initiate an update of the host component by\ncalling `requestUpdate()` on the host.\n"
        },
        "children": [
          {
            "id": 1589,
            "name": "hostConnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Called when the host is connected to the component tree. For custom\nelement hosts, this corresponds to the `connectedCallback()` lifecycle,\nwhich is only called when the component is connected to the document."
            },
            "children": [],
            "signatures": [
              {
                "id": 1590,
                "name": "hostConnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Called when the host is connected to the component tree. For custom\nelement hosts, this corresponds to the `connectedCallback()` lifecycle,\nwhich is only called when the component is connected to the document."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveController.hostConnected"
            }
          },
          {
            "id": 1591,
            "name": "hostDisconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Called when the host is disconnected from the component tree. For custom\nelement hosts, this corresponds to the `disconnectedCallback()` lifecycle,\nwhich is called the host or an ancestor component is disconnected from the\ndocument."
            },
            "children": [],
            "signatures": [
              {
                "id": 1592,
                "name": "hostDisconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Called when the host is disconnected from the component tree. For custom\nelement hosts, this corresponds to the `disconnectedCallback()` lifecycle,\nwhich is called the host or an ancestor component is disconnected from the\ndocument."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveController.hostDisconnected"
            }
          },
          {
            "id": 1593,
            "name": "hostUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Called during the client-side host update, just before the host calls\nits own update.",
              "text": "Code in `update()` can depend on the DOM as it is not called in\nserver-side rendering.\n"
            },
            "children": [],
            "signatures": [
              {
                "id": 1594,
                "name": "hostUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Called during the client-side host update, just before the host calls\nits own update.",
                  "text": "Code in `update()` can depend on the DOM as it is not called in\nserver-side rendering.\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveController.hostUpdate"
            }
          },
          {
            "id": 1595,
            "name": "hostUpdated",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Called after a host update, just before the host calls firstUpdated and\nupdated. It is not called in server-side rendering."
            },
            "children": [],
            "signatures": [
              {
                "id": 1596,
                "name": "hostUpdated",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Called after a host update, just before the host calls firstUpdated and\nupdated. It is not called in server-side rendering."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveController.hostUpdated"
            }
          }
        ],
        "groups": [
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              1589,
              1591,
              1593,
              1595
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-controller.ts",
            "line": 53,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-controller.ts#L53",
            "moduleSpecifier": "reactive-element/reactive-controller.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "controllers",
          "anchor": "ReactiveController"
        }
      },
      {
        "id": 1597,
        "name": "ReactiveControllerHost",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "An object that can host Reactive Controllers and call their lifecycle\ncallbacks."
        },
        "children": [
          {
            "id": 1606,
            "name": "updateComplete",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "comment": {
              "shortText": "Returns a Promise that resolves when the host has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
              "tags": [
                {
                  "tag": "returns",
                  "text": "A promise of a boolean that indicates if the update resolved\n    without triggering another update.\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-controller.ts",
                "line": 39,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-controller.ts#L39",
                "moduleSpecifier": "reactive-element/reactive-controller.js"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              ],
              "name": "Promise"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveControllerHost.updateComplete"
            }
          },
          {
            "id": 1598,
            "name": "addController",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Adds a controller to the host, which sets up the controller's lifecycle\nmethods to be called with the host's lifecycle."
            },
            "children": [],
            "signatures": [
              {
                "id": 1599,
                "name": "addController",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Adds a controller to the host, which sets up the controller's lifecycle\nmethods to be called with the host's lifecycle."
                },
                "parameters": [
                  {
                    "id": 1600,
                    "name": "controller",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1588,
                      "name": "ReactiveController",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveController"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveControllerHost.addController"
            }
          },
          {
            "id": 1601,
            "name": "removeController",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Removes a controller from the host."
            },
            "children": [],
            "signatures": [
              {
                "id": 1602,
                "name": "removeController",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Removes a controller from the host."
                },
                "parameters": [
                  {
                    "id": 1603,
                    "name": "controller",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1588,
                      "name": "ReactiveController",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveController"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveControllerHost.removeController"
            }
          },
          {
            "id": 1604,
            "name": "requestUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Requests a host update which is processed asynchronously. The update can\nbe waited on via the `updateComplete` property."
            },
            "children": [],
            "signatures": [
              {
                "id": 1605,
                "name": "requestUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Requests a host update which is processed asynchronously. The update can\nbe waited on via the `updateComplete` property."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveControllerHost.requestUpdate"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              1606
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              1598,
              1601,
              1604
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-controller.ts",
            "line": 11,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-controller.ts#L11",
            "moduleSpecifier": "reactive-element/reactive-controller.js"
          }
        ],
        "implementedBy": [
          {
            "type": "reference",
            "id": 1650,
            "name": "ReactiveElement",
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "controllers",
          "anchor": "ReactiveControllerHost"
        }
      }
    ]
  },
  {
    "slug": "misc",
    "title": "Misc",
    "items": [
      {
        "id": 1636,
        "name": "defaultConverter",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 218,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L218",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "type": {
          "type": "reference",
          "id": 1607,
          "name": "ComplexAttributeConverter",
          "location": {
            "page": "ReactiveElement",
            "anchor": "ComplexAttributeConverter"
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "defaultConverter"
        }
      },
      {
        "id": 1641,
        "name": "notEqual",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Change function that returns true if `value` is different from `oldValue`.\nThis method is used as the default for a property's `hasChanged` function."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 268,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L268",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "signatures": [
          {
            "id": 1642,
            "name": "notEqual",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Change function that returns true if `value` is different from `oldValue`.\nThis method is used as the default for a property's `hasChanged` function."
            },
            "parameters": [
              {
                "id": 1643,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 1644,
                "name": "old",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "notEqual"
        }
      },
      {
        "id": 2573,
        "name": "CompiledTemplate",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 2574,
            "name": "el",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 280,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L280",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLTemplateElement",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "CompiledTemplate.el"
            }
          },
          {
            "id": 2575,
            "name": "h",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 283,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L283",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "TrustedHTML"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "CompiledTemplate.h"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2574,
              2575
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 278,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L278",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "Template"
              },
              {
                "type": "literal",
                "value": "el"
              }
            ],
            "name": "Omit"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "CompiledTemplate"
        },
        "heritage": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "Template"
              },
              {
                "type": "literal",
                "value": "el"
              }
            ],
            "name": "Omit"
          }
        ]
      },
      {
        "id": 2570,
        "name": "CompiledTemplateResult",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 2572,
            "name": "values",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 275,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L275",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "unknown"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "CompiledTemplateResult.values"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2571,
              2572
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 270,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L270",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "CompiledTemplateResult"
        }
      },
      {
        "id": 2608,
        "name": "DirectiveParent",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2610,
              2609,
              2611,
              2612
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 460,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L460",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "DirectiveParent"
        }
      },
      {
        "id": 2613,
        "name": "Disconnectable",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2615,
              2616,
              2614
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 806,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L806",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "implementedBy": [
          {
            "type": "reference",
            "id": 503,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          },
          {
            "type": "reference",
            "id": 539,
            "name": "ChildPart",
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart"
            }
          },
          {
            "type": "reference",
            "id": 650,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          },
          {
            "type": "reference",
            "id": 567,
            "name": "ElementPart",
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPart"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "Disconnectable"
        }
      },
      {
        "id": 1637,
        "name": "HasChanged",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 260,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L260",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "signatures": [
          {
            "id": 1638,
            "name": "HasChanged",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 1639,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 1640,
                "name": "old",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "HasChanged"
        }
      },
      {
        "id": 2568,
        "name": "HTMLTemplateResult",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 266,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L266",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "reference",
          "id": 2562,
          "typeArguments": [
            {
              "type": "query",
              "queryType": {
                "type": "reference",
                "name": "HTML_RESULT"
              }
            }
          ],
          "name": "TemplateResult",
          "location": {
            "page": "templates",
            "anchor": "TemplateResult"
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "HTMLTemplateResult"
        }
      },
      {
        "id": 1646,
        "name": "Initializer",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 294,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L294",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 1647,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                "line": 131,
                "character": 34
              }
            ],
            "signatures": [
              {
                "id": 1648,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 1649,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1650,
                      "name": "ReactiveElement",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "ReactiveElement"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "Initializer"
        }
      },
      {
        "id": 2619,
        "name": "RootPart",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "A top-level `ChildPart` returned from `render` that manages the connected\nstate of `AsyncDirective`s created throughout the tree below it."
        },
        "children": [
          {
            "id": 2624,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1008,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1008",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 2586,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 547,
              "name": "ChildPart.options",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart.options"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.options"
            }
          },
          {
            "id": 2623,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1007,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1007",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 2
            },
            "defaultValue": "2",
            "inheritedFrom": {
              "type": "reference",
              "id": 546,
              "name": "ChildPart.type",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart.type"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.type"
            }
          },
          {
            "id": 2632,
            "name": "endNode",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "The part's trailing marker node, if any. See `.parentNode` for more\ninformation."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1115,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1115",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "Node"
                }
              ]
            },
            "getSignature": [
              {
                "id": 2633,
                "name": "endNode",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "The part's trailing marker node, if any. See `.parentNode` for more\ninformation."
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "Node"
                    }
                  ]
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 556,
              "name": "ChildPart.endNode",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart.endNode"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.endNode"
            }
          },
          {
            "id": 2628,
            "name": "parentNode",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "The parent node into which the part renders its content.",
              "text": "A ChildPart's content consists of a range of adjacent child nodes of\n`.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n`.endNode`).\n\n- If both `.startNode` and `.endNode` are non-null, then the part's content\nconsists of all siblings between `.startNode` and `.endNode`, exclusively.\n\n- If `.startNode` is non-null but `.endNode` is null, then the part's\ncontent consists of all siblings following `.startNode`, up to and\nincluding the last child of `.parentNode`. If `.endNode` is non-null, then\n`.startNode` will always be non-null.\n\n- If both `.endNode` and `.startNode` are null, then the part's content\nconsists of all child nodes of `.parentNode`.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1088,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1088",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Node"
            },
            "getSignature": [
              {
                "id": 2629,
                "name": "parentNode",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "The parent node into which the part renders its content.",
                  "text": "A ChildPart's content consists of a range of adjacent child nodes of\n`.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n`.endNode`).\n\n- If both `.startNode` and `.endNode` are non-null, then the part's content\nconsists of all siblings between `.startNode` and `.endNode`, exclusively.\n\n- If `.startNode` is non-null but `.endNode` is null, then the part's\ncontent consists of all siblings following `.startNode`, up to and\nincluding the last child of `.parentNode`. If `.endNode` is non-null, then\n`.startNode` will always be non-null.\n\n- If both `.endNode` and `.startNode` are null, then the part's content\nconsists of all child nodes of `.parentNode`.\n"
                },
                "type": {
                  "type": "reference",
                  "name": "Node"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 552,
              "name": "ChildPart.parentNode",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart.parentNode"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.parentNode"
            }
          },
          {
            "id": 2630,
            "name": "startNode",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "The part's leading marker node, if any. See `.parentNode` for more\ninformation."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1107,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1107",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "Node"
                }
              ]
            },
            "getSignature": [
              {
                "id": 2631,
                "name": "startNode",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "The part's leading marker node, if any. See `.parentNode` for more\ninformation."
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "Node"
                    }
                  ]
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 554,
              "name": "ChildPart.startNode",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart.startNode"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.startNode"
            }
          },
          {
            "id": 2620,
            "name": "setConnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the connection state for `AsyncDirective`s contained within this root\nChildPart.",
              "text": "lit-html does not automatically monitor the connectedness of DOM rendered;\nas such, it is the responsibility of the caller to `render` to ensure that\n`part.setConnected(false)` is called before the part object is potentially\ndiscarded, to ensure that `AsyncDirective`s have a chance to dispose of\nany resources being held. If a `RootPart` that was prevously\ndisconnected is subsequently re-connected (and its `AsyncDirective`s should\nre-connect), `setConnected(true)` should be called.\n"
            },
            "children": [],
            "signatures": [
              {
                "id": 2621,
                "name": "setConnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the connection state for `AsyncDirective`s contained within this root\nChildPart.",
                  "text": "lit-html does not automatically monitor the connectedness of DOM rendered;\nas such, it is the responsibility of the caller to `render` to ensure that\n`part.setConnected(false)` is called before the part object is potentially\ndiscarded, to ensure that `AsyncDirective`s have a chance to dispose of\nany resources being held. If a `RootPart` that was prevously\ndisconnected is subsequently re-connected (and its `AsyncDirective`s should\nre-connect), `setConnected(true)` should be called.\n"
                },
                "parameters": [
                  {
                    "id": 2622,
                    "name": "isConnected",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Whether directives within this tree should be connected\nor not\n"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.setConnected"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2625,
              2624,
              2623
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              2626,
              2632,
              2628,
              2630
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              2634,
              2620
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1363,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1363",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 539,
            "name": "ChildPart",
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "RootPart"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 539,
            "name": "ChildPart",
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart"
            }
          }
        ]
      },
      {
        "id": 2558,
        "name": "ValueSanitizer",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 104,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L104",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 2559,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "comment": {
              "shortText": "A function which can sanitize values that will be written to a specific kind\nof DOM sink.",
              "text": "See SanitizerFactory.\n",
              "returns": "The value to write to the DOM. Usually the same as the input value,\n    unless sanitization is needed.\n"
            },
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                "line": 41,
                "character": 37
              }
            ],
            "signatures": [
              {
                "id": 2560,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "A function which can sanitize values that will be written to a specific kind\nof DOM sink.",
                  "text": "See SanitizerFactory.\n",
                  "returns": "The value to write to the DOM. Usually the same as the input value,\n    unless sanitization is needed.\n"
                },
                "parameters": [
                  {
                    "id": 2561,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "shortText": "The value to sanitize. Will be the actual value passed into\n    the lit-html template literal, so this could be of any type."
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "ValueSanitizer"
        }
      },
      {
        "id": 1645,
        "name": "WarningKind",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "A string representing one of the supported dev mode warnings classes."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 292,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L292",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "literal",
              "value": "change-in-update"
            },
            {
              "type": "literal",
              "value": "migration"
            }
          ]
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "WarningKind"
        }
      }
    ]
  }
]