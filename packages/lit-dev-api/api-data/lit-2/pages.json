[
  {
    "slug": "LitElement",
    "title": "LitElement",
    "versionLinks": {
      "v1": "api/lit-element/LitElement/"
    },
    "items": [
      {
        "id": 3319,
        "name": "LitElement",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "Base element class that manages element properties and attributes, and\nrenders a lit-html template.",
          "text": "To define a component, subclass `LitElement` and implement a\n`render` method to provide the component's template. Define properties\nusing the [`properties`](/docs/api/LitElement/#LitElement.properties) property or the [`property`](/docs/api/decorators/#property) decorator.\n"
        },
        "children": [
          {
            "id": 3367,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 3368,
                "name": "new LitElement",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 3319,
                  "name": "LitElement",
                  "location": {
                    "page": "LitElement",
                    "anchor": "LitElement"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4310,
                  "name": "ReactiveElement.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4309,
              "name": "ReactiveElement.constructor",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.constructor"
            }
          },
          {
            "id": 3384,
            "name": "hasUpdated",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 718,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L718",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 4315,
              "name": "ReactiveElement.hasUpdated",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.hasUpdated"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.hasUpdated"
            }
          },
          {
            "id": 3383,
            "name": "isUpdatePending",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 713,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L713",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 4314,
              "name": "ReactiveElement.isUpdatePending",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.isUpdatePending"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.isUpdatePending"
            }
          },
          {
            "id": 3369,
            "name": "renderOptions",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "comment": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-element/src/lit-element.ts",
                "line": 102,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L102",
                "moduleSpecifier": "lit-element/lit-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 5196,
              "name": "RenderOptions",
              "location": {
                "page": "LitElement",
                "anchor": "RenderOptions"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.renderOptions"
            }
          },
          {
            "id": 3382,
            "name": "renderRoot",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "comment": {
              "shortText": "Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 685,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L685",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "HTMLElement",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                  }
                },
                {
                  "type": "reference",
                  "name": "ShadowRoot",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                  }
                }
              ]
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 4311,
              "name": "ReactiveElement.renderRoot",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.renderRoot"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.renderRoot"
            }
          },
          {
            "id": 3327,
            "name": "disableWarning",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Disable the given warning kind for this class.",
              "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 353,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L353",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 3328,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 3329,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Disable the given warning kind for this class.",
                      "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "category",
                          "text": "dev-mode\n"
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 3330,
                        "name": "warningKind",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 4255,
                          "name": "WarningKind",
                          "location": {
                            "page": "misc",
                            "anchor": "WarningKind"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 4266,
              "name": "ReactiveElement.disableWarning",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.disableWarning"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.disableWarning"
            }
          },
          {
            "id": 3335,
            "name": "elementProperties",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Memoized list of all element properties, including any superclass properties.\nCreated lazily on user subclasses when finalizing the class.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 390,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L390",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "PropertyDeclarationMap"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 4275,
              "name": "ReactiveElement.elementProperties",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.elementProperties"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.elementProperties"
            }
          },
          {
            "id": 3337,
            "name": "elementStyles",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Memoized list of all element styles.\nCreated lazily on user subclasses when finalizing the class.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 425,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L425",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "id": 5136,
                "name": "CSSResultOrNative",
                "location": {
                  "page": "styles",
                  "anchor": "CSSResultOrNative"
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 4277,
              "name": "ReactiveElement.elementStyles",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.elementStyles"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.elementStyles"
            }
          },
          {
            "id": 3323,
            "name": "enableWarning",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Enable the given warning kind for this class.",
              "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 334,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L334",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 3324,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 3325,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Enable the given warning kind for this class.",
                      "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "category",
                          "text": "dev-mode\n"
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 3326,
                        "name": "warningKind",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 4255,
                          "name": "WarningKind",
                          "location": {
                            "page": "misc",
                            "anchor": "WarningKind"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 4262,
              "name": "ReactiveElement.enableWarning",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.enableWarning"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.enableWarning"
            }
          },
          {
            "id": 3322,
            "name": "enabledWarnings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Read or set all the enabled warning kinds for this class.",
              "text": "This property is only used in development builds.\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 315,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L315",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "id": 4255,
                "name": "WarningKind",
                "location": {
                  "page": "misc",
                  "anchor": "WarningKind"
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 4261,
              "name": "ReactiveElement.enabledWarnings",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.enabledWarnings"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.enabledWarnings"
            }
          },
          {
            "id": 3320,
            "name": "finalized",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Ensure this class is marked as `finalized` as an optimization ensuring\nit will not needlessly try to `finalize`.",
              "text": "Note this property name is a string to prevent breaking Closure JS Compiler\noptimizations. See @lit/reactive-element for more information.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-element/src/lit-element.ts",
                "line": 94,
                "character": 28,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L94",
                "moduleSpecifier": "lit-element/lit-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "overwrites": {
              "type": "reference",
              "id": 4308,
              "name": "ReactiveElement.finalized",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.finalized"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.finalized"
            }
          },
          {
            "id": 3336,
            "name": "properties",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "User-supplied object that maps property names to `PropertyDeclaration`\nobjects containing options for configuring reactive properties. When\na reactive property is set the element will update and render.",
              "text": "By default properties are public fields, and as such, they should be\nconsidered as primarily settable by element users, either via attribute or\nthe property itself.\n\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state: true` option. Properties\nmarked as `state` do not reflect from the corresponding attribute\n\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating\npublic properties should typically not be done for non-primitive (object or\narray) properties. In other cases when an element needs to manage state, a\nprivate property set with the `state: true` option should be used. When\nneeded, state properties can be initialized via public properties to\nfacilitate complex interactions.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 417,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L417",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 4241,
              "name": "PropertyDeclarations",
              "location": {
                "page": "ReactiveElement",
                "anchor": "PropertyDeclarations"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 4276,
              "name": "ReactiveElement.properties",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.properties"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.properties"
            }
          },
          {
            "id": 3363,
            "name": "shadowRootOptions",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Options used when calling `attachShadow`. Set this property to customize\nthe options for the shadowRoot; for example, to create a closed\nshadowRoot: `{mode: 'closed'}`.",
              "text": "Note, these options are used in `createRenderRoot`. If this method\nis customized, options should be respected if possible.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 645,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L645",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "ShadowRootInit",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#parameters"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 4303,
              "name": "ReactiveElement.shadowRootOptions",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.shadowRootOptions"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.shadowRootOptions"
            }
          },
          {
            "id": 3338,
            "name": "styles",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Array of styles to apply to the element. The styles should be defined\nusing the [`css`](/docs/api/styles/#css) tag function or via constructible stylesheets.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 433,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L433",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 5138,
              "name": "CSSResultGroup",
              "location": {
                "page": "styles",
                "anchor": "CSSResultGroup"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 4278,
              "name": "ReactiveElement.styles",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.styles"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.styles"
            }
          },
          {
            "id": 3411,
            "name": "updateComplete",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
              "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
              "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1196,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1196",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              ],
              "name": "Promise"
            },
            "getSignature": [
              {
                "id": 3412,
                "name": "updateComplete",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                  "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update.",
                  "tags": [
                    {
                      "tag": "category",
                      "text": "updates\n"
                    }
                  ]
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ],
                  "name": "Promise"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4355,
              "name": "ReactiveElement.updateComplete",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.updateComplete"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.updateComplete"
            }
          },
          {
            "id": 3339,
            "name": "observedAttributes",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns a list of attributes corresponding to the registered properties.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 440,
                "character": 13,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L440",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            "getSignature": [
              {
                "id": 3340,
                "name": "observedAttributes",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a list of attributes corresponding to the registered properties.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    },
                    {
                      "tag": "category",
                      "text": "attributes\n"
                    }
                  ]
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4279,
              "name": "ReactiveElement.observedAttributes",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.observedAttributes"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.observedAttributes"
            }
          },
          {
            "id": 3385,
            "name": "addController",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 771,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L771",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3386,
                "name": "addController",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "parameters": [
                  {
                    "id": 3387,
                    "name": "controller",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 4198,
                      "name": "ReactiveController",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveController"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4320,
                  "name": "ReactiveElement.addController"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4319,
              "name": "ReactiveElement.addController",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.addController"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.addController"
            }
          },
          {
            "id": 3394,
            "name": "attributeChangedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Synchronizes property values when attributes change."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 878,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L878",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3395,
                "name": "attributeChangedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Synchronizes property values when attributes change."
                },
                "parameters": [
                  {
                    "id": 3396,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 3397,
                    "name": "_old",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  },
                  {
                    "id": 3398,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4336,
                  "name": "ReactiveElement.attributeChangedCallback"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4335,
              "name": "ReactiveElement.attributeChangedCallback",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.attributeChangedCallback"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.attributeChangedCallback"
            }
          },
          {
            "id": 3376,
            "name": "connectedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-element/src/lit-element.ts",
                "line": 142,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L142",
                "moduleSpecifier": "lit-element/lit-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3377,
                "name": "connectedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 4329,
                  "name": "ReactiveElement.connectedCallback"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 4328,
              "name": "ReactiveElement.connectedCallback",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.connectedCallback"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.connectedCallback"
            }
          },
          {
            "id": 3371,
            "name": "createRenderRoot",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-element/src/lit-element.ts",
                "line": 109,
                "character": 21,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L109",
                "moduleSpecifier": "lit-element/lit-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3372,
                "name": "createRenderRoot",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "ShadowRoot",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 4327,
                  "name": "ReactiveElement.createRenderRoot"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 4326,
              "name": "ReactiveElement.createRenderRoot",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.createRenderRoot"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.createRenderRoot"
            }
          },
          {
            "id": 3378,
            "name": "disconnectedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-element/src/lit-element.ts",
                "line": 150,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L150",
                "moduleSpecifier": "lit-element/lit-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3379,
                "name": "disconnectedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 4334,
                  "name": "ReactiveElement.disconnectedCallback"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 4333,
              "name": "ReactiveElement.disconnectedCallback",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.disconnectedCallback"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.disconnectedCallback"
            }
          },
          {
            "id": 3391,
            "name": "enableUpdating",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 862,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L862",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3392,
                "name": "enableUpdating",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
                },
                "parameters": [
                  {
                    "id": 3393,
                    "name": "_requestedUpdate",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4331,
                  "name": "ReactiveElement.enableUpdating"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4330,
              "name": "ReactiveElement.enableUpdating",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.enableUpdating"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.enableUpdating"
            }
          },
          {
            "id": 3421,
            "name": "firstUpdated",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
              "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1282,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1282",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3422,
                "name": "firstUpdated",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "parameters": [
                  {
                    "id": 3423,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4369,
                  "name": "ReactiveElement.firstUpdated"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4368,
              "name": "ReactiveElement.firstUpdated",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.firstUpdated"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.firstUpdated"
            }
          },
          {
            "id": 3413,
            "name": "getUpdateComplete",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Override point for the `updateComplete` promise.",
              "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
              "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1223,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1223",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3414,
                "name": "getUpdateComplete",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Override point for the `updateComplete` promise.",
                  "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ],
                  "name": "Promise"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4358,
                  "name": "ReactiveElement.getUpdateComplete"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4357,
              "name": "ReactiveElement.getUpdateComplete",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.getUpdateComplete"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.getUpdateComplete"
            }
          },
          {
            "id": 3406,
            "name": "performUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
              "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1078,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1078",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3407,
                "name": "performUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                  "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Promise"
                    }
                  ]
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4350,
                  "name": "ReactiveElement.performUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4349,
              "name": "ReactiveElement.performUpdate",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.performUpdate"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.performUpdate"
            }
          },
          {
            "id": 3388,
            "name": "removeController",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 785,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L785",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3389,
                "name": "removeController",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "parameters": [
                  {
                    "id": 3390,
                    "name": "controller",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 4198,
                      "name": "ReactiveController",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveController"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4323,
                  "name": "ReactiveElement.removeController"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4322,
              "name": "ReactiveElement.removeController",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.removeController"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.removeController"
            }
          },
          {
            "id": 3380,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Invoked on each update to perform rendering tasks. This method may return\nany value renderable by lit-html's `ChildPart` - typically a\n`TemplateResult`. Setting properties inside this method will *not* trigger\nthe element to update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-element/src/lit-element.ts",
                "line": 162,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L162",
                "moduleSpecifier": "lit-element/lit-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3381,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Invoked on each update to perform rendering tasks. This method may return\nany value renderable by lit-html's `ChildPart` - typically a\n`TemplateResult`. Setting properties inside this method will *not* trigger\nthe element to update."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.render"
            }
          },
          {
            "id": 3399,
            "name": "requestUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 973,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L973",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3400,
                "name": "requestUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
                },
                "parameters": [
                  {
                    "id": 3401,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "name of requesting property"
                    },
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 3402,
                    "name": "oldValue",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "old value of requesting property"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  },
                  {
                    "id": 3403,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "property options to use instead of the previously\n    configured options"
                    },
                    "type": {
                      "type": "reference",
                      "id": 4228,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4342,
                  "name": "ReactiveElement.requestUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4341,
              "name": "ReactiveElement.requestUpdate",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.requestUpdate"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.requestUpdate"
            }
          },
          {
            "id": 3404,
            "name": "scheduleUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
              "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1057,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1057",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3405,
                "name": "scheduleUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
                  "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Promise"
                    }
                  ]
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4348,
                  "name": "ReactiveElement.scheduleUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4347,
              "name": "ReactiveElement.scheduleUpdate",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.scheduleUpdate"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.scheduleUpdate"
            }
          },
          {
            "id": 3415,
            "name": "shouldUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1235,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1235",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3416,
                "name": "shouldUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                },
                "parameters": [
                  {
                    "id": 3417,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4360,
                  "name": "ReactiveElement.shouldUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4359,
              "name": "ReactiveElement.shouldUpdate",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.shouldUpdate"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.shouldUpdate"
            }
          },
          {
            "id": 3373,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-element/src/lit-element.ts",
                "line": 127,
                "character": 21,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L127",
                "moduleSpecifier": "lit-element/lit-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3374,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update."
                },
                "parameters": [
                  {
                    "id": 3375,
                    "name": "changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 4363,
                  "name": "ReactiveElement.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 4362,
              "name": "ReactiveElement.update",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.update"
            }
          },
          {
            "id": 3418,
            "name": "updated",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
              "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1270,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1270",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3419,
                "name": "updated",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "parameters": [
                  {
                    "id": 3420,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4366,
                  "name": "ReactiveElement.updated"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4365,
              "name": "ReactiveElement.updated",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.updated"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.updated"
            }
          },
          {
            "id": 3408,
            "name": "willUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1146,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1146",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3409,
                "name": "willUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "parameters": [
                  {
                    "id": 3410,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4352,
                  "name": "ReactiveElement.willUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4351,
              "name": "ReactiveElement.willUpdate",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.willUpdate"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.willUpdate"
            }
          },
          {
            "id": 3331,
            "name": "addInitializer",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isStatic": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 358,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L358",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3332,
                "name": "addInitializer",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 3333,
                    "name": "initializer",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 4256,
                      "name": "Initializer",
                      "location": {
                        "page": "misc",
                        "anchor": "Initializer"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4271,
                  "name": "ReactiveElement.addInitializer"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4270,
              "name": "ReactiveElement.addInitializer",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.addInitializer"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.addInitializer"
            }
          },
          {
            "id": 3341,
            "name": "createProperty",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
              "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 481,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L481",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3342,
                "name": "createProperty",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
                  "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 3343,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 3344,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "id": 4228,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4282,
                  "name": "ReactiveElement.createProperty"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4281,
              "name": "ReactiveElement.createProperty",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.createProperty"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.createProperty"
            }
          },
          {
            "id": 3361,
            "name": "finalize",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 585,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L585",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3362,
                "name": "finalize",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4302,
                  "name": "ReactiveElement.finalize"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4301,
              "name": "ReactiveElement.finalize",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.finalize"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.finalize"
            }
          },
          {
            "id": 3364,
            "name": "finalizeStyles",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
              "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 661,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L661",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3365,
                "name": "finalizeStyles",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
                  "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 3366,
                    "name": "styles",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "id": 5138,
                      "name": "CSSResultGroup",
                      "location": {
                        "page": "styles",
                        "anchor": "CSSResultGroup"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 5136,
                    "name": "CSSResultOrNative",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultOrNative"
                    }
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4305,
                  "name": "ReactiveElement.finalizeStyles"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4304,
              "name": "ReactiveElement.finalizeStyles",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.finalizeStyles"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.finalizeStyles"
            }
          },
          {
            "id": 3345,
            "name": "getPropertyDescriptor",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
              "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 536,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L536",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3346,
                "name": "getPropertyDescriptor",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                  "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 3347,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 3348,
                    "name": "key",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "symbol"
                        }
                      ]
                    }
                  },
                  {
                    "id": 3349,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 4228,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 3350,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 3356,
                        "name": "configurable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                            "line": 309,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 3357,
                        "name": "enumerable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                            "line": 310,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 3351,
                        "name": "get",
                        "kind": 2048,
                        "kindString": "Method",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 3352,
                            "name": "get",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        ]
                      },
                      {
                        "id": 3353,
                        "name": "set",
                        "kind": 2048,
                        "kindString": "Method",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 3354,
                            "name": "set",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 3355,
                                "name": "value",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                          3356,
                          3357
                        ]
                      },
                      {
                        "title": "Methods",
                        "kind": 2048,
                        "children": [
                          3351,
                          3353
                        ]
                      }
                    ]
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4286,
                  "name": "ReactiveElement.getPropertyDescriptor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4285,
              "name": "ReactiveElement.getPropertyDescriptor",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.getPropertyDescriptor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.getPropertyDescriptor"
            }
          },
          {
            "id": 3358,
            "name": "getPropertyOptions",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
              "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                },
                {
                  "tag": "final",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 575,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L575",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 3359,
                "name": "getPropertyOptions",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                  "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    },
                    {
                      "tag": "final",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 3360,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 4228,
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "PropertyDeclaration",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "PropertyDeclaration"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4299,
                  "name": "ReactiveElement.getPropertyOptions"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 4298,
              "name": "ReactiveElement.getPropertyOptions",
              "location": {
                "page": "ReactiveElement",
                "anchor": "ReactiveElement.getPropertyOptions"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.getPropertyOptions"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              3367
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              3706,
              3707,
              3708,
              3709,
              3710,
              3711,
              3712,
              3713,
              3714,
              3715,
              3716,
              3717,
              3718,
              3719,
              3720,
              3721,
              3722,
              3723,
              3370,
              3424,
              3425,
              3727,
              3728,
              3729,
              3730,
              3731,
              3732,
              3733,
              3734,
              3735,
              3736,
              3737,
              3738,
              3739,
              3740,
              3741,
              3742,
              3743,
              3744,
              3745,
              3746,
              3747,
              3748,
              3749,
              3750,
              3751,
              3752,
              3753,
              3754,
              3755,
              3756,
              3757,
              3758,
              3759,
              3760,
              3761,
              3762,
              3817,
              3469,
              3426,
              3644,
              3784,
              3645,
              3785,
              3470,
              3471,
              3472,
              3473,
              3474,
              3475,
              3831,
              4180,
              3427,
              3428,
              3832,
              3646,
              3786,
              3384,
              3429,
              3476,
              3781,
              3430,
              3833,
              3647,
              3834,
              3383,
              3431,
              3648,
              3787,
              3477,
              3478,
              3782,
              3649,
              3650,
              3651,
              3652,
              4181,
              3432,
              3433,
              3434,
              3435,
              3436,
              3835,
              3839,
              3843,
              3847,
              3851,
              3855,
              3859,
              3863,
              3867,
              3871,
              3875,
              3879,
              3883,
              3818,
              3887,
              3822,
              3891,
              3895,
              3899,
              3903,
              3907,
              3911,
              3915,
              3919,
              3923,
              3927,
              3931,
              3935,
              3936,
              3940,
              3479,
              3483,
              3944,
              3948,
              3952,
              3956,
              3960,
              3964,
              3968,
              3972,
              3976,
              3980,
              3984,
              3988,
              3992,
              3996,
              4000,
              4004,
              4008,
              4012,
              3826,
              4016,
              4020,
              4024,
              4028,
              4032,
              4036,
              4040,
              4044,
              4048,
              4052,
              4056,
              4060,
              4064,
              4068,
              4072,
              4076,
              4080,
              4084,
              4088,
              4092,
              4096,
              4100,
              4104,
              4108,
              4112,
              4116,
              4120,
              4124,
              4128,
              4132,
              4136,
              4140,
              4144,
              4148,
              4152,
              4156,
              4160,
              4164,
              4168,
              4172,
              4176,
              3487,
              3437,
              3488,
              3653,
              3654,
              3489,
              3490,
              3783,
              3655,
              3369,
              3382,
              3491,
              3492,
              3493,
              3494,
              3495,
              3496,
              3438,
              3830,
              4182,
              3497,
              3656,
              3439,
              3440,
              3321,
              3334,
              3327,
              3335,
              3337,
              3323,
              3322,
              3320,
              3336,
              3363,
              3338
            ],
            "categories": [
              {
                "title": "Other",
                "children": [
                  3706,
                  3707,
                  3708,
                  3709,
                  3710,
                  3711,
                  3712,
                  3713,
                  3714,
                  3715,
                  3716,
                  3717,
                  3718,
                  3719,
                  3720,
                  3721,
                  3722,
                  3723,
                  3370,
                  3424,
                  3425,
                  3727,
                  3728,
                  3729,
                  3730,
                  3731,
                  3732,
                  3733,
                  3734,
                  3735,
                  3736,
                  3737,
                  3738,
                  3739,
                  3740,
                  3741,
                  3742,
                  3743,
                  3744,
                  3745,
                  3746,
                  3747,
                  3748,
                  3749,
                  3750,
                  3751,
                  3752,
                  3753,
                  3754,
                  3755,
                  3756,
                  3757,
                  3758,
                  3759,
                  3760,
                  3761,
                  3762,
                  3817,
                  3469,
                  3426,
                  3644,
                  3784,
                  3645,
                  3785,
                  3470,
                  3471,
                  3472,
                  3473,
                  3474,
                  3475,
                  3831,
                  4180,
                  3427,
                  3428,
                  3832,
                  3646,
                  3786,
                  3429,
                  3476,
                  3781,
                  3430,
                  3833,
                  3647,
                  3834,
                  3431,
                  3648,
                  3787,
                  3477,
                  3478,
                  3782,
                  3649,
                  3650,
                  3651,
                  3652,
                  4181,
                  3432,
                  3433,
                  3434,
                  3435,
                  3436,
                  3835,
                  3839,
                  3843,
                  3847,
                  3851,
                  3855,
                  3859,
                  3863,
                  3867,
                  3871,
                  3875,
                  3879,
                  3883,
                  3818,
                  3887,
                  3822,
                  3891,
                  3895,
                  3899,
                  3903,
                  3907,
                  3911,
                  3915,
                  3919,
                  3923,
                  3927,
                  3931,
                  3935,
                  3936,
                  3940,
                  3479,
                  3483,
                  3944,
                  3948,
                  3952,
                  3956,
                  3960,
                  3964,
                  3968,
                  3972,
                  3976,
                  3980,
                  3984,
                  3988,
                  3992,
                  3996,
                  4000,
                  4004,
                  4008,
                  4012,
                  3826,
                  4016,
                  4020,
                  4024,
                  4028,
                  4032,
                  4036,
                  4040,
                  4044,
                  4048,
                  4052,
                  4056,
                  4060,
                  4064,
                  4068,
                  4072,
                  4076,
                  4080,
                  4084,
                  4088,
                  4092,
                  4096,
                  4100,
                  4104,
                  4108,
                  4112,
                  4116,
                  4120,
                  4124,
                  4128,
                  4132,
                  4136,
                  4140,
                  4144,
                  4148,
                  4152,
                  4156,
                  4160,
                  4164,
                  4168,
                  4172,
                  4176,
                  3487,
                  3437,
                  3488,
                  3653,
                  3654,
                  3489,
                  3490,
                  3783,
                  3655,
                  3491,
                  3492,
                  3493,
                  3494,
                  3495,
                  3496,
                  3438,
                  3830,
                  4182,
                  3497,
                  3656,
                  3439,
                  3440,
                  3321,
                  3334,
                  3320
                ]
              },
              {
                "title": "dev-mode",
                "children": [
                  3327,
                  3323,
                  3322
                ]
              },
              {
                "title": "properties",
                "children": [
                  3335,
                  3336
                ]
              },
              {
                "title": "rendering",
                "children": [
                  3369,
                  3382,
                  3363
                ]
              },
              {
                "title": "styles",
                "children": [
                  3337,
                  3338
                ]
              },
              {
                "title": "updates",
                "children": [
                  3384,
                  3383
                ]
              }
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              3411,
              3339
            ],
            "categories": [
              {
                "title": "attributes",
                "children": [
                  3339
                ]
              },
              {
                "title": "updates",
                "children": [
                  3411
                ]
              }
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              3385,
              3443,
              3770,
              3763,
              3788,
              3657,
              3498,
              3394,
              3773,
              4183,
              3441,
              3661,
              3501,
              3664,
              3376,
              3667,
              3371,
              3378,
              3724,
              3391,
              3421,
              4185,
              3767,
              3511,
              3514,
              3518,
              3520,
              3523,
              3527,
              3529,
              3531,
              3534,
              3543,
              3670,
              3413,
              3553,
              3556,
              3560,
              3673,
              3562,
              3565,
              3569,
              3573,
              3675,
              3680,
              3683,
              3686,
              3689,
              3692,
              3577,
              3695,
              3406,
              3791,
              3794,
              3804,
              3580,
              3776,
              3583,
              3586,
              3590,
              3697,
              3388,
              3456,
              3380,
              3701,
              3814,
              3778,
              3593,
              3596,
              3399,
              3404,
              3598,
              3604,
              3610,
              3613,
              3619,
              3623,
              3628,
              3631,
              3634,
              3415,
              3637,
              3373,
              3418,
              3641,
              3408,
              3331,
              3341,
              3361,
              3364,
              3345,
              3358
            ],
            "categories": [
              {
                "title": "Other",
                "children": [
                  3443,
                  3770,
                  3763,
                  3788,
                  3657,
                  3498,
                  3773,
                  4183,
                  3441,
                  3661,
                  3501,
                  3664,
                  3667,
                  3724,
                  4185,
                  3767,
                  3511,
                  3514,
                  3518,
                  3520,
                  3523,
                  3527,
                  3529,
                  3531,
                  3534,
                  3543,
                  3670,
                  3553,
                  3556,
                  3560,
                  3673,
                  3562,
                  3565,
                  3569,
                  3573,
                  3675,
                  3680,
                  3683,
                  3686,
                  3689,
                  3692,
                  3577,
                  3695,
                  3791,
                  3794,
                  3804,
                  3580,
                  3776,
                  3583,
                  3586,
                  3590,
                  3697,
                  3456,
                  3701,
                  3814,
                  3778,
                  3593,
                  3596,
                  3598,
                  3604,
                  3610,
                  3613,
                  3619,
                  3623,
                  3628,
                  3631,
                  3634,
                  3637,
                  3641,
                  3331,
                  3361
                ]
              },
              {
                "title": "attributes",
                "children": [
                  3394
                ]
              },
              {
                "title": "controllers",
                "children": [
                  3385,
                  3388
                ]
              },
              {
                "title": "lifecycle",
                "children": [
                  3376,
                  3378
                ]
              },
              {
                "title": "properties",
                "children": [
                  3341,
                  3345,
                  3358
                ]
              },
              {
                "title": "rendering",
                "children": [
                  3371,
                  3380
                ]
              },
              {
                "title": "styles",
                "children": [
                  3364
                ]
              },
              {
                "title": "updates",
                "children": [
                  3391,
                  3421,
                  3413,
                  3406,
                  3399,
                  3404,
                  3415,
                  3373,
                  3418,
                  3408
                ]
              }
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-element/src/lit-element.ts",
            "line": 86,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L86",
            "moduleSpecifier": "lit-element/lit-element.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 4260,
            "name": "ReactiveElement",
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "LitElement",
          "anchor": "LitElement"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 4260,
            "name": "ReactiveElement",
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement"
            }
          },
          {
            "type": "reference",
            "name": "HTMLElement",
            "externalLocation": {
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
            }
          }
        ],
        "expandedCategories": [
          {
            "anchor": "LitElement/attributes",
            "title": "Attributes",
            "children": [
              {
                "id": 3394,
                "name": "attributeChangedCallback",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "comment": {
                  "shortText": "Synchronizes property values when attributes change."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 878,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L878",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3395,
                    "name": "attributeChangedCallback",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Synchronizes property values when attributes change."
                    },
                    "parameters": [
                      {
                        "id": 3396,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 3397,
                        "name": "_old",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": null
                            },
                            {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          ]
                        }
                      },
                      {
                        "id": 3398,
                        "name": "value",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": null
                            },
                            {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          ]
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4336,
                      "name": "ReactiveElement.attributeChangedCallback"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4335,
                  "name": "ReactiveElement.attributeChangedCallback",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.attributeChangedCallback"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.attributeChangedCallback"
                }
              },
              {
                "id": 3339,
                "name": "observedAttributes",
                "kind": 262144,
                "kindString": "Accessor",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Returns a list of attributes corresponding to the registered properties.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 440,
                    "character": 13,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L440",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                "getSignature": [
                  {
                    "id": 3340,
                    "name": "observedAttributes",
                    "kind": 524288,
                    "kindString": "Get signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns a list of attributes corresponding to the registered properties.",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "category",
                          "text": "attributes\n"
                        }
                      ]
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4279,
                  "name": "ReactiveElement.observedAttributes",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.observedAttributes"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.observedAttributes"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/controllers",
            "title": "Controllers",
            "children": [
              {
                "id": 3385,
                "name": "addController",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 771,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L771",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3386,
                    "name": "addController",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "parameters": [
                      {
                        "id": 3387,
                        "name": "controller",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 4198,
                          "name": "ReactiveController",
                          "location": {
                            "page": "controllers",
                            "anchor": "ReactiveController"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4320,
                      "name": "ReactiveElement.addController"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4319,
                  "name": "ReactiveElement.addController",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.addController"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.addController"
                }
              },
              {
                "id": 3388,
                "name": "removeController",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 785,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L785",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3389,
                    "name": "removeController",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "parameters": [
                      {
                        "id": 3390,
                        "name": "controller",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 4198,
                          "name": "ReactiveController",
                          "location": {
                            "page": "controllers",
                            "anchor": "ReactiveController"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4323,
                      "name": "ReactiveElement.removeController"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4322,
                  "name": "ReactiveElement.removeController",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.removeController"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.removeController"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/dev-mode",
            "title": "Dev mode",
            "children": [
              {
                "id": 3327,
                "name": "disableWarning",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Disable the given warning kind for this class.",
                  "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 353,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L353",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 3328,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 3329,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "comment": {
                          "shortText": "Disable the given warning kind for this class.",
                          "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
                          "tags": [
                            {
                              "tag": "nocollapse",
                              "text": ""
                            },
                            {
                              "tag": "category",
                              "text": "dev-mode\n"
                            }
                          ]
                        },
                        "parameters": [
                          {
                            "id": 3330,
                            "name": "warningKind",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "id": 4255,
                              "name": "WarningKind",
                              "location": {
                                "page": "misc",
                                "anchor": "WarningKind"
                              }
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4266,
                  "name": "ReactiveElement.disableWarning",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.disableWarning"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.disableWarning"
                }
              },
              {
                "id": 3322,
                "name": "enabledWarnings",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Read or set all the enabled warning kinds for this class.",
                  "text": "This property is only used in development builds.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 315,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L315",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 4255,
                    "name": "WarningKind",
                    "location": {
                      "page": "misc",
                      "anchor": "WarningKind"
                    }
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4261,
                  "name": "ReactiveElement.enabledWarnings",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.enabledWarnings"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.enabledWarnings"
                }
              },
              {
                "id": 3323,
                "name": "enableWarning",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Enable the given warning kind for this class.",
                  "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 334,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L334",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 3324,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 3325,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "comment": {
                          "shortText": "Enable the given warning kind for this class.",
                          "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
                          "tags": [
                            {
                              "tag": "nocollapse",
                              "text": ""
                            },
                            {
                              "tag": "category",
                              "text": "dev-mode\n"
                            }
                          ]
                        },
                        "parameters": [
                          {
                            "id": 3326,
                            "name": "warningKind",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "id": 4255,
                              "name": "WarningKind",
                              "location": {
                                "page": "misc",
                                "anchor": "WarningKind"
                              }
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4262,
                  "name": "ReactiveElement.enableWarning",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.enableWarning"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.enableWarning"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/lifecycle",
            "title": "Lifecycle",
            "children": [
              {
                "id": 3376,
                "name": "connectedCallback",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 142,
                    "character": 11,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L142",
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3377,
                    "name": "connectedCallback",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "overwrites": {
                      "type": "reference",
                      "id": 4329,
                      "name": "ReactiveElement.connectedCallback"
                    }
                  }
                ],
                "overwrites": {
                  "type": "reference",
                  "id": 4328,
                  "name": "ReactiveElement.connectedCallback",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.connectedCallback"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.connectedCallback"
                }
              },
              {
                "id": 3378,
                "name": "disconnectedCallback",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 150,
                    "character": 11,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L150",
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3379,
                    "name": "disconnectedCallback",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "overwrites": {
                      "type": "reference",
                      "id": 4334,
                      "name": "ReactiveElement.disconnectedCallback"
                    }
                  }
                ],
                "overwrites": {
                  "type": "reference",
                  "id": 4333,
                  "name": "ReactiveElement.disconnectedCallback",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.disconnectedCallback"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.disconnectedCallback"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/Other",
            "title": "Other",
            "children": [
              {
                "id": 3331,
                "name": "addInitializer",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isStatic": true
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 358,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L358",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3332,
                    "name": "addInitializer",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": "\n"
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 3333,
                        "name": "initializer",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 4256,
                          "name": "Initializer",
                          "location": {
                            "page": "misc",
                            "anchor": "Initializer"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4271,
                      "name": "ReactiveElement.addInitializer"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4270,
                  "name": "ReactiveElement.addInitializer",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.addInitializer"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.addInitializer"
                }
              },
              {
                "id": 3361,
                "name": "finalize",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 585,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L585",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3362,
                    "name": "finalize",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": "\n"
                        }
                      ]
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4302,
                      "name": "ReactiveElement.finalize"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4301,
                  "name": "ReactiveElement.finalize",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.finalize"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.finalize"
                }
              },
              {
                "id": 3320,
                "name": "finalized",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Ensure this class is marked as `finalized` as an optimization ensuring\nit will not needlessly try to `finalize`.",
                  "text": "Note this property name is a string to prevent breaking Closure JS Compiler\noptimizations. See @lit/reactive-element for more information.\n"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 94,
                    "character": 28,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L94",
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 4308,
                  "name": "ReactiveElement.finalized",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.finalized"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.finalized"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/properties",
            "title": "Properties",
            "children": [
              {
                "id": 3341,
                "name": "createProperty",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
                  "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 481,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L481",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3342,
                    "name": "createProperty",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
                      "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 3343,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      },
                      {
                        "id": 3344,
                        "name": "options",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "id": 4228,
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4282,
                      "name": "ReactiveElement.createProperty"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4281,
                  "name": "ReactiveElement.createProperty",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.createProperty"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.createProperty"
                }
              },
              {
                "id": 3335,
                "name": "elementProperties",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Memoized list of all element properties, including any superclass properties.\nCreated lazily on user subclasses when finalizing the class.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 390,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L390",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "PropertyDeclarationMap"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4275,
                  "name": "ReactiveElement.elementProperties",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.elementProperties"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.elementProperties"
                }
              },
              {
                "id": 3345,
                "name": "getPropertyDescriptor",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                  "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 536,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L536",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3346,
                    "name": "getPropertyDescriptor",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                      "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 3347,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      },
                      {
                        "id": 3348,
                        "name": "key",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        }
                      },
                      {
                        "id": 3349,
                        "name": "options",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 4228,
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 3350,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 3356,
                            "name": "configurable",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                                "line": 309,
                                "character": 8
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 3357,
                            "name": "enumerable",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                                "line": 310,
                                "character": 8
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 3351,
                            "name": "get",
                            "kind": 2048,
                            "kindString": "Method",
                            "flags": {},
                            "signatures": [
                              {
                                "id": 3352,
                                "name": "get",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            ]
                          },
                          {
                            "id": 3353,
                            "name": "set",
                            "kind": 2048,
                            "kindString": "Method",
                            "flags": {},
                            "signatures": [
                              {
                                "id": 3354,
                                "name": "set",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 3355,
                                    "name": "value",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "unknown"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "void"
                                }
                              }
                            ]
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [
                              3356,
                              3357
                            ]
                          },
                          {
                            "title": "Methods",
                            "kind": 2048,
                            "children": [
                              3351,
                              3353
                            ]
                          }
                        ]
                      }
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4286,
                      "name": "ReactiveElement.getPropertyDescriptor"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4285,
                  "name": "ReactiveElement.getPropertyDescriptor",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.getPropertyDescriptor"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.getPropertyDescriptor"
                }
              },
              {
                "id": 3358,
                "name": "getPropertyOptions",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                  "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    },
                    {
                      "tag": "final",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 575,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L575",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3359,
                    "name": "getPropertyOptions",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                      "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "final",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 3360,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 4228,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4299,
                      "name": "ReactiveElement.getPropertyOptions"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4298,
                  "name": "ReactiveElement.getPropertyOptions",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.getPropertyOptions"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.getPropertyOptions"
                }
              },
              {
                "id": 3336,
                "name": "properties",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "User-supplied object that maps property names to `PropertyDeclaration`\nobjects containing options for configuring reactive properties. When\na reactive property is set the element will update and render.",
                  "text": "By default properties are public fields, and as such, they should be\nconsidered as primarily settable by element users, either via attribute or\nthe property itself.\n\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state: true` option. Properties\nmarked as `state` do not reflect from the corresponding attribute\n\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating\npublic properties should typically not be done for non-primitive (object or\narray) properties. In other cases when an element needs to manage state, a\nprivate property set with the `state: true` option should be used. When\nneeded, state properties can be initialized via public properties to\nfacilitate complex interactions.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 417,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L417",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 4241,
                  "name": "PropertyDeclarations",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "PropertyDeclarations"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4276,
                  "name": "ReactiveElement.properties",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.properties"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.properties"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/rendering",
            "title": "Rendering",
            "children": [
              {
                "id": 3371,
                "name": "createRenderRoot",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 109,
                    "character": 21,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L109",
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3372,
                    "name": "createRenderRoot",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "Element",
                          "externalLocation": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                          }
                        },
                        {
                          "type": "reference",
                          "name": "ShadowRoot",
                          "externalLocation": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                          }
                        }
                      ]
                    },
                    "overwrites": {
                      "type": "reference",
                      "id": 4327,
                      "name": "ReactiveElement.createRenderRoot"
                    }
                  }
                ],
                "overwrites": {
                  "type": "reference",
                  "id": 4326,
                  "name": "ReactiveElement.createRenderRoot",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.createRenderRoot"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.createRenderRoot"
                }
              },
              {
                "id": 3380,
                "name": "render",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked on each update to perform rendering tasks. This method may return\nany value renderable by lit-html's `ChildPart` - typically a\n`TemplateResult`. Setting properties inside this method will *not* trigger\nthe element to update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 162,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L162",
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3381,
                    "name": "render",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Invoked on each update to perform rendering tasks. This method may return\nany value renderable by lit-html's `ChildPart` - typically a\n`TemplateResult`. Setting properties inside this method will *not* trigger\nthe element to update."
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.render"
                }
              },
              {
                "id": 3369,
                "name": "renderOptions",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "comment": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 102,
                    "character": 11,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L102",
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5196,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.renderOptions"
                }
              },
              {
                "id": 3382,
                "name": "renderRoot",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "comment": {
                  "shortText": "Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 685,
                    "character": 11,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L685",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "HTMLElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "ShadowRoot",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                      }
                    }
                  ]
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4311,
                  "name": "ReactiveElement.renderRoot",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.renderRoot"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.renderRoot"
                }
              },
              {
                "id": 3363,
                "name": "shadowRootOptions",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Options used when calling `attachShadow`. Set this property to customize\nthe options for the shadowRoot; for example, to create a closed\nshadowRoot: `{mode: 'closed'}`.",
                  "text": "Note, these options are used in `createRenderRoot`. If this method\nis customized, options should be respected if possible.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 645,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L645",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "ShadowRootInit",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#parameters"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4303,
                  "name": "ReactiveElement.shadowRootOptions",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.shadowRootOptions"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.shadowRootOptions"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/styles",
            "title": "Styles",
            "children": [
              {
                "id": 3337,
                "name": "elementStyles",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Memoized list of all element styles.\nCreated lazily on user subclasses when finalizing the class.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 425,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L425",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 5136,
                    "name": "CSSResultOrNative",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultOrNative"
                    }
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4277,
                  "name": "ReactiveElement.elementStyles",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.elementStyles"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.elementStyles"
                }
              },
              {
                "id": 3364,
                "name": "finalizeStyles",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
                  "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 661,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L661",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3365,
                    "name": "finalizeStyles",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
                      "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 3366,
                        "name": "styles",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "id": 5138,
                          "name": "CSSResultGroup",
                          "location": {
                            "page": "styles",
                            "anchor": "CSSResultGroup"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "id": 5136,
                        "name": "CSSResultOrNative",
                        "location": {
                          "page": "styles",
                          "anchor": "CSSResultOrNative"
                        }
                      }
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4305,
                      "name": "ReactiveElement.finalizeStyles"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4304,
                  "name": "ReactiveElement.finalizeStyles",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.finalizeStyles"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.finalizeStyles"
                }
              },
              {
                "id": 3338,
                "name": "styles",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Array of styles to apply to the element. The styles should be defined\nusing the [`css`](/docs/api/styles/#css) tag function or via constructible stylesheets.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 433,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L433",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5138,
                  "name": "CSSResultGroup",
                  "location": {
                    "page": "styles",
                    "anchor": "CSSResultGroup"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4278,
                  "name": "ReactiveElement.styles",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.styles"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.styles"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/updates",
            "title": "Updates",
            "children": [
              {
                "id": 3391,
                "name": "enableUpdating",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 862,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L862",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3392,
                    "name": "enableUpdating",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
                    },
                    "parameters": [
                      {
                        "id": 3393,
                        "name": "_requestedUpdate",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4331,
                      "name": "ReactiveElement.enableUpdating"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4330,
                  "name": "ReactiveElement.enableUpdating",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.enableUpdating"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.enableUpdating"
                }
              },
              {
                "id": 3421,
                "name": "firstUpdated",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1282,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1282",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3422,
                    "name": "firstUpdated",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                      "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                    },
                    "parameters": [
                      {
                        "id": 3423,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4369,
                      "name": "ReactiveElement.firstUpdated"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4368,
                  "name": "ReactiveElement.firstUpdated",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.firstUpdated"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.firstUpdated"
                }
              },
              {
                "id": 3413,
                "name": "getUpdateComplete",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Override point for the `updateComplete` promise.",
                  "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1223,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1223",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3414,
                    "name": "getUpdateComplete",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Override point for the `updateComplete` promise.",
                      "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
                      "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      ],
                      "name": "Promise"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4358,
                      "name": "ReactiveElement.getUpdateComplete"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4357,
                  "name": "ReactiveElement.getUpdateComplete",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.getUpdateComplete"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.getUpdateComplete"
                }
              },
              {
                "id": 3384,
                "name": "hasUpdated",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 718,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L718",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4315,
                  "name": "ReactiveElement.hasUpdated",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.hasUpdated"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.hasUpdated"
                }
              },
              {
                "id": 3383,
                "name": "isUpdatePending",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 713,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L713",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4314,
                  "name": "ReactiveElement.isUpdatePending",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.isUpdatePending"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.isUpdatePending"
                }
              },
              {
                "id": 3406,
                "name": "performUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                  "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1078,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1078",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3407,
                    "name": "performUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                      "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Promise"
                        }
                      ]
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4350,
                      "name": "ReactiveElement.performUpdate"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4349,
                  "name": "ReactiveElement.performUpdate",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.performUpdate"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.performUpdate"
                }
              },
              {
                "id": 3399,
                "name": "requestUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "comment": {
                  "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 973,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L973",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3400,
                    "name": "requestUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
                    },
                    "parameters": [
                      {
                        "id": 3401,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "text": "name of requesting property"
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      },
                      {
                        "id": 3402,
                        "name": "oldValue",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "text": "old value of requesting property"
                        },
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      },
                      {
                        "id": 3403,
                        "name": "options",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "text": "property options to use instead of the previously\n    configured options"
                        },
                        "type": {
                          "type": "reference",
                          "id": 4228,
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4342,
                      "name": "ReactiveElement.requestUpdate"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4341,
                  "name": "ReactiveElement.requestUpdate",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.requestUpdate"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.requestUpdate"
                }
              },
              {
                "id": 3404,
                "name": "scheduleUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
                  "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1057,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1057",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3405,
                    "name": "scheduleUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
                      "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Promise"
                        }
                      ]
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4348,
                      "name": "ReactiveElement.scheduleUpdate"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4347,
                  "name": "ReactiveElement.scheduleUpdate",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.scheduleUpdate"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.scheduleUpdate"
                }
              },
              {
                "id": 3415,
                "name": "shouldUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1235,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1235",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3416,
                    "name": "shouldUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                    },
                    "parameters": [
                      {
                        "id": 3417,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4360,
                      "name": "ReactiveElement.shouldUpdate"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4359,
                  "name": "ReactiveElement.shouldUpdate",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.shouldUpdate"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.shouldUpdate"
                }
              },
              {
                "id": 3373,
                "name": "update",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 127,
                    "character": 21,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L127",
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3374,
                    "name": "update",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update."
                    },
                    "parameters": [
                      {
                        "id": 3375,
                        "name": "changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "overwrites": {
                      "type": "reference",
                      "id": 4363,
                      "name": "ReactiveElement.update"
                    }
                  }
                ],
                "overwrites": {
                  "type": "reference",
                  "id": 4362,
                  "name": "ReactiveElement.update",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.update"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.update"
                }
              },
              {
                "id": 3411,
                "name": "updateComplete",
                "kind": 262144,
                "kindString": "Accessor",
                "flags": {},
                "comment": {
                  "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                  "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1196,
                    "character": 6,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1196",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ],
                  "name": "Promise"
                },
                "getSignature": [
                  {
                    "id": 3412,
                    "name": "updateComplete",
                    "kind": 524288,
                    "kindString": "Get signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                      "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
                      "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update.",
                      "tags": [
                        {
                          "tag": "category",
                          "text": "updates\n"
                        }
                      ]
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      ],
                      "name": "Promise"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4355,
                  "name": "ReactiveElement.updateComplete",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.updateComplete"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.updateComplete"
                }
              },
              {
                "id": 3418,
                "name": "updated",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1270,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1270",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3419,
                    "name": "updated",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                      "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                    },
                    "parameters": [
                      {
                        "id": 3420,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4366,
                      "name": "ReactiveElement.updated"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4365,
                  "name": "ReactiveElement.updated",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.updated"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.updated"
                }
              },
              {
                "id": 3408,
                "name": "willUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1146,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1146",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 3409,
                    "name": "willUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "parameters": [
                      {
                        "id": 3410,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "id": 4352,
                      "name": "ReactiveElement.willUpdate"
                    }
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "id": 4351,
                  "name": "ReactiveElement.willUpdate",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.willUpdate"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.willUpdate"
                }
              }
            ]
          }
        ]
      },
      {
        "id": 5196,
        "name": "RenderOptions",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "Object specifying options for controlling lit-html rendering. Note that\nwhile `render` may be called multiple times on the same `container` (and\n`renderBefore` reference node) to efficiently update the rendered content,\nonly the options passed in during the first render are respected during\nthe lifetime of renders to that unique `container` + `renderBefore`\ncombination."
        },
        "children": [
          {
            "id": 5199,
            "name": "creationScope",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Node used for cloning the template (`importNode` will be called on this\nnode). This controls the `ownerDocument` of the rendered DOM, along with\nany inherited context. Defaults to the global `document`."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 365,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L365",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 5200,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 5201,
                    "name": "importNode",
                    "kind": 2048,
                    "kindString": "Method",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 5202,
                        "name": "importNode",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 5203,
                            "name": "node",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "name": "Node"
                            }
                          },
                          {
                            "id": 5204,
                            "name": "deep",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                              "isOptional": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Node"
                        }
                      }
                    ]
                  }
                ],
                "groups": [
                  {
                    "title": "Methods",
                    "kind": 2048,
                    "children": [
                      5201
                    ]
                  }
                ]
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "RenderOptions.creationScope"
            }
          },
          {
            "id": 5197,
            "name": "host",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "An object to use as the `this` value for event listeners. It's often\nuseful to set this to the host component rendering a template."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 355,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L355",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "object"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "RenderOptions.host"
            }
          },
          {
            "id": 5205,
            "name": "isConnected",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "The initial connected state for the top-level part being rendered. If no\n`isConnected` option is set, `AsyncDirective`s will be connected by\ndefault. Set to `false` if the initial render occurs in a disconnected tree\nand `AsyncDirective`s should see `isConnected === false` for their initial\nrender. The `part.setConnected()` method must be used subsequent to initial\nrender to change the connected state of the part."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 374,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L374",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "RenderOptions.isConnected"
            }
          },
          {
            "id": 5198,
            "name": "renderBefore",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "A DOM node before which to render content in the container."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 359,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L359",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "ChildNode"
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "RenderOptions.renderBefore"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5199,
              5197,
              5205,
              5198
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 350,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L350",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "LitElement",
          "anchor": "RenderOptions"
        }
      }
    ]
  },
  {
    "slug": "ReactiveElement",
    "title": "ReactiveElement",
    "versionLinks": {
      "v1": "api/lit-element/UpdatingElement/"
    },
    "items": [
      {
        "id": 4260,
        "name": "ReactiveElement",
        "kind": 128,
        "kindString": "Class",
        "flags": {
          "isAbstract": true
        },
        "comment": {
          "shortText": "Base element class which manages element properties and attributes. When\nproperties change, the `update` method is asynchronously called. This method\nshould be supplied by subclassers to render updates as desired.",
          "tags": [
            {
              "tag": "noinheritdoc",
              "text": "\n"
            }
          ]
        },
        "children": [
          {
            "id": 4309,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/reactive-element.d.ts",
                "line": 392,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 4310,
                "name": "new ReactiveElement",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 4260,
                  "name": "ReactiveElement",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "HTMLElement.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "HTMLElement.constructor"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.constructor"
            }
          },
          {
            "id": 4315,
            "name": "hasUpdated",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 718,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L718",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.hasUpdated"
            }
          },
          {
            "id": 4314,
            "name": "isUpdatePending",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 713,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L713",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.isUpdatePending"
            }
          },
          {
            "id": 4311,
            "name": "renderRoot",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "comment": {
              "shortText": "Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 685,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L685",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "HTMLElement",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                  }
                },
                {
                  "type": "reference",
                  "name": "ShadowRoot",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                  }
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.renderRoot"
            }
          },
          {
            "id": 4266,
            "name": "disableWarning",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Disable the given warning kind for this class.",
              "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 353,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L353",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 4267,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 4268,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Disable the given warning kind for this class.",
                      "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "category",
                          "text": "dev-mode\n"
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 4269,
                        "name": "warningKind",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 4255,
                          "name": "WarningKind",
                          "location": {
                            "page": "misc",
                            "anchor": "WarningKind"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.disableWarning"
            }
          },
          {
            "id": 4275,
            "name": "elementProperties",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Memoized list of all element properties, including any superclass properties.\nCreated lazily on user subclasses when finalizing the class.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 390,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L390",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "PropertyDeclarationMap"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.elementProperties"
            }
          },
          {
            "id": 4277,
            "name": "elementStyles",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Memoized list of all element styles.\nCreated lazily on user subclasses when finalizing the class.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 425,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L425",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "id": 5136,
                "name": "CSSResultOrNative",
                "location": {
                  "page": "styles",
                  "anchor": "CSSResultOrNative"
                }
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.elementStyles"
            }
          },
          {
            "id": 4262,
            "name": "enableWarning",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Enable the given warning kind for this class.",
              "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 334,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L334",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 4263,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 4264,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Enable the given warning kind for this class.",
                      "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "category",
                          "text": "dev-mode\n"
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 4265,
                        "name": "warningKind",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 4255,
                          "name": "WarningKind",
                          "location": {
                            "page": "misc",
                            "anchor": "WarningKind"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.enableWarning"
            }
          },
          {
            "id": 4261,
            "name": "enabledWarnings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Read or set all the enabled warning kinds for this class.",
              "text": "This property is only used in development builds.\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 315,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L315",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "id": 4255,
                "name": "WarningKind",
                "location": {
                  "page": "misc",
                  "anchor": "WarningKind"
                }
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.enabledWarnings"
            }
          },
          {
            "id": 4308,
            "name": "finalized",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Marks class as having finished creating properties."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 382,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L382",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.finalized"
            }
          },
          {
            "id": 4276,
            "name": "properties",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "User-supplied object that maps property names to `PropertyDeclaration`\nobjects containing options for configuring reactive properties. When\na reactive property is set the element will update and render.",
              "text": "By default properties are public fields, and as such, they should be\nconsidered as primarily settable by element users, either via attribute or\nthe property itself.\n\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state: true` option. Properties\nmarked as `state` do not reflect from the corresponding attribute\n\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating\npublic properties should typically not be done for non-primitive (object or\narray) properties. In other cases when an element needs to manage state, a\nprivate property set with the `state: true` option should be used. When\nneeded, state properties can be initialized via public properties to\nfacilitate complex interactions.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 417,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L417",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 4241,
              "name": "PropertyDeclarations",
              "location": {
                "page": "ReactiveElement",
                "anchor": "PropertyDeclarations"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.properties"
            }
          },
          {
            "id": 4303,
            "name": "shadowRootOptions",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Options used when calling `attachShadow`. Set this property to customize\nthe options for the shadowRoot; for example, to create a closed\nshadowRoot: `{mode: 'closed'}`.",
              "text": "Note, these options are used in `createRenderRoot`. If this method\nis customized, options should be respected if possible.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 645,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L645",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "ShadowRootInit",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#parameters"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.shadowRootOptions"
            }
          },
          {
            "id": 4278,
            "name": "styles",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Array of styles to apply to the element. The styles should be defined\nusing the [`css`](/docs/api/styles/#css) tag function or via constructible stylesheets.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 433,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L433",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 5138,
              "name": "CSSResultGroup",
              "location": {
                "page": "styles",
                "anchor": "CSSResultGroup"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.styles"
            }
          },
          {
            "id": 4355,
            "name": "updateComplete",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
              "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
              "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1196,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1196",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              ],
              "name": "Promise"
            },
            "getSignature": [
              {
                "id": 4356,
                "name": "updateComplete",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                  "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update.",
                  "tags": [
                    {
                      "tag": "category",
                      "text": "updates\n"
                    }
                  ]
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ],
                  "name": "Promise"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 4216,
                  "name": "ReactiveControllerHost.updateComplete",
                  "location": {
                    "page": "controllers",
                    "anchor": "ReactiveControllerHost.updateComplete"
                  }
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 4216,
              "name": "ReactiveControllerHost.updateComplete",
              "location": {
                "page": "controllers",
                "anchor": "ReactiveControllerHost.updateComplete"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.updateComplete"
            }
          },
          {
            "id": 4279,
            "name": "observedAttributes",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns a list of attributes corresponding to the registered properties.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 440,
                "character": 13,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L440",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            "getSignature": [
              {
                "id": 4280,
                "name": "observedAttributes",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a list of attributes corresponding to the registered properties.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    },
                    {
                      "tag": "category",
                      "text": "attributes\n"
                    }
                  ]
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.observedAttributes"
            }
          },
          {
            "id": 4319,
            "name": "addController",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 771,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L771",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4320,
                "name": "addController",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "parameters": [
                  {
                    "id": 4321,
                    "name": "controller",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 4198,
                      "name": "ReactiveController",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveController"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 4209,
                  "name": "ReactiveControllerHost.addController"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 4208,
              "name": "ReactiveControllerHost.addController",
              "location": {
                "page": "controllers",
                "anchor": "ReactiveControllerHost.addController"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.addController"
            }
          },
          {
            "id": 4335,
            "name": "attributeChangedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Synchronizes property values when attributes change."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 878,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L878",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4336,
                "name": "attributeChangedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Synchronizes property values when attributes change."
                },
                "parameters": [
                  {
                    "id": 4337,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 4338,
                    "name": "_old",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  },
                  {
                    "id": 4339,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.attributeChangedCallback"
            }
          },
          {
            "id": 4328,
            "name": "connectedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "On first connection, creates the element's renderRoot, sets up\nelement styling, and enables updating."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 843,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L843",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4329,
                "name": "connectedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "On first connection, creates the element's renderRoot, sets up\nelement styling, and enables updating."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.connectedCallback"
            }
          },
          {
            "id": 4326,
            "name": "createRenderRoot",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
              "returns": "Returns a node into which to render."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 825,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L825",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4327,
                "name": "createRenderRoot",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
                  "returns": "Returns a node into which to render."
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "ShadowRoot",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                      }
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.createRenderRoot"
            }
          },
          {
            "id": 4333,
            "name": "disconnectedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 870,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L870",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4334,
                "name": "disconnectedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.disconnectedCallback"
            }
          },
          {
            "id": 4330,
            "name": "enableUpdating",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 862,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L862",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4331,
                "name": "enableUpdating",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
                },
                "parameters": [
                  {
                    "id": 4332,
                    "name": "_requestedUpdate",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.enableUpdating"
            }
          },
          {
            "id": 4368,
            "name": "firstUpdated",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
              "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1282,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1282",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4369,
                "name": "firstUpdated",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "parameters": [
                  {
                    "id": 4370,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.firstUpdated"
            }
          },
          {
            "id": 4357,
            "name": "getUpdateComplete",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Override point for the `updateComplete` promise.",
              "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
              "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1223,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1223",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4358,
                "name": "getUpdateComplete",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Override point for the `updateComplete` promise.",
                  "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ],
                  "name": "Promise"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.getUpdateComplete"
            }
          },
          {
            "id": 4349,
            "name": "performUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
              "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1078,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1078",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4350,
                "name": "performUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                  "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Promise"
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.performUpdate"
            }
          },
          {
            "id": 4322,
            "name": "removeController",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 785,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L785",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4323,
                "name": "removeController",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "parameters": [
                  {
                    "id": 4324,
                    "name": "controller",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 4198,
                      "name": "ReactiveController",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveController"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 4212,
                  "name": "ReactiveControllerHost.removeController"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 4211,
              "name": "ReactiveControllerHost.removeController",
              "location": {
                "page": "controllers",
                "anchor": "ReactiveControllerHost.removeController"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.removeController"
            }
          },
          {
            "id": 4341,
            "name": "requestUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 973,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L973",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4342,
                "name": "requestUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
                },
                "parameters": [
                  {
                    "id": 4343,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "name of requesting property"
                    },
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 4344,
                    "name": "oldValue",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "old value of requesting property"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  },
                  {
                    "id": 4345,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "property options to use instead of the previously\n    configured options"
                    },
                    "type": {
                      "type": "reference",
                      "id": 4228,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 4215,
                  "name": "ReactiveControllerHost.requestUpdate"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 4214,
              "name": "ReactiveControllerHost.requestUpdate",
              "location": {
                "page": "controllers",
                "anchor": "ReactiveControllerHost.requestUpdate"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.requestUpdate"
            }
          },
          {
            "id": 4347,
            "name": "scheduleUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
              "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1057,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1057",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4348,
                "name": "scheduleUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
                  "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Promise"
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.scheduleUpdate"
            }
          },
          {
            "id": 4359,
            "name": "shouldUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1235,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1235",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4360,
                "name": "shouldUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                },
                "parameters": [
                  {
                    "id": 4361,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.shouldUpdate"
            }
          },
          {
            "id": 4362,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Updates the element. This method reflects property values to attributes.\nIt can be overridden to render and keep updated element DOM.\nSetting properties inside this method will *not* trigger\nanother update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1248,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1248",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4363,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Updates the element. This method reflects property values to attributes.\nIt can be overridden to render and keep updated element DOM.\nSetting properties inside this method will *not* trigger\nanother update."
                },
                "parameters": [
                  {
                    "id": 4364,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.update"
            }
          },
          {
            "id": 4365,
            "name": "updated",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
              "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1270,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1270",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4366,
                "name": "updated",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "parameters": [
                  {
                    "id": 4367,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.updated"
            }
          },
          {
            "id": 4351,
            "name": "willUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 1146,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1146",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4352,
                "name": "willUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {},
                "parameters": [
                  {
                    "id": 4353,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.willUpdate"
            }
          },
          {
            "id": 4270,
            "name": "addInitializer",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isStatic": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 358,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L358",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4271,
                "name": "addInitializer",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 4272,
                    "name": "initializer",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 4256,
                      "name": "Initializer",
                      "location": {
                        "page": "misc",
                        "anchor": "Initializer"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.addInitializer"
            }
          },
          {
            "id": 4281,
            "name": "createProperty",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
              "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 481,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L481",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4282,
                "name": "createProperty",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
                  "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 4283,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 4284,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "id": 4228,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.createProperty"
            }
          },
          {
            "id": 4301,
            "name": "finalize",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 585,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L585",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4302,
                "name": "finalize",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.finalize"
            }
          },
          {
            "id": 4304,
            "name": "finalizeStyles",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
              "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 661,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L661",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4305,
                "name": "finalizeStyles",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
                  "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 4306,
                    "name": "styles",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "id": 5138,
                      "name": "CSSResultGroup",
                      "location": {
                        "page": "styles",
                        "anchor": "CSSResultGroup"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 5136,
                    "name": "CSSResultOrNative",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultOrNative"
                    }
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.finalizeStyles"
            }
          },
          {
            "id": 4285,
            "name": "getPropertyDescriptor",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
              "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 536,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L536",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4286,
                "name": "getPropertyDescriptor",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                  "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 4287,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 4288,
                    "name": "key",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "symbol"
                        }
                      ]
                    }
                  },
                  {
                    "id": 4289,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 4228,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 4290,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 4296,
                        "name": "configurable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                            "line": 309,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 4297,
                        "name": "enumerable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                            "line": 310,
                            "character": 8
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      },
                      {
                        "id": 4291,
                        "name": "get",
                        "kind": 2048,
                        "kindString": "Method",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 4292,
                            "name": "get",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        ]
                      },
                      {
                        "id": 4293,
                        "name": "set",
                        "kind": 2048,
                        "kindString": "Method",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 4294,
                            "name": "set",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 4295,
                                "name": "value",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                          4296,
                          4297
                        ]
                      },
                      {
                        "title": "Methods",
                        "kind": 2048,
                        "children": [
                          4291,
                          4293
                        ]
                      }
                    ]
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.getPropertyDescriptor"
            }
          },
          {
            "id": 4298,
            "name": "getPropertyOptions",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
              "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                },
                {
                  "tag": "final",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 575,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L575",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "id": 4299,
                "name": "getPropertyOptions",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                  "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    },
                    {
                      "tag": "final",
                      "text": ""
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 4300,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 4228,
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "PropertyDeclaration",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "PropertyDeclaration"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement.getPropertyOptions"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              4309
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              4653,
              4654,
              4655,
              4656,
              4657,
              4658,
              4659,
              4660,
              4661,
              4662,
              4663,
              4664,
              4665,
              4666,
              4667,
              4668,
              4669,
              4670,
              4318,
              4346,
              4312,
              4354,
              4340,
              4316,
              4317,
              4325,
              4313,
              4371,
              4372,
              4674,
              4675,
              4676,
              4677,
              4678,
              4679,
              4680,
              4681,
              4682,
              4683,
              4684,
              4685,
              4686,
              4687,
              4688,
              4689,
              4690,
              4691,
              4692,
              4693,
              4694,
              4695,
              4696,
              4697,
              4698,
              4699,
              4700,
              4701,
              4702,
              4703,
              4704,
              4705,
              4706,
              4707,
              4708,
              4709,
              4764,
              4416,
              4373,
              4591,
              4731,
              4592,
              4732,
              4417,
              4418,
              4419,
              4420,
              4421,
              4422,
              4778,
              5127,
              4374,
              4375,
              4779,
              4593,
              4733,
              4315,
              4376,
              4423,
              4728,
              4377,
              4780,
              4594,
              4781,
              4314,
              4378,
              4595,
              4734,
              4424,
              4425,
              4729,
              4596,
              4597,
              4598,
              4599,
              5128,
              4379,
              4380,
              4381,
              4382,
              4383,
              4782,
              4786,
              4790,
              4794,
              4798,
              4802,
              4806,
              4810,
              4814,
              4818,
              4822,
              4826,
              4830,
              4765,
              4834,
              4769,
              4838,
              4842,
              4846,
              4850,
              4854,
              4858,
              4862,
              4866,
              4870,
              4874,
              4878,
              4882,
              4883,
              4887,
              4426,
              4430,
              4891,
              4895,
              4899,
              4903,
              4907,
              4911,
              4915,
              4919,
              4923,
              4927,
              4931,
              4935,
              4939,
              4943,
              4947,
              4951,
              4955,
              4959,
              4773,
              4963,
              4967,
              4971,
              4975,
              4979,
              4983,
              4987,
              4991,
              4995,
              4999,
              5003,
              5007,
              5011,
              5015,
              5019,
              5023,
              5027,
              5031,
              5035,
              5039,
              5043,
              5047,
              5051,
              5055,
              5059,
              5063,
              5067,
              5071,
              5075,
              5079,
              5083,
              5087,
              5091,
              5095,
              5099,
              5103,
              5107,
              5111,
              5115,
              5119,
              5123,
              4434,
              4384,
              4435,
              4600,
              4601,
              4436,
              4437,
              4730,
              4602,
              4311,
              4438,
              4439,
              4440,
              4441,
              4442,
              4443,
              4385,
              4777,
              5129,
              4444,
              4603,
              4386,
              4387,
              4307,
              4274,
              4273,
              4266,
              4275,
              4277,
              4262,
              4261,
              4308,
              4276,
              4303,
              4278
            ],
            "categories": [
              {
                "title": "Other",
                "children": [
                  4653,
                  4654,
                  4655,
                  4656,
                  4657,
                  4658,
                  4659,
                  4660,
                  4661,
                  4662,
                  4663,
                  4664,
                  4665,
                  4666,
                  4667,
                  4668,
                  4669,
                  4670,
                  4318,
                  4346,
                  4312,
                  4354,
                  4340,
                  4316,
                  4317,
                  4325,
                  4313,
                  4371,
                  4372,
                  4674,
                  4675,
                  4676,
                  4677,
                  4678,
                  4679,
                  4680,
                  4681,
                  4682,
                  4683,
                  4684,
                  4685,
                  4686,
                  4687,
                  4688,
                  4689,
                  4690,
                  4691,
                  4692,
                  4693,
                  4694,
                  4695,
                  4696,
                  4697,
                  4698,
                  4699,
                  4700,
                  4701,
                  4702,
                  4703,
                  4704,
                  4705,
                  4706,
                  4707,
                  4708,
                  4709,
                  4764,
                  4416,
                  4373,
                  4591,
                  4731,
                  4592,
                  4732,
                  4417,
                  4418,
                  4419,
                  4420,
                  4421,
                  4422,
                  4778,
                  5127,
                  4374,
                  4375,
                  4779,
                  4593,
                  4733,
                  4376,
                  4423,
                  4728,
                  4377,
                  4780,
                  4594,
                  4781,
                  4378,
                  4595,
                  4734,
                  4424,
                  4425,
                  4729,
                  4596,
                  4597,
                  4598,
                  4599,
                  5128,
                  4379,
                  4380,
                  4381,
                  4382,
                  4383,
                  4782,
                  4786,
                  4790,
                  4794,
                  4798,
                  4802,
                  4806,
                  4810,
                  4814,
                  4818,
                  4822,
                  4826,
                  4830,
                  4765,
                  4834,
                  4769,
                  4838,
                  4842,
                  4846,
                  4850,
                  4854,
                  4858,
                  4862,
                  4866,
                  4870,
                  4874,
                  4878,
                  4882,
                  4883,
                  4887,
                  4426,
                  4430,
                  4891,
                  4895,
                  4899,
                  4903,
                  4907,
                  4911,
                  4915,
                  4919,
                  4923,
                  4927,
                  4931,
                  4935,
                  4939,
                  4943,
                  4947,
                  4951,
                  4955,
                  4959,
                  4773,
                  4963,
                  4967,
                  4971,
                  4975,
                  4979,
                  4983,
                  4987,
                  4991,
                  4995,
                  4999,
                  5003,
                  5007,
                  5011,
                  5015,
                  5019,
                  5023,
                  5027,
                  5031,
                  5035,
                  5039,
                  5043,
                  5047,
                  5051,
                  5055,
                  5059,
                  5063,
                  5067,
                  5071,
                  5075,
                  5079,
                  5083,
                  5087,
                  5091,
                  5095,
                  5099,
                  5103,
                  5107,
                  5111,
                  5115,
                  5119,
                  5123,
                  4434,
                  4384,
                  4435,
                  4600,
                  4601,
                  4436,
                  4437,
                  4730,
                  4602,
                  4438,
                  4439,
                  4440,
                  4441,
                  4442,
                  4443,
                  4385,
                  4777,
                  5129,
                  4444,
                  4603,
                  4386,
                  4387,
                  4307,
                  4274,
                  4273,
                  4308
                ]
              },
              {
                "title": "dev-mode",
                "children": [
                  4266,
                  4262,
                  4261
                ]
              },
              {
                "title": "properties",
                "children": [
                  4275,
                  4276
                ]
              },
              {
                "title": "rendering",
                "children": [
                  4311,
                  4303
                ]
              },
              {
                "title": "styles",
                "children": [
                  4277,
                  4278
                ]
              },
              {
                "title": "updates",
                "children": [
                  4315,
                  4314
                ]
              }
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              4355,
              4279
            ],
            "categories": [
              {
                "title": "attributes",
                "children": [
                  4279
                ]
              },
              {
                "title": "updates",
                "children": [
                  4355
                ]
              }
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              4319,
              4390,
              4717,
              4710,
              4735,
              4604,
              4445,
              4335,
              4720,
              5130,
              4388,
              4608,
              4448,
              4611,
              4328,
              4614,
              4326,
              4333,
              4671,
              4330,
              4368,
              5132,
              4714,
              4458,
              4461,
              4465,
              4467,
              4470,
              4474,
              4476,
              4478,
              4481,
              4490,
              4617,
              4357,
              4500,
              4503,
              4507,
              4620,
              4509,
              4512,
              4516,
              4520,
              4622,
              4627,
              4630,
              4633,
              4636,
              4639,
              4524,
              4642,
              4349,
              4738,
              4741,
              4751,
              4527,
              4723,
              4530,
              4533,
              4537,
              4644,
              4322,
              4403,
              4648,
              4761,
              4725,
              4540,
              4543,
              4341,
              4347,
              4545,
              4551,
              4557,
              4560,
              4566,
              4570,
              4575,
              4578,
              4581,
              4359,
              4584,
              4362,
              4365,
              4588,
              4351,
              4270,
              4281,
              4301,
              4304,
              4285,
              4298
            ],
            "categories": [
              {
                "title": "Other",
                "children": [
                  4390,
                  4717,
                  4710,
                  4735,
                  4604,
                  4445,
                  4720,
                  5130,
                  4388,
                  4608,
                  4448,
                  4611,
                  4614,
                  4671,
                  5132,
                  4714,
                  4458,
                  4461,
                  4465,
                  4467,
                  4470,
                  4474,
                  4476,
                  4478,
                  4481,
                  4490,
                  4617,
                  4500,
                  4503,
                  4507,
                  4620,
                  4509,
                  4512,
                  4516,
                  4520,
                  4622,
                  4627,
                  4630,
                  4633,
                  4636,
                  4639,
                  4524,
                  4642,
                  4738,
                  4741,
                  4751,
                  4527,
                  4723,
                  4530,
                  4533,
                  4537,
                  4644,
                  4403,
                  4648,
                  4761,
                  4725,
                  4540,
                  4543,
                  4545,
                  4551,
                  4557,
                  4560,
                  4566,
                  4570,
                  4575,
                  4578,
                  4581,
                  4584,
                  4588,
                  4270,
                  4301
                ]
              },
              {
                "title": "attributes",
                "children": [
                  4335
                ]
              },
              {
                "title": "controllers",
                "children": [
                  4319,
                  4322
                ]
              },
              {
                "title": "lifecycle",
                "children": [
                  4328,
                  4333
                ]
              },
              {
                "title": "properties",
                "children": [
                  4281,
                  4285,
                  4298
                ]
              },
              {
                "title": "rendering",
                "children": [
                  4326
                ]
              },
              {
                "title": "styles",
                "children": [
                  4304
                ]
              },
              {
                "title": "updates",
                "children": [
                  4330,
                  4368,
                  4357,
                  4349,
                  4341,
                  4347,
                  4359,
                  4362,
                  4365,
                  4351
                ]
              }
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 302,
            "character": 22,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L302",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "HTMLElement",
            "externalLocation": {
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
            }
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 3319,
            "name": "LitElement",
            "location": {
              "page": "LitElement",
              "anchor": "LitElement"
            }
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "id": 4207,
            "name": "ReactiveControllerHost",
            "location": {
              "page": "controllers",
              "anchor": "ReactiveControllerHost"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "ReactiveElement"
        },
        "heritage": [
          {
            "type": "reference",
            "name": "HTMLElement",
            "externalLocation": {
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
            }
          }
        ],
        "expandedCategories": [
          {
            "anchor": "ReactiveElement/attributes",
            "title": "Attributes",
            "children": [
              {
                "id": 4335,
                "name": "attributeChangedCallback",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "comment": {
                  "shortText": "Synchronizes property values when attributes change."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 878,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L878",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4336,
                    "name": "attributeChangedCallback",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Synchronizes property values when attributes change."
                    },
                    "parameters": [
                      {
                        "id": 4337,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "id": 4338,
                        "name": "_old",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": null
                            },
                            {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          ]
                        }
                      },
                      {
                        "id": 4339,
                        "name": "value",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": null
                            },
                            {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          ]
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.attributeChangedCallback"
                }
              },
              {
                "id": 4279,
                "name": "observedAttributes",
                "kind": 262144,
                "kindString": "Accessor",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Returns a list of attributes corresponding to the registered properties.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 440,
                    "character": 13,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L440",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                "getSignature": [
                  {
                    "id": 4280,
                    "name": "observedAttributes",
                    "kind": 524288,
                    "kindString": "Get signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns a list of attributes corresponding to the registered properties.",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "category",
                          "text": "attributes\n"
                        }
                      ]
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.observedAttributes"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/controllers",
            "title": "Controllers",
            "children": [
              {
                "id": 4319,
                "name": "addController",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 771,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L771",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4320,
                    "name": "addController",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "parameters": [
                      {
                        "id": 4321,
                        "name": "controller",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 4198,
                          "name": "ReactiveController",
                          "location": {
                            "page": "controllers",
                            "anchor": "ReactiveController"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "implementationOf": {
                      "type": "reference",
                      "id": 4209,
                      "name": "ReactiveControllerHost.addController"
                    }
                  }
                ],
                "implementationOf": {
                  "type": "reference",
                  "id": 4208,
                  "name": "ReactiveControllerHost.addController",
                  "location": {
                    "page": "controllers",
                    "anchor": "ReactiveControllerHost.addController"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.addController"
                }
              },
              {
                "id": 4322,
                "name": "removeController",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 785,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L785",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4323,
                    "name": "removeController",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "parameters": [
                      {
                        "id": 4324,
                        "name": "controller",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 4198,
                          "name": "ReactiveController",
                          "location": {
                            "page": "controllers",
                            "anchor": "ReactiveController"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "implementationOf": {
                      "type": "reference",
                      "id": 4212,
                      "name": "ReactiveControllerHost.removeController"
                    }
                  }
                ],
                "implementationOf": {
                  "type": "reference",
                  "id": 4211,
                  "name": "ReactiveControllerHost.removeController",
                  "location": {
                    "page": "controllers",
                    "anchor": "ReactiveControllerHost.removeController"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.removeController"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/dev-mode",
            "title": "Dev mode",
            "children": [
              {
                "id": 4266,
                "name": "disableWarning",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Disable the given warning kind for this class.",
                  "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 353,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L353",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 4267,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 4268,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "comment": {
                          "shortText": "Disable the given warning kind for this class.",
                          "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Disable for all ReactiveElement classes\nReactiveElement.disableWarning.?('migration');\n\n// Disable for all MyElement only\nMyElement.disableWarning.?('migration');\n```\n",
                          "tags": [
                            {
                              "tag": "nocollapse",
                              "text": ""
                            },
                            {
                              "tag": "category",
                              "text": "dev-mode\n"
                            }
                          ]
                        },
                        "parameters": [
                          {
                            "id": 4269,
                            "name": "warningKind",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "id": 4255,
                              "name": "WarningKind",
                              "location": {
                                "page": "misc",
                                "anchor": "WarningKind"
                              }
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.disableWarning"
                }
              },
              {
                "id": 4261,
                "name": "enabledWarnings",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Read or set all the enabled warning kinds for this class.",
                  "text": "This property is only used in development builds.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 315,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L315",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 4255,
                    "name": "WarningKind",
                    "location": {
                      "page": "misc",
                      "anchor": "WarningKind"
                    }
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.enabledWarnings"
                }
              },
              {
                "id": 4262,
                "name": "enableWarning",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Enable the given warning kind for this class.",
                  "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 334,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L334",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 4263,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 4264,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "comment": {
                          "shortText": "Enable the given warning kind for this class.",
                          "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n\n```ts\n// Enable for all ReactiveElement classes\nReactiveElement.enableWarning.?('migration');\n\n// Enable for all MyElement only\nMyElement.enableWarning.?('migration');\n```\n",
                          "tags": [
                            {
                              "tag": "nocollapse",
                              "text": ""
                            },
                            {
                              "tag": "category",
                              "text": "dev-mode\n"
                            }
                          ]
                        },
                        "parameters": [
                          {
                            "id": 4265,
                            "name": "warningKind",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "id": 4255,
                              "name": "WarningKind",
                              "location": {
                                "page": "misc",
                                "anchor": "WarningKind"
                              }
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      }
                    ]
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.enableWarning"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/lifecycle",
            "title": "Lifecycle",
            "children": [
              {
                "id": 4328,
                "name": "connectedCallback",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "comment": {
                  "shortText": "On first connection, creates the element's renderRoot, sets up\nelement styling, and enables updating."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 843,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L843",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4329,
                    "name": "connectedCallback",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "On first connection, creates the element's renderRoot, sets up\nelement styling, and enables updating."
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.connectedCallback"
                }
              },
              {
                "id": 4333,
                "name": "disconnectedCallback",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "comment": {
                  "shortText": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 870,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L870",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4334,
                    "name": "disconnectedCallback",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future."
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.disconnectedCallback"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/Other",
            "title": "Other",
            "children": [
              {
                "id": 4270,
                "name": "addInitializer",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isStatic": true
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 358,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L358",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4271,
                    "name": "addInitializer",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": "\n"
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 4272,
                        "name": "initializer",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 4256,
                          "name": "Initializer",
                          "location": {
                            "page": "misc",
                            "anchor": "Initializer"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.addInitializer"
                }
              },
              {
                "id": 4301,
                "name": "finalize",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 585,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L585",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4302,
                    "name": "finalize",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized.",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": "\n"
                        }
                      ]
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.finalize"
                }
              },
              {
                "id": 4308,
                "name": "finalized",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Marks class as having finished creating properties."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 382,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L382",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.finalized"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/properties",
            "title": "Properties",
            "children": [
              {
                "id": 4281,
                "name": "createProperty",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
                  "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 481,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L481",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4282,
                    "name": "createProperty",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
                      "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 4283,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      },
                      {
                        "id": 4284,
                        "name": "options",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "id": 4228,
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.createProperty"
                }
              },
              {
                "id": 4275,
                "name": "elementProperties",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Memoized list of all element properties, including any superclass properties.\nCreated lazily on user subclasses when finalizing the class.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 390,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L390",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "PropertyDeclarationMap"
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.elementProperties"
                }
              },
              {
                "id": 4285,
                "name": "getPropertyDescriptor",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                  "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 536,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L536",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4286,
                    "name": "getPropertyDescriptor",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                      "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 4287,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      },
                      {
                        "id": 4288,
                        "name": "key",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        }
                      },
                      {
                        "id": 4289,
                        "name": "options",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 4228,
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 4290,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "children": [
                          {
                            "id": 4296,
                            "name": "configurable",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                                "line": 309,
                                "character": 8
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 4297,
                            "name": "enumerable",
                            "kind": 1024,
                            "kindString": "Property",
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                                "line": 310,
                                "character": 8
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          },
                          {
                            "id": 4291,
                            "name": "get",
                            "kind": 2048,
                            "kindString": "Method",
                            "flags": {},
                            "signatures": [
                              {
                                "id": 4292,
                                "name": "get",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              }
                            ]
                          },
                          {
                            "id": 4293,
                            "name": "set",
                            "kind": 2048,
                            "kindString": "Method",
                            "flags": {},
                            "signatures": [
                              {
                                "id": 4294,
                                "name": "set",
                                "kind": 4096,
                                "kindString": "Call signature",
                                "flags": {},
                                "parameters": [
                                  {
                                    "id": 4295,
                                    "name": "value",
                                    "kind": 32768,
                                    "kindString": "Parameter",
                                    "flags": {},
                                    "type": {
                                      "type": "intrinsic",
                                      "name": "unknown"
                                    }
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "void"
                                }
                              }
                            ]
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "kind": 1024,
                            "children": [
                              4296,
                              4297
                            ]
                          },
                          {
                            "title": "Methods",
                            "kind": 2048,
                            "children": [
                              4291,
                              4293
                            ]
                          }
                        ]
                      }
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.getPropertyDescriptor"
                }
              },
              {
                "id": 4298,
                "name": "getPropertyOptions",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                  "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    },
                    {
                      "tag": "final",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 575,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L575",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4299,
                    "name": "getPropertyOptions",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                      "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        },
                        {
                          "tag": "final",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 4300,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 4228,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.getPropertyOptions"
                }
              },
              {
                "id": 4276,
                "name": "properties",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "User-supplied object that maps property names to `PropertyDeclaration`\nobjects containing options for configuring reactive properties. When\na reactive property is set the element will update and render.",
                  "text": "By default properties are public fields, and as such, they should be\nconsidered as primarily settable by element users, either via attribute or\nthe property itself.\n\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state: true` option. Properties\nmarked as `state` do not reflect from the corresponding attribute\n\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating\npublic properties should typically not be done for non-primitive (object or\narray) properties. In other cases when an element needs to manage state, a\nprivate property set with the `state: true` option should be used. When\nneeded, state properties can be initialized via public properties to\nfacilitate complex interactions.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 417,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L417",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 4241,
                  "name": "PropertyDeclarations",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "PropertyDeclarations"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.properties"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/rendering",
            "title": "Rendering",
            "children": [
              {
                "id": 4326,
                "name": "createRenderRoot",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
                  "returns": "Returns a node into which to render."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 825,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L825",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4327,
                    "name": "createRenderRoot",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
                      "returns": "Returns a node into which to render."
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "Element",
                          "externalLocation": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                          }
                        },
                        {
                          "type": "reference",
                          "name": "ShadowRoot",
                          "externalLocation": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                          }
                        }
                      ]
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.createRenderRoot"
                }
              },
              {
                "id": 4311,
                "name": "renderRoot",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "comment": {
                  "shortText": "Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 685,
                    "character": 11,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L685",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "HTMLElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "ShadowRoot",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                      }
                    }
                  ]
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.renderRoot"
                }
              },
              {
                "id": 4303,
                "name": "shadowRootOptions",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Options used when calling `attachShadow`. Set this property to customize\nthe options for the shadowRoot; for example, to create a closed\nshadowRoot: `{mode: 'closed'}`.",
                  "text": "Note, these options are used in `createRenderRoot`. If this method\nis customized, options should be respected if possible.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 645,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L645",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "ShadowRootInit",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#parameters"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.shadowRootOptions"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/styles",
            "title": "Styles",
            "children": [
              {
                "id": 4277,
                "name": "elementStyles",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Memoized list of all element styles.\nCreated lazily on user subclasses when finalizing the class.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 425,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L425",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 5136,
                    "name": "CSSResultOrNative",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultOrNative"
                    }
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.elementStyles"
                }
              },
              {
                "id": 4304,
                "name": "finalizeStyles",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
                  "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 661,
                    "character": 19,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L661",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4305,
                    "name": "finalizeStyles",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
                      "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": ""
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 4306,
                        "name": "styles",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "id": 5138,
                          "name": "CSSResultGroup",
                          "location": {
                            "page": "styles",
                            "anchor": "CSSResultGroup"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "id": 5136,
                        "name": "CSSResultOrNative",
                        "location": {
                          "page": "styles",
                          "anchor": "CSSResultOrNative"
                        }
                      }
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.finalizeStyles"
                }
              },
              {
                "id": 4278,
                "name": "styles",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Array of styles to apply to the element. The styles should be defined\nusing the [`css`](/docs/api/styles/#css) tag function or via constructible stylesheets.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    }
                  ]
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 433,
                    "character": 9,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L433",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5138,
                  "name": "CSSResultGroup",
                  "location": {
                    "page": "styles",
                    "anchor": "CSSResultGroup"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.styles"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/updates",
            "title": "Updates",
            "children": [
              {
                "id": 4330,
                "name": "enableUpdating",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 862,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L862",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4331,
                    "name": "enableUpdating",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
                    },
                    "parameters": [
                      {
                        "id": 4332,
                        "name": "_requestedUpdate",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.enableUpdating"
                }
              },
              {
                "id": 4368,
                "name": "firstUpdated",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1282,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1282",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4369,
                    "name": "firstUpdated",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                      "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                    },
                    "parameters": [
                      {
                        "id": 4370,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.firstUpdated"
                }
              },
              {
                "id": 4357,
                "name": "getUpdateComplete",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Override point for the `updateComplete` promise.",
                  "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1223,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1223",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4358,
                    "name": "getUpdateComplete",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Override point for the `updateComplete` promise.",
                      "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n",
                      "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      ],
                      "name": "Promise"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.getUpdateComplete"
                }
              },
              {
                "id": 4315,
                "name": "hasUpdated",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 718,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L718",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.hasUpdated"
                }
              },
              {
                "id": 4314,
                "name": "isUpdatePending",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "comment": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 713,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L713",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.isUpdatePending"
                }
              },
              {
                "id": 4349,
                "name": "performUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                  "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1078,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1078",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4350,
                    "name": "performUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                      "text": "Call performUpdate() to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\n\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Promise"
                        }
                      ]
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.performUpdate"
                }
              },
              {
                "id": 4341,
                "name": "requestUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "comment": {
                  "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 973,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L973",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4342,
                    "name": "requestUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
                    },
                    "parameters": [
                      {
                        "id": 4343,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "text": "name of requesting property"
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      },
                      {
                        "id": 4344,
                        "name": "oldValue",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "text": "old value of requesting property"
                        },
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      },
                      {
                        "id": 4345,
                        "name": "options",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "text": "property options to use instead of the previously\n    configured options"
                        },
                        "type": {
                          "type": "reference",
                          "id": 4228,
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "implementationOf": {
                      "type": "reference",
                      "id": 4215,
                      "name": "ReactiveControllerHost.requestUpdate"
                    }
                  }
                ],
                "implementationOf": {
                  "type": "reference",
                  "id": 4214,
                  "name": "ReactiveControllerHost.requestUpdate",
                  "location": {
                    "page": "controllers",
                    "anchor": "ReactiveControllerHost.requestUpdate"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.requestUpdate"
                }
              },
              {
                "id": 4347,
                "name": "scheduleUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
                  "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1057,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1057",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4348,
                    "name": "scheduleUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
                      "text": "For instance, to schedule updates to occur just before the next frame:\n\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```"
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Promise"
                        }
                      ]
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.scheduleUpdate"
                }
              },
              {
                "id": 4359,
                "name": "shouldUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1235,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1235",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4360,
                    "name": "shouldUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                    },
                    "parameters": [
                      {
                        "id": 4361,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.shouldUpdate"
                }
              },
              {
                "id": 4362,
                "name": "update",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Updates the element. This method reflects property values to attributes.\nIt can be overridden to render and keep updated element DOM.\nSetting properties inside this method will *not* trigger\nanother update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1248,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1248",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4363,
                    "name": "update",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Updates the element. This method reflects property values to attributes.\nIt can be overridden to render and keep updated element DOM.\nSetting properties inside this method will *not* trigger\nanother update."
                    },
                    "parameters": [
                      {
                        "id": 4364,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.update"
                }
              },
              {
                "id": 4355,
                "name": "updateComplete",
                "kind": 262144,
                "kindString": "Accessor",
                "flags": {},
                "comment": {
                  "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                  "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
                  "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1196,
                    "character": 6,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1196",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ],
                  "name": "Promise"
                },
                "getSignature": [
                  {
                    "id": 4356,
                    "name": "updateComplete",
                    "kind": 524288,
                    "kindString": "Get signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                      "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n",
                      "returns": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update.",
                      "tags": [
                        {
                          "tag": "category",
                          "text": "updates\n"
                        }
                      ]
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      ],
                      "name": "Promise"
                    },
                    "implementationOf": {
                      "type": "reference",
                      "id": 4216,
                      "name": "ReactiveControllerHost.updateComplete",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveControllerHost.updateComplete"
                      }
                    }
                  }
                ],
                "implementationOf": {
                  "type": "reference",
                  "id": 4216,
                  "name": "ReactiveControllerHost.updateComplete",
                  "location": {
                    "page": "controllers",
                    "anchor": "ReactiveControllerHost.updateComplete"
                  }
                },
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.updateComplete"
                }
              },
              {
                "id": 4365,
                "name": "updated",
                "kind": 2048,
                "kindString": "Method",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1270,
                    "character": 12,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1270",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4366,
                    "name": "updated",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                      "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                    },
                    "parameters": [
                      {
                        "id": 4367,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "comment": {
                          "text": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.updated"
                }
              },
              {
                "id": 4351,
                "name": "willUpdate",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "children": [],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1146,
                    "character": 2,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L1146",
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "id": 4352,
                    "name": "willUpdate",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {},
                    "parameters": [
                      {
                        "id": 4353,
                        "name": "_changedProperties",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "union",
                              "types": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "number"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "symbol"
                                }
                              ]
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Map"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ],
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 10,
                    "character": 0,
                    "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.willUpdate"
                }
              }
            ]
          }
        ]
      },
      {
        "id": 3318,
        "name": "UpdatingElement",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-element/src/lit-element.ts",
            "line": 56,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-element/src/lit-element.ts#L56",
            "moduleSpecifier": "lit-element/lit-element.js"
          }
        ],
        "type": {
          "type": "query",
          "queryType": {
            "type": "reference",
            "id": 4260,
            "name": "ReactiveElement",
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement"
            }
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "UpdatingElement"
        }
      },
      {
        "id": 4217,
        "name": "ComplexAttributeConverter",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "Converts property values to and from attribute values."
        },
        "children": [
          {
            "id": 4218,
            "name": "fromAttribute",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Function called to convert an attribute value to a property\nvalue."
            },
            "children": [],
            "signatures": [
              {
                "id": 4219,
                "name": "fromAttribute",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Function called to convert an attribute value to a property\nvalue."
                },
                "parameters": [
                  {
                    "id": 4220,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  },
                  {
                    "id": 4221,
                    "name": "type",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "TypeHint"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "Type"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ComplexAttributeConverter.fromAttribute"
            }
          },
          {
            "id": 4222,
            "name": "toAttribute",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Function called to convert a property value to an attribute\nvalue.",
              "text": "It returns unknown instead of string, to be compatible with\nhttps://github.com/WICG/trusted-types (and similar efforts).\n"
            },
            "children": [],
            "signatures": [
              {
                "id": 4223,
                "name": "toAttribute",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Function called to convert a property value to an attribute\nvalue.",
                  "text": "It returns unknown instead of string, to be compatible with\nhttps://github.com/WICG/trusted-types (and similar efforts).\n"
                },
                "parameters": [
                  {
                    "id": 4224,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    }
                  },
                  {
                    "id": 4225,
                    "name": "type",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "TypeHint"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ComplexAttributeConverter.toAttribute"
            }
          }
        ],
        "groups": [
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              4218,
              4222
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 105,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L105",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "typeParameter": [
          {
            "id": 4226,
            "name": "Type",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            }
          },
          {
            "id": 4227,
            "name": "TypeHint",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "ComplexAttributeConverter"
        }
      },
      {
        "id": 4228,
        "name": "PropertyDeclaration",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "Defines options for a property accessor."
        },
        "children": [
          {
            "id": 4230,
            "name": "attribute",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates how and whether the property becomes an observed attribute.\nIf the value is `false`, the property is not added to `observedAttributes`.\nIf true or absent, the lowercased property name is observed (e.g. `fooBar`\nbecomes `foobar`). If a string, the string value is observed (e.g\n`attribute: 'foo-bar'`)."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 146,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L146",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.attribute"
            }
          },
          {
            "id": 4232,
            "name": "converter",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates how to convert the attribute to/from a property. If this value\nis a function, it is used to convert the attribute value a the property\nvalue. If it's an object, it can have keys for `fromAttribute` and\n`toAttribute`. If no `toAttribute` function is provided and\n`reflect` is set to `true`, the property value is set directly to the\nattribute. A default `converter` is used if none is provided; it supports\n`Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\nwhen a property changes and the converter is used to update the attribute,\nthe property is never updated again as a result of the attribute changing,\nand vice versa."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 167,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L167",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Type"
                },
                {
                  "type": "reference",
                  "name": "TypeHint"
                }
              ],
              "name": "AttributeConverter"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.converter"
            }
          },
          {
            "id": 4238,
            "name": "noAccessor",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates whether an accessor will be created for this property. By\ndefault, an accessor will be generated for this property that requests an\nupdate when set. If this flag is `true`, no accessor will be created, and\nit will be the user's responsibility to call\n`this.requestUpdate(propertyName, oldValue)` to request an update when\nthe property changes."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 193,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L193",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.noAccessor"
            }
          },
          {
            "id": 4233,
            "name": "reflect",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates if the property should reflect to an attribute.\nIf `true`, when the property is set, the attribute is set using the\nattribute name determined according to the rules for the `attribute`\nproperty option and the value of the property converted using the rules\nfrom the `converter` property option."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 176,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L176",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.reflect"
            }
          },
          {
            "id": 4229,
            "name": "state",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "When set to `true`, indicates the property is internal private state. The\nproperty should not be set by users. When using TypeScript, this property\nshould be marked as `private` or `protected`, and it is also a common\npractice to use a leading `_` in the name. The property is not added to\n`observedAttributes`."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 137,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L137",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.state"
            }
          },
          {
            "id": 4231,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates the type of the property. This is used only as a hint for the\n`converter` to determine how to convert the attribute\nto/from a property."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 153,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L153",
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "TypeHint"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.type"
            }
          },
          {
            "id": 4234,
            "name": "hasChanged",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "A function that indicates if a property should be considered changed when\nit is set. The function should take the `newValue` and `oldValue` and\nreturn `true` if an update should be requested."
            },
            "children": [],
            "signatures": [
              {
                "id": 4235,
                "name": "hasChanged",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "A function that indicates if a property should be considered changed when\nit is set. The function should take the `newValue` and `oldValue` and\nreturn `true` if an update should be requested."
                },
                "parameters": [
                  {
                    "id": 4236,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    }
                  },
                  {
                    "id": 4237,
                    "name": "oldValue",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.hasChanged"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              4230,
              4232,
              4238,
              4233,
              4229,
              4231
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              4234
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 129,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L129",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "typeParameter": [
          {
            "id": 4239,
            "name": "Type",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            }
          },
          {
            "id": 4240,
            "name": "TypeHint",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "PropertyDeclaration"
        }
      },
      {
        "id": 4241,
        "name": "PropertyDeclarations",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "Map of properties to PropertyDeclaration options. For each property an\naccessor is made, and the property is processed according to the\nPropertyDeclaration options."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 201,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L201",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "indexSignature": {
          "id": 4242,
          "name": "__index",
          "kind": 8192,
          "kindString": "Index signature",
          "flags": {},
          "parameters": [
            {
              "id": 4243,
              "name": "key",
              "kind": 32768,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "reference",
            "id": 4228,
            "name": "PropertyDeclaration",
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration"
            }
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "PropertyDeclarations"
        }
      },
      {
        "id": 4244,
        "name": "PropertyValues",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "Map of changed properties with old values. Takes an optional generic\ninterface corresponding to the declared element properties."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 214,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L214",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "typeParameter": [
          {
            "id": 4245,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "conditional",
          "checkType": {
            "type": "typeOperator",
            "operator": "keyof",
            "target": {
              "type": "reference",
              "name": "T"
            }
          },
          "extendsType": {
            "type": "reference",
            "name": "PropertyKey"
          },
          "trueType": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "typeOperator",
                "operator": "keyof",
                "target": {
                  "type": "reference",
                  "name": "T"
                }
              },
              {
                "type": "intrinsic",
                "name": "unknown"
              }
            ],
            "name": "Map"
          },
          "falseType": {
            "type": "intrinsic",
            "name": "never"
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "PropertyValues"
        }
      }
    ]
  },
  {
    "slug": "templates",
    "title": "Templates",
    "versionLinks": {
      "v1": "api/lit-html/templates/"
    },
    "items": [
      {
        "id": 5186,
        "name": "html",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Interprets a template literal as an HTML template that can efficiently\nrender to and update a container."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 314,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L314",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "signatures": [
          {
            "id": 5187,
            "name": "html",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Interprets a template literal as an HTML template that can efficiently\nrender to and update a container."
            },
            "parameters": [
              {
                "id": 5188,
                "name": "strings",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 5189,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 5172,
              "typeArguments": [
                {
                  "type": "literal",
                  "value": 1
                }
              ],
              "name": "TemplateResult",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "html"
        }
      },
      {
        "id": 5195,
        "name": "nothing",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A sentinel value that signals a ChildPart to fully clear its content."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 331,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L331",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "typeOperator",
          "operator": "unique",
          "target": {
            "type": "intrinsic",
            "name": "symbol"
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "nothing"
        }
      },
      {
        "id": 5206,
        "name": "render",
        "kind": 32,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Renders a value, usually a lit-html TemplateResult, to the container."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 395,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L395",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 5207,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 5211,
                "name": "createSanitizer",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                    "line": 128,
                    "character": 4
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5162,
                  "name": "SanitizerFactory",
                  "location": {
                    "page": "templates",
                    "anchor": "SanitizerFactory"
                  }
                }
              },
              {
                "id": 5212,
                "name": "_testOnlyClearSanitizerFactoryDoNotCallOrElse",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                    "line": 129,
                    "character": 4
                  }
                ],
                "signatures": [
                  {
                    "id": 5213,
                    "name": "_testOnlyClearSanitizerFactoryDoNotCallOrElse",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              },
              {
                "id": 5208,
                "name": "setSanitizer",
                "kind": 2048,
                "kindString": "Method",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                    "line": 127,
                    "character": 4
                  }
                ],
                "signatures": [
                  {
                    "id": 5209,
                    "name": "setSanitizer",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 5210,
                        "name": "newSanitizer",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 5162,
                          "name": "SanitizerFactory",
                          "location": {
                            "page": "templates",
                            "anchor": "SanitizerFactory"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "kind": 1024,
                "children": [
                  5211
                ]
              },
              {
                "title": "Methods",
                "kind": 2048,
                "children": [
                  5212,
                  5208
                ]
              }
            ],
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                "line": 125,
                "character": 29
              }
            ],
            "signatures": [
              {
                "id": 5214,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Renders a value, usually a lit-html TemplateResult, to the container."
                },
                "parameters": [
                  {
                    "id": 5215,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  },
                  {
                    "id": 5216,
                    "name": "container",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "HTMLElement",
                          "externalLocation": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                          }
                        },
                        {
                          "type": "reference",
                          "name": "DocumentFragment",
                          "externalLocation": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "id": 5217,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "shortText": "\n"
                    },
                    "type": {
                      "type": "reference",
                      "id": 5196,
                      "name": "RenderOptions",
                      "location": {
                        "page": "LitElement",
                        "anchor": "RenderOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5229,
                  "name": "RootPart",
                  "location": {
                    "page": "misc",
                    "anchor": "RootPart"
                  }
                }
              }
            ]
          }
        },
        "signatures": [
          {
            "id": 5214,
            "name": "render",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Renders a value, usually a lit-html TemplateResult, to the container."
            },
            "parameters": [
              {
                "id": 5215,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 5216,
                "name": "container",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "HTMLElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "DocumentFragment",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"
                      }
                    }
                  ]
                }
              },
              {
                "id": 5217,
                "name": "options",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "shortText": "\n"
                },
                "type": {
                  "type": "reference",
                  "id": 5196,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 5229,
              "name": "RootPart",
              "location": {
                "page": "misc",
                "anchor": "RootPart"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "render"
        }
      },
      {
        "id": 5190,
        "name": "svg",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Interprets a template literal as an SVG template that can efficiently\nrender to and update a container."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 320,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L320",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "signatures": [
          {
            "id": 5191,
            "name": "svg",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Interprets a template literal as an SVG template that can efficiently\nrender to and update a container."
            },
            "parameters": [
              {
                "id": 5192,
                "name": "strings",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 5193,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 5172,
              "typeArguments": [
                {
                  "type": "literal",
                  "value": 2
                }
              ],
              "name": "TemplateResult",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "svg"
        }
      },
      {
        "id": 5162,
        "name": "SanitizerFactory",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 87,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L87",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 5163,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "comment": {
              "shortText": "Used to sanitize any value before it is written into the DOM. This can be\nused to implement a security policy of allowed and disallowed values in\norder to prevent XSS attacks.",
              "text": "One way of using this callback would be to check attributes and properties\nagainst a list of high risk fields, and require that values written to such\nfields be instances of a class which is safe by construction. Closure's Safe\nHTML Types is one implementation of this technique (\nhttps://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\nThe TrustedTypes polyfill in API-only mode could also be used as a basis\nfor this technique (https://github.com/WICG/trusted-types).\n",
              "returns": "A function that will sanitize this class of writes.\n"
            },
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                "line": 29,
                "character": 39
              }
            ],
            "signatures": [
              {
                "id": 5164,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Used to sanitize any value before it is written into the DOM. This can be\nused to implement a security policy of allowed and disallowed values in\norder to prevent XSS attacks.",
                  "text": "One way of using this callback would be to check attributes and properties\nagainst a list of high risk fields, and require that values written to such\nfields be instances of a class which is safe by construction. Closure's Safe\nHTML Types is one implementation of this technique (\nhttps://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\nThe TrustedTypes polyfill in API-only mode could also be used as a basis\nfor this technique (https://github.com/WICG/trusted-types).\n",
                  "returns": "A function that will sanitize this class of writes.\n"
                },
                "parameters": [
                  {
                    "id": 5165,
                    "name": "node",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "shortText": "The HTML node (usually either a #text node or an Element) that\n    is being written to. Note that this is just an exemplar node, the write\n    may take place against another instance of the same class of node."
                    },
                    "type": {
                      "type": "reference",
                      "name": "Node"
                    }
                  },
                  {
                    "id": 5166,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "shortText": "The name of an attribute or property (for example, 'href')."
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 5167,
                    "name": "type",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "shortText": "Indicates whether the write that's about to be performed will\n    be to a property or a node."
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "property"
                        },
                        {
                          "type": "literal",
                          "value": "attribute"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5168,
                  "name": "ValueSanitizer",
                  "location": {
                    "page": "misc",
                    "anchor": "ValueSanitizer"
                  }
                }
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "SanitizerFactory"
        }
      },
      {
        "id": 5179,
        "name": "SVGTemplateResult",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 268,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L268",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "reference",
          "id": 5172,
          "typeArguments": [
            {
              "type": "query",
              "queryType": {
                "type": "reference",
                "name": "SVG_RESULT"
              }
            }
          ],
          "name": "TemplateResult",
          "location": {
            "page": "templates",
            "anchor": "TemplateResult"
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "SVGTemplateResult"
        }
      },
      {
        "id": 5172,
        "name": "TemplateResult",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "The return type of the template tag functions."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 259,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L259",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "typeParameter": [
          {
            "id": 5177,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "ResultType"
            },
            "default": {
              "type": "reference",
              "name": "ResultType"
            }
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 5173,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 5174,
                "name": "_$litType$",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                    "line": 50,
                    "character": 4
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "T"
                }
              },
              {
                "id": 5175,
                "name": "strings",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                    "line": 51,
                    "character": 4
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 5176,
                "name": "values",
                "kind": 1024,
                "kindString": "Property",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                    "line": 52,
                    "character": 4
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "kind": 1024,
                "children": [
                  5174,
                  5175,
                  5176
                ]
              }
            ],
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                "line": 49,
                "character": 72
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "TemplateResult"
        }
      }
    ]
  },
  {
    "slug": "styles",
    "title": "Styles",
    "versionLinks": {
      "v1": "api/lit-element/styles/"
    },
    "items": [
      {
        "id": 5155,
        "name": "adoptStyles",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Applies the given styles to a `shadowRoot`. When Shadow DOM is\navailable but `adoptedStyleSheets` is not, styles are appended to the\n`shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\nNote, when shimming is used, any styles that are subsequently placed into\nthe shadowRoot should be placed *before* any shimmed adopted styles. This\nwill match spec behavior that gives adopted sheets precedence over styles in\nshadowRoot."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 138,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L138",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "signatures": [
          {
            "id": 5156,
            "name": "adoptStyles",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Applies the given styles to a `shadowRoot`. When Shadow DOM is\navailable but `adoptedStyleSheets` is not, styles are appended to the\n`shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\nNote, when shimming is used, any styles that are subsequently placed into\nthe shadowRoot should be placed *before* any shimmed adopted styles. This\nwill match spec behavior that gives adopted sheets precedence over styles in\nshadowRoot."
            },
            "parameters": [
              {
                "id": 5157,
                "name": "renderRoot",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "ShadowRoot",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                  }
                }
              },
              {
                "id": 5158,
                "name": "styles",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 5136,
                    "name": "CSSResultOrNative",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultOrNative"
                    }
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "adoptStyles"
        }
      },
      {
        "id": 5151,
        "name": "css",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A template literal tag which can be used with LitElement's\n[`styles`](/docs/api/LitElement/#LitElement.styles) property to set element styles.",
          "text": "For security reasons, only literal string values and number may be used in\nembedded expressions. To incorporate non-literal values [`unsafeCSS`](/docs/api/styles/#unsafeCSS) may\nbe used inside an expression.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 115,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L115",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "signatures": [
          {
            "id": 5152,
            "name": "css",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A template literal tag which can be used with LitElement's\n[`styles`](/docs/api/LitElement/#LitElement.styles) property to set element styles.",
              "text": "For security reasons, only literal string values and number may be used in\nembedded expressions. To incorporate non-literal values [`unsafeCSS`](/docs/api/styles/#unsafeCSS) may\nbe used inside an expression.\n"
            },
            "parameters": [
              {
                "id": 5153,
                "name": "strings",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 5154,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      {
                        "type": "reference",
                        "id": 5138,
                        "name": "CSSResultGroup",
                        "location": {
                          "page": "styles",
                          "anchor": "CSSResultGroup"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 5139,
              "name": "CSSResult",
              "location": {
                "page": "styles",
                "anchor": "CSSResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "css"
        }
      },
      {
        "id": 5139,
        "name": "CSSResult",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "A container for a string of CSS text, that may be used to create a CSSStyleSheet.",
          "text": "CSSResult is the return value of `css`-tagged template literals and\n`unsafeCSS()`. In order to ensure that CSSResults are only created via the\n`css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n"
        },
        "children": [
          {
            "id": 5143,
            "name": "cssText",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/css-tag.ts",
                "line": 46,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L46",
                "moduleSpecifier": "reactive-element/css-tag.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "styles",
              "anchor": "CSSResult.cssText"
            }
          },
          {
            "id": 5144,
            "name": "styleSheet",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/css-tag.ts",
                "line": 59,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L59",
                "moduleSpecifier": "reactive-element/css-tag.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "name": "CSSStyleSheet",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet"
                  }
                }
              ]
            },
            "getSignature": [
              {
                "id": 5145,
                "name": "styleSheet",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "reference",
                      "name": "CSSStyleSheet",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet"
                      }
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "styles",
              "anchor": "CSSResult.styleSheet"
            }
          },
          {
            "id": 5146,
            "name": "toString",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/css-tag.ts",
                "line": 70,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L70",
                "moduleSpecifier": "reactive-element/css-tag.js"
              }
            ],
            "signatures": [
              {
                "id": 5147,
                "name": "toString",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "styles",
              "anchor": "CSSResult.toString"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              5140
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5142,
              5143
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              5144
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              5146
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 43,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L43",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResult"
        }
      },
      {
        "id": 5159,
        "name": "getCompatibleStyle",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 163,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L163",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "signatures": [
          {
            "id": 5160,
            "name": "getCompatibleStyle",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 5161,
                "name": "s",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 5136,
                  "name": "CSSResultOrNative",
                  "location": {
                    "page": "styles",
                    "anchor": "CSSResultOrNative"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 5136,
              "name": "CSSResultOrNative",
              "location": {
                "page": "styles",
                "anchor": "CSSResultOrNative"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "getCompatibleStyle"
        }
      },
      {
        "id": 5135,
        "name": "supportsAdoptingStyleSheets",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Whether the current browser supports `adoptedStyleSheets`."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 10,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L10",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "supportsAdoptingStyleSheets"
        }
      },
      {
        "id": 5148,
        "name": "unsafeCSS",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Wrap a value for interpolation in a [`css`](/docs/api/styles/#css) tagged template literal.",
          "text": "This is unsafe because untrusted CSS text can be used to phone home\nor exfiltrate data to an attacker controlled site. Take care to only use\nthis with trusted input.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 101,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L101",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "signatures": [
          {
            "id": 5149,
            "name": "unsafeCSS",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Wrap a value for interpolation in a [`css`](/docs/api/styles/#css) tagged template literal.",
              "text": "This is unsafe because untrusted CSS text can be used to phone home\nor exfiltrate data to an attacker controlled site. Take care to only use\nthis with trusted input.\n"
            },
            "parameters": [
              {
                "id": 5150,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 5139,
              "name": "CSSResult",
              "location": {
                "page": "styles",
                "anchor": "CSSResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "unsafeCSS"
        }
      },
      {
        "id": 5137,
        "name": "CSSResultArray",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 25,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L25",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "type": {
          "type": "array",
          "elementType": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "id": 5136,
                "name": "CSSResultOrNative",
                "location": {
                  "page": "styles",
                  "anchor": "CSSResultOrNative"
                }
              },
              {
                "type": "reference",
                "id": 5137,
                "name": "CSSResultArray",
                "location": {
                  "page": "styles",
                  "anchor": "CSSResultArray"
                }
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResultArray"
        }
      },
      {
        "id": 5138,
        "name": "CSSResultGroup",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "A single CSSResult, CSSStyleSheet, or an array or nested arrays of those."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 30,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L30",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "id": 5136,
              "name": "CSSResultOrNative",
              "location": {
                "page": "styles",
                "anchor": "CSSResultOrNative"
              }
            },
            {
              "type": "reference",
              "id": 5137,
              "name": "CSSResultArray",
              "location": {
                "page": "styles",
                "anchor": "CSSResultArray"
              }
            }
          ]
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResultGroup"
        }
      },
      {
        "id": 5136,
        "name": "CSSResultOrNative",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "A CSSResult or native CSSStyleSheet.",
          "text": "In browsers that support constructible CSS style sheets, CSSStyleSheet\nobject can be used for styling along side CSSResult from the `css`\ntemplate tag.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 23,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/css-tag.ts#L23",
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "id": 5139,
              "name": "CSSResult",
              "location": {
                "page": "styles",
                "anchor": "CSSResult"
              }
            },
            {
              "type": "reference",
              "name": "CSSStyleSheet",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet"
              }
            }
          ]
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResultOrNative"
        }
      }
    ]
  },
  {
    "slug": "decorators",
    "title": "Decorators",
    "versionLinks": {
      "v1": "api/lit-element/decorators/"
    },
    "items": [
      {
        "id": 2664,
        "name": "customElement",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Class decorator factory that defines the decorated class as a custom element.",
          "text": "```js\n@customElement('my-element')\nclass MyElement extends LitElement {\n  render() {\n    return html``;\n  }\n}\n```"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/custom-element.ts",
            "line": 60,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/custom-element.ts#L60",
            "moduleSpecifier": "reactive-element/decorators/custom-element.js"
          }
        ],
        "signatures": [
          {
            "id": 2665,
            "name": "customElement",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Class decorator factory that defines the decorated class as a custom element.",
              "text": "```js\n@customElement('my-element')\nclass MyElement extends LitElement {\n  render() {\n    return html``;\n  }\n}\n```"
            },
            "parameters": [
              {
                "id": 2666,
                "name": "tagName",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "The tag name of the custom element to define.\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2667,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 2668,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 2669,
                        "name": "classOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "CustomElementClass"
                            },
                            {
                              "type": "reference",
                              "name": "ClassDescriptor"
                            }
                          ]
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "customElement"
        }
      },
      {
        "id": 2690,
        "name": "eventOptions",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "Adds event listener options to a method used as an event listener in a\nlit-html template."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/event-options.ts",
            "line": 47,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/event-options.ts#L47",
            "moduleSpecifier": "reactive-element/decorators/event-options.js"
          }
        ],
        "signatures": [
          {
            "id": 2691,
            "name": "eventOptions",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Adds event listener options to a method used as an event listener in a\nlit-html template."
            },
            "parameters": [
              {
                "id": 2692,
                "name": "options",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "An object that specifies event listener options as accepted by\n`EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n\nCurrent browsers support the `capture`, `passive`, and `once` options. See:\nhttps://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n\n```ts\nclass MyElement {\n  clicked = false;\n\n  render() {\n    return html`\n      <div @click=${this._onClick}`>\n        <button></button>\n      </div>\n    `;\n  }\n\n  @eventOptions({capture: true})\n  _onClick(e) {\n    this.clicked = true;\n  }\n}\n```"
                },
                "type": {
                  "type": "reference",
                  "name": "AddEventListenerOptions"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2693,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/decorators/event-options.d.ts",
                    "line": 37,
                    "character": 72
                  }
                ],
                "signatures": [
                  {
                    "id": 2694,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Adds event listener options to a method used as an event listener in a\nlit-html template."
                    },
                    "parameters": [
                      {
                        "id": 2695,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "id": 4260,
                              "name": "ReactiveElement",
                              "location": {
                                "page": "ReactiveElement",
                                "anchor": "ReactiveElement"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2696,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "eventOptions"
        }
      },
      {
        "id": 2670,
        "name": "property",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "A property decorator which creates a reactive property that reflects a\ncorresponding attribute value. When a decorated property is set\nthe element will update and render. A [`PropertyDeclaration`](/docs/api/ReactiveElement/#PropertyDeclaration) may\noptionally be supplied to configure property features.",
          "text": "This decorator should only be used for public fields. As public fields,\nproperties should be considered as primarily settable by element users,\neither via attribute or the property itself.\n\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state` decorator.\n\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating public\nproperties should typically not be done for non-primitive (object or array)\nproperties. In other cases when an element needs to manage state, a private\nproperty decorated via the `state` decorator should be used. When needed,\nstate properties can be initialized via public properties to facilitate\ncomplex interactions.\n\n```ts\nclass MyElement {\n  @property({ type: Boolean })\n  clicked = false;\n}\n```",
          "tags": [
            {
              "tag": "exportdecorateditems",
              "text": "\n"
            }
          ]
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/property.ts",
            "line": 106,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/property.ts#L106",
            "moduleSpecifier": "reactive-element/decorators/property.js"
          }
        ],
        "signatures": [
          {
            "id": 2671,
            "name": "property",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A property decorator which creates a reactive property that reflects a\ncorresponding attribute value. When a decorated property is set\nthe element will update and render. A [`PropertyDeclaration`](/docs/api/ReactiveElement/#PropertyDeclaration) may\noptionally be supplied to configure property features.",
              "text": "This decorator should only be used for public fields. As public fields,\nproperties should be considered as primarily settable by element users,\neither via attribute or the property itself.\n\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state` decorator.\n\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating public\nproperties should typically not be done for non-primitive (object or array)\nproperties. In other cases when an element needs to manage state, a private\nproperty decorated via the `state` decorator should be used. When needed,\nstate properties can be initialized via public properties to facilitate\ncomplex interactions.\n\n```ts\nclass MyElement {\n  @property({ type: Boolean })\n  clicked = false;\n}\n```",
              "tags": [
                {
                  "tag": "exportdecorateditems",
                  "text": "\n"
                }
              ]
            },
            "parameters": [
              {
                "id": 2672,
                "name": "options",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "id": 4228,
                  "name": "PropertyDeclaration",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "PropertyDeclaration"
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2673,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/decorators/property.d.ts",
                    "line": 40,
                    "character": 65
                  }
                ],
                "signatures": [
                  {
                    "id": 2674,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "A property decorator which creates a reactive property that reflects a\ncorresponding attribute value. When a decorated property is set\nthe element will update and render. A [[`PropertyDeclaration`]] may\noptionally be supplied to configure property features.",
                      "text": "This decorator should only be used for public fields. As public fields,\nproperties should be considered as primarily settable by element users,\neither via attribute or the property itself.\n\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the [[`state`]] decorator.\n\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating public\nproperties should typically not be done for non-primitive (object or array)\nproperties. In other cases when an element needs to manage state, a private\nproperty decorated via the [[`state`]] decorator should be used. When needed,\nstate properties can be initialized via public properties to facilitate\ncomplex interactions.\n\n```ts\nclass MyElement {\n  @property({ type: Boolean })\n  clicked = false;\n}\n```"
                    },
                    "parameters": [
                      {
                        "id": 2675,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Object"
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2676,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "property"
        }
      },
      {
        "id": 2697,
        "name": "query",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter that\nexecutes a querySelector on the element's renderRoot."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/query.ts",
            "line": 42,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/query.ts#L42",
            "moduleSpecifier": "reactive-element/decorators/query.js"
          }
        ],
        "signatures": [
          {
            "id": 2698,
            "name": "query",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A property decorator that converts a class property into a getter that\nexecutes a querySelector on the element's renderRoot."
            },
            "parameters": [
              {
                "id": 2699,
                "name": "selector",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "A DOMString containing one or more selectors to match."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 2700,
                "name": "cache",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "An optional boolean which when true performs the DOM query only\n    once and caches the result.\n\nSee: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n\n```ts\nclass MyElement {\n  @query('#first')\n  first;\n\n  render() {\n    return html`\n      <div id=\"first\"></div>\n      <div id=\"second\"></div>\n    `;\n  }\n}\n```"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2701,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/decorators/query.d.ts",
                    "line": 32,
                    "character": 66
                  }
                ],
                "signatures": [
                  {
                    "id": 2702,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "A property decorator that converts a class property into a getter that\nexecutes a querySelector on the element's renderRoot."
                    },
                    "parameters": [
                      {
                        "id": 2703,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "id": 4260,
                              "name": "ReactiveElement",
                              "location": {
                                "page": "ReactiveElement",
                                "anchor": "ReactiveElement"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2704,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "query"
        }
      },
      {
        "id": 2705,
        "name": "queryAll",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter\nthat executes a querySelectorAll on the element's renderRoot."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/query-all.ts",
            "line": 41,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/query-all.ts#L41",
            "moduleSpecifier": "reactive-element/decorators/query-all.js"
          }
        ],
        "signatures": [
          {
            "id": 2706,
            "name": "queryAll",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A property decorator that converts a class property into a getter\nthat executes a querySelectorAll on the element's renderRoot."
            },
            "parameters": [
              {
                "id": 2707,
                "name": "selector",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "A DOMString containing one or more selectors to match.\n\nSee:\nhttps://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n\n```ts\nclass MyElement {\n  @queryAll('div')\n  divs;\n\n  render() {\n    return html`\n      <div id=\"first\"></div>\n      <div id=\"second\"></div>\n    `;\n  }\n}\n```"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2708,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/decorators/query-all.d.ts",
                    "line": 31,
                    "character": 52
                  }
                ],
                "signatures": [
                  {
                    "id": 2709,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "A property decorator that converts a class property into a getter\nthat executes a querySelectorAll on the element's renderRoot."
                    },
                    "parameters": [
                      {
                        "id": 2710,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "id": 4260,
                              "name": "ReactiveElement",
                              "location": {
                                "page": "ReactiveElement",
                                "anchor": "ReactiveElement"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2711,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "queryAll"
        }
      },
      {
        "id": 2719,
        "name": "queryAssignedNodes",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter that\nreturns the `assignedNodes` of the given named `slot`. Note, the type of\nthis property should be annotated as `NodeListOf<HTMLElement>`."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/query-assigned-nodes.ts",
            "line": 43,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/query-assigned-nodes.ts#L43",
            "moduleSpecifier": "reactive-element/decorators/query-assigned-nodes.js"
          }
        ],
        "signatures": [
          {
            "id": 2720,
            "name": "queryAssignedNodes",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A property decorator that converts a class property into a getter that\nreturns the `assignedNodes` of the given named `slot`. Note, the type of\nthis property should be annotated as `NodeListOf<HTMLElement>`."
            },
            "parameters": [
              {
                "id": 2721,
                "name": "slotName",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "A string name of the slot."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 2722,
                "name": "flatten",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "A boolean which when true flattens the assigned nodes,\n    meaning any assigned nodes that are slot elements are replaced with their\n    assigned nodes."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              },
              {
                "id": 2723,
                "name": "selector",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "A string which filters the results to elements that match\n    the given css selector.\n\n```ts\nclass MyElement {\n  @queryAssignedNodes('list', true, '.item')\n  listItems;\n\n  render() {\n    return html`\n      <slot name=\"list\"></slot>\n    `;\n  }\n}\n```"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2724,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/decorators/query-assigned-nodes.d.ts",
                    "line": 33,
                    "character": 101
                  }
                ],
                "signatures": [
                  {
                    "id": 2725,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "A property decorator that converts a class property into a getter that\nreturns the `assignedNodes` of the given named `slot`. Note, the type of\nthis property should be annotated as `NodeListOf<HTMLElement>`."
                    },
                    "parameters": [
                      {
                        "id": 2726,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "id": 4260,
                              "name": "ReactiveElement",
                              "location": {
                                "page": "ReactiveElement",
                                "anchor": "ReactiveElement"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2727,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "queryAssignedNodes"
        }
      },
      {
        "id": 2712,
        "name": "queryAsync",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter that\nreturns a promise that resolves to the result of a querySelector on the\nelement's renderRoot done after the element's `updateComplete` promise\nresolves. When the queried property may change with element state, this\ndecorator can be used instead of requiring users to await the\n`updateComplete` before accessing the property."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/query-async.ts",
            "line": 54,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/query-async.ts#L54",
            "moduleSpecifier": "reactive-element/decorators/query-async.js"
          }
        ],
        "signatures": [
          {
            "id": 2713,
            "name": "queryAsync",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A property decorator that converts a class property into a getter that\nreturns a promise that resolves to the result of a querySelector on the\nelement's renderRoot done after the element's `updateComplete` promise\nresolves. When the queried property may change with element state, this\ndecorator can be used instead of requiring users to await the\n`updateComplete` before accessing the property."
            },
            "parameters": [
              {
                "id": 2714,
                "name": "selector",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "A DOMString containing one or more selectors to match.\n\nSee: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n\n```ts\nclass MyElement {\n  @queryAsync('#first')\n  first;\n\n  render() {\n    return html`\n      <div id=\"first\"></div>\n      <div id=\"second\"></div>\n    `;\n  }\n}\n\n// external usage\nasync doSomethingWithFirst() {\n (await aMyElement.first).doSomething();\n}\n```"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2715,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/decorators/query-async.d.ts",
                    "line": 39,
                    "character": 54
                  }
                ],
                "signatures": [
                  {
                    "id": 2716,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "A property decorator that converts a class property into a getter that\nreturns a promise that resolves to the result of a querySelector on the\nelement's renderRoot done after the element's `updateComplete` promise\nresolves. When the queried property may change with element state, this\ndecorator can be used instead of requiring users to await the\n`updateComplete` before accessing the property."
                    },
                    "parameters": [
                      {
                        "id": 2717,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "id": 4260,
                              "name": "ReactiveElement",
                              "location": {
                                "page": "ReactiveElement",
                                "anchor": "ReactiveElement"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2718,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "queryAsync"
        }
      },
      {
        "id": 2677,
        "name": "state",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "Declares a private or protected reactive property that still triggers\nupdates to the element when it changes. It does not reflect from the\ncorresponding attribute.",
          "text": "Properties declared this way must not be used from HTML or HTML templating\nsystems, they're solely for properties internal to the element. These\nproperties may be renamed by optimization tools like closure compiler."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/state.ts",
            "line": 35,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/state.ts#L35",
            "moduleSpecifier": "reactive-element/decorators/state.js"
          }
        ],
        "signatures": [
          {
            "id": 2678,
            "name": "state",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Declares a private or protected reactive property that still triggers\nupdates to the element when it changes. It does not reflect from the\ncorresponding attribute.",
              "text": "Properties declared this way must not be used from HTML or HTML templating\nsystems, they're solely for properties internal to the element. These\nproperties may be renamed by optimization tools like closure compiler."
            },
            "parameters": [
              {
                "id": 2679,
                "name": "options",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "id": 2684,
                  "name": "InternalPropertyDeclaration",
                  "location": {
                    "page": "decorators",
                    "anchor": "InternalPropertyDeclaration"
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2680,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/decorators/state.d.ts",
                    "line": 24,
                    "character": 70
                  }
                ],
                "signatures": [
                  {
                    "id": 2681,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Declares a private or protected reactive property that still triggers\nupdates to the element when it changes. It does not reflect from the\ncorresponding attribute.",
                      "text": "Properties declared this way must not be used from HTML or HTML templating\nsystems, they're solely for properties internal to the element. These\nproperties may be renamed by optimization tools like closure compiler."
                    },
                    "parameters": [
                      {
                        "id": 2682,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Object"
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2683,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "state"
        }
      },
      {
        "id": 2684,
        "name": "InternalPropertyDeclaration",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "tags": [
            {
              "tag": "license",
              "text": "\nCopyright 2017 Google LLC\nSPDX-License-Identifier: BSD-3-Clause\n"
            }
          ]
        },
        "children": [
          {
            "id": 2685,
            "name": "hasChanged",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "A function that indicates if a property should be considered changed when\nit is set. The function should take the `newValue` and `oldValue` and\nreturn `true` if an update should be requested."
            },
            "children": [],
            "signatures": [
              {
                "id": 2686,
                "name": "hasChanged",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "A function that indicates if a property should be considered changed when\nit is set. The function should take the `newValue` and `oldValue` and\nreturn `true` if an update should be requested."
                },
                "parameters": [
                  {
                    "id": 2687,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    }
                  },
                  {
                    "id": 2688,
                    "name": "oldValue",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/decorators.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
                "moduleSpecifier": "lit/decorators.js"
              }
            ],
            "location": {
              "page": "decorators",
              "anchor": "InternalPropertyDeclaration.hasChanged"
            }
          }
        ],
        "groups": [
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              2685
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/state.ts",
            "line": 16,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/decorators/state.ts#L16",
            "moduleSpecifier": "reactive-element/decorators/state.js"
          }
        ],
        "typeParameter": [
          {
            "id": 2689,
            "name": "Type",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/decorators.ts#L7",
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "InternalPropertyDeclaration"
        }
      }
    ]
  },
  {
    "slug": "directives",
    "title": "Directives",
    "versionLinks": {
      "v1": "api/lit-html/directives/"
    },
    "items": [
      {
        "id": 2728,
        "name": "asyncAppend",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A directive that renders the items of an async iterable[1], appending new\nvalues after previous values, similar to the built-in support for iterables.\nThis directive is usable only in child expressions.",
          "text": "Async iterables are objects with a [Symbol.asyncIterator] method, which\nreturns an iterator who's `next()` method returns a Promise. When a new\nvalue is available, the Promise resolves and the value is appended to the\nPart controlled by the directive. If another value other than this\ndirective has been set on the Part, the iterable will no longer be listened\nto and new values won't be written to the Part.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/async-append.ts",
            "line": 69,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-append.ts#L69",
            "moduleSpecifier": "lit-html/directives/async-append.js"
          }
        ],
        "signatures": [
          {
            "id": 2729,
            "name": "asyncAppend",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that renders the items of an async iterable[1], appending new\nvalues after previous values, similar to the built-in support for iterables.\nThis directive is usable only in child expressions.",
              "text": "Async iterables are objects with a [Symbol.asyncIterator] method, which\nreturns an iterator who's `next()` method returns a Promise. When a new\nvalue is available, the Promise resolves and the value is appended to the\nPart controlled by the directive. If another value other than this\ndirective has been set on the Part, the iterable will no longer be listened\nto and new values won't be written to the Part.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n"
            },
            "parameters": [
              {
                "id": 2730,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "An async iterable"
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "AsyncIterable"
                }
              },
              {
                "id": 2731,
                "name": "_mapper",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 2732,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 2733,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 2734,
                            "name": "v",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          },
                          {
                            "id": 2735,
                            "name": "index",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                              "isOptional": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 3238,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 2736,
                    "name": "AsyncAppendDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "AsyncAppendDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/async-append.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
            "moduleSpecifier": "lit/directives/async-append.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "asyncAppend"
        }
      },
      {
        "id": 2736,
        "name": "AsyncAppendDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 2737,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/async-append.d.ts",
                "line": 11,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 2738,
                "name": "new AsyncAppendDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2739,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2736,
                  "name": "AsyncAppendDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "AsyncAppendDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 2771,
                  "name": "AsyncReplaceDirective.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 2770,
              "name": "AsyncReplaceDirective.constructor",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.constructor"
            }
          },
          {
            "id": 2758,
            "name": "isConnected",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {
              "shortText": "The connection state for this Directive."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 304,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L304",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 2793,
              "name": "AsyncReplaceDirective.isConnected",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.isConnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.isConnected"
            }
          },
          {
            "id": 2745,
            "name": "commitValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-append.ts",
                "line": 39,
                "character": 21,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-append.ts#L39",
                "moduleSpecifier": "lit-html/directives/async-append.js"
              }
            ],
            "signatures": [
              {
                "id": 2746,
                "name": "commitValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2747,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  },
                  {
                    "id": 2748,
                    "name": "index",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 2786,
                  "name": "AsyncReplaceDirective.commitValue"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 2785,
              "name": "AsyncReplaceDirective.commitValue",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.commitValue"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.commitValue"
            }
          },
          {
            "id": 2754,
            "name": "disconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 84,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L84",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 2755,
                "name": "disconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 2790,
                  "name": "AsyncReplaceDirective.disconnected"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 2789,
              "name": "AsyncReplaceDirective.disconnected",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.disconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.disconnected"
            }
          },
          {
            "id": 2756,
            "name": "reconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 89,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L89",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 2757,
                "name": "reconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 2792,
                  "name": "AsyncReplaceDirective.reconnected"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 2791,
              "name": "AsyncReplaceDirective.reconnected",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.reconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.reconnected"
            }
          },
          {
            "id": 2749,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 21,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L21",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 2750,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "typeParameter": [
                  {
                    "id": 2751,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {}
                  }
                ],
                "parameters": [
                  {
                    "id": 2752,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "AsyncIterable"
                    }
                  },
                  {
                    "id": 2753,
                    "name": "_mapper",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "Mapper"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "symbol"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 2777,
                  "name": "AsyncReplaceDirective.render"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 2776,
              "name": "AsyncReplaceDirective.render",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.render"
            }
          },
          {
            "id": 2764,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
              "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 364,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L364",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "id": 2765,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
                  "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
                },
                "parameters": [
                  {
                    "id": 2766,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The value to set\n"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 2800,
                  "name": "AsyncReplaceDirective.setValue"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 2799,
              "name": "AsyncReplaceDirective.setValue",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.setValue"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.setValue"
            }
          },
          {
            "id": 2741,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-append.ts",
                "line": 33,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-append.ts#L33",
                "moduleSpecifier": "lit-html/directives/async-append.js"
              }
            ],
            "signatures": [
              {
                "id": 2742,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2743,
                    "name": "part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3149,
                      "name": "ChildPart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ChildPart"
                      }
                    }
                  },
                  {
                    "id": 2744,
                    "name": "params",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "value",
                          "isOptional": false,
                          "element": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "AsyncIterable"
                          }
                        },
                        {
                          "type": "named-tuple-member",
                          "name": "_mapper",
                          "isOptional": true,
                          "element": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Mapper"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 5194,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 2782,
                  "name": "AsyncReplaceDirective.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 2781,
              "name": "AsyncReplaceDirective.update",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              2737
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2740,
              2758
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              2767
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              2759,
              2745,
              2754,
              2756,
              2749,
              2764,
              2741
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/async-append.ts",
            "line": 21,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-append.ts#L21",
            "moduleSpecifier": "lit-html/directives/async-append.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 2769,
            "name": "AsyncReplaceDirective",
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/async-append.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-append.ts#L7",
            "moduleSpecifier": "lit/directives/async-append.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 2769,
            "name": "AsyncReplaceDirective",
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective"
            }
          },
          {
            "type": "reference",
            "id": 2638,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          },
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 2804,
        "name": "asyncReplace",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A directive that renders the items of an async iterable[1], replacing\nprevious values with new values, so that only one value is ever rendered\nat a time. This directive may be used in any expression type.",
          "text": "Async iterables are objects with a `[Symbol.asyncIterator]` method, which\nreturns an iterator who's `next()` method returns a Promise. When a new\nvalue is available, the Promise resolves and the value is rendered to the\nPart controlled by the directive. If another value other than this\ndirective has been set on the Part, the iterable will no longer be listened\nto and new values won't be written to the Part.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/async-replace.ts",
            "line": 113,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L113",
            "moduleSpecifier": "lit-html/directives/async-replace.js"
          }
        ],
        "signatures": [
          {
            "id": 2805,
            "name": "asyncReplace",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that renders the items of an async iterable[1], replacing\nprevious values with new values, so that only one value is ever rendered\nat a time. This directive may be used in any expression type.",
              "text": "Async iterables are objects with a `[Symbol.asyncIterator]` method, which\nreturns an iterator who's `next()` method returns a Promise. When a new\nvalue is available, the Promise resolves and the value is rendered to the\nPart controlled by the directive. If another value other than this\ndirective has been set on the Part, the iterable will no longer be listened\nto and new values won't be written to the Part.\n\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n"
            },
            "parameters": [
              {
                "id": 2806,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "An async iterable"
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "AsyncIterable"
                }
              },
              {
                "id": 2807,
                "name": "_mapper",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "Mapper"
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 3238,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 2769,
                    "name": "AsyncReplaceDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "AsyncReplaceDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/async-replace.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
            "moduleSpecifier": "lit/directives/async-replace.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "asyncReplace"
        }
      },
      {
        "id": 2769,
        "name": "AsyncReplaceDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 2770,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 2771,
                "name": "new AsyncReplaceDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2772,
                    "name": "_partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2769,
                  "name": "AsyncReplaceDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "AsyncReplaceDirective"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 2640,
                  "name": "AsyncDirective.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 2639,
              "name": "AsyncDirective.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.constructor"
            }
          },
          {
            "id": 2793,
            "name": "isConnected",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {
              "shortText": "The connection state for this Directive."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 304,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L304",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 2642,
              "name": "AsyncDirective.isConnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.isConnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.isConnected"
            }
          },
          {
            "id": 2785,
            "name": "commitValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 80,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L80",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 2786,
                "name": "commitValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2787,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  },
                  {
                    "id": 2788,
                    "name": "_index",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.commitValue"
            }
          },
          {
            "id": 2789,
            "name": "disconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 84,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L84",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 2790,
                "name": "disconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 2652,
                  "name": "AsyncDirective.disconnected"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 2651,
              "name": "AsyncDirective.disconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.disconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.disconnected"
            }
          },
          {
            "id": 2791,
            "name": "reconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 89,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L89",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 2792,
                "name": "reconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 2654,
                  "name": "AsyncDirective.reconnected"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 2653,
              "name": "AsyncDirective.reconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.reconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.reconnected"
            }
          },
          {
            "id": 2776,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 21,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L21",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 2777,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "typeParameter": [
                  {
                    "id": 2778,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {}
                  }
                ],
                "parameters": [
                  {
                    "id": 2779,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "AsyncIterable"
                    }
                  },
                  {
                    "id": 2780,
                    "name": "_mapper",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "Mapper"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "symbol"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 2658,
                  "name": "AsyncDirective.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 2657,
              "name": "AsyncDirective.render",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.render"
            }
          },
          {
            "id": 2799,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
              "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 364,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L364",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "id": 2800,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
                  "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
                },
                "parameters": [
                  {
                    "id": 2801,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The value to set\n"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 2649,
                  "name": "AsyncDirective.setValue"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 2648,
              "name": "AsyncDirective.setValue",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.setValue"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.setValue"
            }
          },
          {
            "id": 2781,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 25,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L25",
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "id": 2782,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2783,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3149,
                      "name": "ChildPart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ChildPart"
                      }
                    }
                  },
                  {
                    "id": 2784,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "value",
                          "isOptional": false,
                          "element": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "AsyncIterable"
                          }
                        },
                        {
                          "type": "named-tuple-member",
                          "name": "_mapper",
                          "isOptional": true,
                          "element": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Mapper"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 5194,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 2661,
                  "name": "AsyncDirective.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 2660,
              "name": "AsyncDirective.update",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              2770
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2775,
              2773,
              2774,
              2793
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              2802
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              2794,
              2785,
              2789,
              2791,
              2776,
              2799,
              2781
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/async-replace.ts",
            "line": 14,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/async-replace.ts#L14",
            "moduleSpecifier": "lit-html/directives/async-replace.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 2638,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 2736,
            "name": "AsyncAppendDirective",
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/async-replace.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/async-replace.ts#L7",
            "moduleSpecifier": "lit/directives/async-replace.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 2638,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          },
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 2808,
        "name": "cache",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Enables fast switching between multiple templates by caching the DOM nodes\nand TemplateInstances produced by the templates.",
          "text": "Example:\n\n```js\nlet checked = false;\n\nhtml`\n  ${cache(checked ? html`input is checked` : html`input is not checked`)}\n`\n```\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/cache.ts",
            "line": 104,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/cache.ts#L104",
            "moduleSpecifier": "lit-html/directives/cache.js"
          }
        ],
        "signatures": [
          {
            "id": 2809,
            "name": "cache",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Enables fast switching between multiple templates by caching the DOM nodes\nand TemplateInstances produced by the templates.",
              "text": "Example:\n\n```js\nlet checked = false;\n\nhtml`\n  ${cache(checked ? html`input is checked` : html`input is not checked`)}\n`\n```\n"
            },
            "parameters": [
              {
                "id": 2810,
                "name": "v",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 3238,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 2811,
                    "name": "CacheDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "CacheDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/cache.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/cache.ts#L7",
            "moduleSpecifier": "lit/directives/cache.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "cache"
        }
      },
      {
        "id": 2811,
        "name": "CacheDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 2812,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/cache.d.ts",
                "line": 11,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 2813,
                "name": "new CacheDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2814,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2811,
                  "name": "CacheDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "CacheDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3262,
                  "name": "Directive.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3261,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/cache.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/cache.ts#L7",
                "moduleSpecifier": "lit/directives/cache.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "CacheDirective.constructor"
            }
          },
          {
            "id": 2817,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/cache.ts",
                "line": 36,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/cache.ts#L36",
                "moduleSpecifier": "lit-html/directives/cache.js"
              }
            ],
            "signatures": [
              {
                "id": 2818,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2819,
                    "name": "v",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3267,
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3266,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/cache.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/cache.ts#L7",
                "moduleSpecifier": "lit/directives/cache.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "CacheDirective.render"
            }
          },
          {
            "id": 2820,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/cache.ts",
                "line": 42,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/cache.ts#L42",
                "moduleSpecifier": "lit-html/directives/cache.js"
              }
            ],
            "signatures": [
              {
                "id": 2821,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2822,
                    "name": "containerPart",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3149,
                      "name": "ChildPart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ChildPart"
                      }
                    }
                  },
                  {
                    "id": 2823,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "v",
                          "isOptional": false,
                          "element": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3270,
                  "name": "Directive.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3269,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/cache.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/cache.ts#L7",
                "moduleSpecifier": "lit/directives/cache.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "CacheDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              2812
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2815,
              2816
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              2824
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              2817,
              2820
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/cache.ts",
            "line": 28,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/cache.ts#L28",
            "moduleSpecifier": "lit-html/directives/cache.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/cache.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/cache.ts#L7",
            "moduleSpecifier": "lit/directives/cache.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 2829,
        "name": "classMap",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A directive that applies dynamic CSS classes.",
          "text": "This must be used in the `class` attribute and must be the only part used in\nthe attribute. It takes each property in the `classInfo` argument and adds\nthe property name to the element's `classList` if the property value is\ntruthy; if the property value is falsey, the property name is removed from\nthe element's `class`.\n\nFor example `{foo: bar}` applies the class `foo` if the value of `bar` is\ntruthy.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/class-map.ts",
            "line": 124,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/class-map.ts#L124",
            "moduleSpecifier": "lit-html/directives/class-map.js"
          }
        ],
        "signatures": [
          {
            "id": 2830,
            "name": "classMap",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that applies dynamic CSS classes.",
              "text": "This must be used in the `class` attribute and must be the only part used in\nthe attribute. It takes each property in the `classInfo` argument and adds\nthe property name to the element's `classList` if the property value is\ntruthy; if the property value is falsey, the property name is removed from\nthe element's `class`.\n\nFor example `{foo: bar}` applies the class `foo` if the value of `bar` is\ntruthy.\n"
            },
            "parameters": [
              {
                "id": 2831,
                "name": "classInfo",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "\n"
                },
                "type": {
                  "type": "reference",
                  "id": 2826,
                  "name": "ClassInfo",
                  "location": {
                    "page": "directives",
                    "anchor": "ClassInfo"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 3238,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 2832,
                    "name": "ClassMapDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "ClassMapDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/class-map.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/class-map.ts#L7",
            "moduleSpecifier": "lit/directives/class-map.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "classMap"
        }
      },
      {
        "id": 2832,
        "name": "ClassMapDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 2833,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/class-map.d.ts",
                "line": 21,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 2834,
                "name": "new ClassMapDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2835,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2832,
                  "name": "ClassMapDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "ClassMapDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3262,
                  "name": "Directive.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3261,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/class-map.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/class-map.ts#L7",
                "moduleSpecifier": "lit/directives/class-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "ClassMapDirective.constructor"
            }
          },
          {
            "id": 2838,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/class-map.ts",
                "line": 45,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/class-map.ts#L45",
                "moduleSpecifier": "lit-html/directives/class-map.js"
              }
            ],
            "signatures": [
              {
                "id": 2839,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2840,
                    "name": "classInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 2826,
                      "name": "ClassInfo",
                      "location": {
                        "page": "directives",
                        "anchor": "ClassInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3267,
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3266,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/class-map.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/class-map.ts#L7",
                "moduleSpecifier": "lit/directives/class-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "ClassMapDirective.render"
            }
          },
          {
            "id": 2841,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/class-map.ts",
                "line": 56,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/class-map.ts#L56",
                "moduleSpecifier": "lit-html/directives/class-map.js"
              }
            ],
            "signatures": [
              {
                "id": 2842,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2843,
                    "name": "part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3113,
                      "name": "AttributePart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "AttributePart"
                      }
                    }
                  },
                  {
                    "id": 2844,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "classInfo",
                          "isOptional": false,
                          "element": {
                            "type": "reference",
                            "id": 2826,
                            "name": "ClassInfo",
                            "location": {
                              "page": "directives",
                              "anchor": "ClassInfo"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 5194,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3270,
                  "name": "Directive.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3269,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/class-map.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/class-map.ts#L7",
                "moduleSpecifier": "lit/directives/class-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "ClassMapDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              2833
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2836,
              2837
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              2845
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              2838,
              2841
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/class-map.ts",
            "line": 23,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/class-map.ts#L23",
            "moduleSpecifier": "lit-html/directives/class-map.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/class-map.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/class-map.ts#L7",
            "moduleSpecifier": "lit/directives/class-map.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 2826,
        "name": "ClassInfo",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "A key-value set of class names to truthy values."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/class-map.ts",
            "line": 19,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/class-map.ts#L19",
            "moduleSpecifier": "lit-html/directives/class-map.js"
          }
        ],
        "indexSignature": {
          "id": 2827,
          "name": "__index",
          "kind": 8192,
          "kindString": "Index signature",
          "flags": {},
          "parameters": [
            {
              "id": 2828,
              "name": "name",
              "kind": 32768,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/class-map.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/class-map.ts#L7",
            "moduleSpecifier": "lit/directives/class-map.js"
          }
        ]
      },
      {
        "id": 2847,
        "name": "guard",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Prevents re-render of a template function until a single value or an array of\nvalues changes.",
          "text": "Values are checked against previous values with strict equality (`===`), and\nso the check won't detect nested property changes inside objects or arrays.\nArrays values have each item checked against the previous value at the same\nindex with strict equality. Nested arrays are also checked only by strict\nequality.\n\nExample:\n\n```js\nhtml`\n  <div>\n    ${guard([user.id, company.id], () => html`...`)}\n  </div>\n`\n```\n\nIn this case, the template only rerenders if either `user.id` or `company.id`\nchanges.\n\nguard() is useful with immutable data patterns, by preventing expensive work\nuntil data updates.\n\nExample:\n\n```js\nhtml`\n  <div>\n    ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n  </div>\n`\n```\n\nIn this case, items are mapped over only when the array reference changes.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/guard.ts",
            "line": 84,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/guard.ts#L84",
            "moduleSpecifier": "lit-html/directives/guard.js"
          }
        ],
        "signatures": [
          {
            "id": 2848,
            "name": "guard",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Prevents re-render of a template function until a single value or an array of\nvalues changes.",
              "text": "Values are checked against previous values with strict equality (`===`), and\nso the check won't detect nested property changes inside objects or arrays.\nArrays values have each item checked against the previous value at the same\nindex with strict equality. Nested arrays are also checked only by strict\nequality.\n\nExample:\n\n```js\nhtml`\n  <div>\n    ${guard([user.id, company.id], () => html`...`)}\n  </div>\n`\n```\n\nIn this case, the template only rerenders if either `user.id` or `company.id`\nchanges.\n\nguard() is useful with immutable data patterns, by preventing expensive work\nuntil data updates.\n\nExample:\n\n```js\nhtml`\n  <div>\n    ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n  </div>\n`\n```\n\nIn this case, items are mapped over only when the array reference changes.\n"
            },
            "parameters": [
              {
                "id": 2849,
                "name": "_value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 2850,
                "name": "f",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "the template function\n"
                },
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 2851,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 2852,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 3238,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 2853,
                    "name": "GuardDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "GuardDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/guard.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/guard.ts#L7",
            "moduleSpecifier": "lit/directives/guard.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "guard"
        }
      },
      {
        "id": 2853,
        "name": "GuardDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 2854,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 2855,
                "name": "new GuardDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2856,
                    "name": "_partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2853,
                  "name": "GuardDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "GuardDirective"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 3262,
                  "name": "Directive.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3261,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/guard.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/guard.ts#L7",
                "moduleSpecifier": "lit/directives/guard.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "GuardDirective.constructor"
            }
          },
          {
            "id": 2858,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/guard.ts",
                "line": 16,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/guard.ts#L16",
                "moduleSpecifier": "lit-html/directives/guard.js"
              }
            ],
            "signatures": [
              {
                "id": 2859,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2860,
                    "name": "_value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  },
                  {
                    "id": 2861,
                    "name": "f",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "id": 2862,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 2863,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3267,
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3266,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/guard.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/guard.ts#L7",
                "moduleSpecifier": "lit/directives/guard.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "GuardDirective.render"
            }
          },
          {
            "id": 2864,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/guard.ts",
                "line": 20,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/guard.ts#L20",
                "moduleSpecifier": "lit-html/directives/guard.js"
              }
            ],
            "signatures": [
              {
                "id": 2865,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2866,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3213,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  },
                  {
                    "id": 2867,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "_value",
                          "isOptional": false,
                          "element": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        },
                        {
                          "type": "named-tuple-member",
                          "name": "f",
                          "isOptional": false,
                          "element": {
                            "type": "reflection",
                            "declaration": {
                              "id": 2868,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 2869,
                                  "name": "__type",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "unknown"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3270,
                  "name": "Directive.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3269,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/guard.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/guard.ts#L7",
                "moduleSpecifier": "lit/directives/guard.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "GuardDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              2854
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2857
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              2870
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              2858,
              2864
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/guard.ts",
            "line": 13,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/guard.ts#L13",
            "moduleSpecifier": "lit-html/directives/guard.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/guard.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/guard.ts#L7",
            "moduleSpecifier": "lit/directives/guard.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 2872,
        "name": "ifDefined",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "For AttributeParts, sets the attribute if the value is defined and removes\nthe attribute if the value is undefined.",
          "text": "For other part types, this directive is a no-op.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/if-defined.ts",
            "line": 15,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/if-defined.ts#L15",
            "moduleSpecifier": "lit-html/directives/if-defined.js"
          }
        ],
        "signatures": [
          {
            "id": 2873,
            "name": "ifDefined",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "For AttributeParts, sets the attribute if the value is defined and removes\nthe attribute if the value is undefined.",
              "text": "For other part types, this directive is a no-op.\n"
            },
            "typeParameter": [
              {
                "id": 2874,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 2875,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "T"
                }
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 5195,
                    "name": "nothing",
                    "location": {
                      "page": "templates",
                      "anchor": "nothing"
                    }
                  }
                },
                {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "NonNullable"
                }
              ]
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/if-defined.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/if-defined.ts#L7",
            "moduleSpecifier": "lit/directives/if-defined.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "ifDefined"
        }
      },
      {
        "id": 2876,
        "name": "live",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Checks binding values against live DOM values, instead of previously bound\nvalues, when determining whether to update the value.",
          "text": "This is useful for cases where the DOM value may change from outside of\nlit-html, such as with a binding to an `<input>` element's `value` property,\na content editable elements text, or to a custom element that changes it's\nown properties or attributes.\n\nIn these cases if the DOM value changes, but the value set through lit-html\nbindings hasn't, lit-html won't know to update the DOM value and will leave\nit alone. If this is not what you want--if you want to overwrite the DOM\nvalue with the bound value no matter what--use the `live()` directive:\n\n```js\nhtml`<input .value=${live(x)}>`\n```\n\n`live()` performs a strict equality check agains the live DOM value, and if\nthe new value is equal to the live value, does nothing. This means that\n`live()` should not be used when the binding will cause a type conversion. If\nyou use `live()` with an attribute binding, make sure that only strings are\npassed in, or the binding will update every render.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/live.ts",
            "line": 92,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/live.ts#L92",
            "moduleSpecifier": "lit-html/directives/live.js"
          }
        ],
        "signatures": [
          {
            "id": 2877,
            "name": "live",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Checks binding values against live DOM values, instead of previously bound\nvalues, when determining whether to update the value.",
              "text": "This is useful for cases where the DOM value may change from outside of\nlit-html, such as with a binding to an `<input>` element's `value` property,\na content editable elements text, or to a custom element that changes it's\nown properties or attributes.\n\nIn these cases if the DOM value changes, but the value set through lit-html\nbindings hasn't, lit-html won't know to update the DOM value and will leave\nit alone. If this is not what you want--if you want to overwrite the DOM\nvalue with the bound value no matter what--use the `live()` directive:\n\n```js\nhtml`<input .value=${live(x)}>`\n```\n\n`live()` performs a strict equality check agains the live DOM value, and if\nthe new value is equal to the live value, does nothing. This means that\n`live()` should not be used when the binding will cause a type conversion. If\nyou use `live()` with an attribute binding, make sure that only strings are\npassed in, or the binding will update every render.\n"
            },
            "parameters": [
              {
                "id": 2878,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 3238,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 2879,
                    "name": "LiveDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "LiveDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/live.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/live.ts#L7",
            "moduleSpecifier": "lit/directives/live.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "live"
        }
      },
      {
        "id": 2879,
        "name": "LiveDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 2880,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/live.d.ts",
                "line": 9,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 2881,
                "name": "new LiveDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2882,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2879,
                  "name": "LiveDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "LiveDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3262,
                  "name": "Directive.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3261,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/live.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/live.ts#L7",
                "moduleSpecifier": "lit/directives/live.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "LiveDirective.constructor"
            }
          },
          {
            "id": 2883,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/live.ts",
                "line": 36,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/live.ts#L36",
                "moduleSpecifier": "lit-html/directives/live.js"
              }
            ],
            "signatures": [
              {
                "id": 2884,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2885,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3267,
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3266,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/live.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/live.ts#L7",
                "moduleSpecifier": "lit/directives/live.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "LiveDirective.render"
            }
          },
          {
            "id": 2886,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/live.ts",
                "line": 40,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/live.ts#L40",
                "moduleSpecifier": "lit-html/directives/live.js"
              }
            ],
            "signatures": [
              {
                "id": 2887,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2888,
                    "name": "part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3113,
                      "name": "AttributePart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "AttributePart"
                      }
                    }
                  },
                  {
                    "id": 2889,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "value",
                          "isOptional": false,
                          "element": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3270,
                  "name": "Directive.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3269,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/live.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/live.ts#L7",
                "moduleSpecifier": "lit/directives/live.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "LiveDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              2880
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              2890
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              2883,
              2886
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/live.ts",
            "line": 17,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/live.ts#L17",
            "moduleSpecifier": "lit-html/directives/live.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/live.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/live.ts#L7",
            "moduleSpecifier": "lit/directives/live.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 2892,
        "name": "createRef",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Creates a new Ref object, which is container for a reference to an element."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/ref.ts",
            "line": 12,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L12",
            "moduleSpecifier": "lit-html/directives/ref.js"
          }
        ],
        "signatures": [
          {
            "id": 2893,
            "name": "createRef",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Creates a new Ref object, which is container for a reference to an element."
            },
            "typeParameter": [
              {
                "id": 2894,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {},
                "default": {
                  "type": "reference",
                  "name": "Element",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 2895,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "T"
                }
              ],
              "name": "Ref",
              "location": {
                "page": "directives",
                "anchor": "Ref"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/ref.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
            "moduleSpecifier": "lit/directives/ref.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "createRef"
        }
      },
      {
        "id": 2905,
        "name": "ref",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Sets the value of a Ref object or calls a ref callback with the element it's\nbound to.",
          "text": "A Ref object acts as a container for a reference to an element. A ref\ncallback is a function that takes an element as its only argument.\n\nThe ref directive sets the value of the Ref object or calls the ref callback\nduring rendering, if the referenced element changed.\n\nNote: If a ref callback is rendered to a different element position or is\nremoved in a subsequent render, it will first be called with `undefined`,\nfollowed by another call with the new element it was rendered to (if any).\n\n```js\n// Using Ref object\nconst inputRef = createRef();\nrender(html`<input ${ref(inputRef)}>`, container);\ninputRef.value.focus();\n\n// Using callback\nconst callback = (inputElement) => inputElement.focus();\nrender(html`<input ${ref(callback)}>`, container);\n```\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/ref.ts",
            "line": 134,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L134",
            "moduleSpecifier": "lit-html/directives/ref.js"
          }
        ],
        "signatures": [
          {
            "id": 2906,
            "name": "ref",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Sets the value of a Ref object or calls a ref callback with the element it's\nbound to.",
              "text": "A Ref object acts as a container for a reference to an element. A ref\ncallback is a function that takes an element as its only argument.\n\nThe ref directive sets the value of the Ref object or calls the ref callback\nduring rendering, if the referenced element changed.\n\nNote: If a ref callback is rendered to a different element position or is\nremoved in a subsequent render, it will first be called with `undefined`,\nfollowed by another call with the new element it was rendered to (if any).\n\n```js\n// Using Ref object\nconst inputRef = createRef();\nrender(html`<input ${ref(inputRef)}>`, container);\ninputRef.value.focus();\n\n// Using callback\nconst callback = (inputElement) => inputElement.focus();\nrender(html`<input ${ref(callback)}>`, container);\n```\n"
            },
            "parameters": [
              {
                "id": 2907,
                "name": "_ref",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 2901,
                  "name": "RefOrCallback",
                  "location": {
                    "page": "directives",
                    "anchor": "RefOrCallback"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 3238,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 2908,
                    "name": "RefDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "RefDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/ref.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
            "moduleSpecifier": "lit/directives/ref.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "ref"
        }
      },
      {
        "id": 2895,
        "name": "Ref",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "An object that holds a ref value."
        },
        "children": [
          {
            "id": 2896,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 2897,
                "name": "new Ref",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "typeParameter": [
                  {
                    "id": 2898,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {},
                    "default": {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2895,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Ref",
                  "location": {
                    "page": "directives",
                    "anchor": "Ref"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "Ref.constructor"
            }
          },
          {
            "id": 2899,
            "name": "value",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "The current Element value of the ref, or else `undefined` if the ref is no\nlonger rendered."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/ref.ts",
                "line": 22,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L22",
                "moduleSpecifier": "lit-html/directives/ref.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "T"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "Ref.value"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              2896
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2899
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/ref.ts",
            "line": 17,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L17",
            "moduleSpecifier": "lit-html/directives/ref.js"
          }
        ],
        "typeParameter": [
          {
            "id": 2900,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "reference",
              "name": "Element",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/ref.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
            "moduleSpecifier": "lit/directives/ref.js"
          }
        ]
      },
      {
        "id": 2908,
        "name": "RefDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 2909,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 2910,
                "name": "new RefDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2911,
                    "name": "_partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2908,
                  "name": "RefDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "RefDirective"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 2640,
                  "name": "AsyncDirective.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 2639,
              "name": "AsyncDirective.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.constructor"
            }
          },
          {
            "id": 2929,
            "name": "isConnected",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {
              "shortText": "The connection state for this Directive."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 304,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L304",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 2642,
              "name": "AsyncDirective.isConnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.isConnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.isConnected"
            }
          },
          {
            "id": 2925,
            "name": "disconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/ref.ts",
                "line": 92,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L92",
                "moduleSpecifier": "lit-html/directives/ref.js"
              }
            ],
            "signatures": [
              {
                "id": 2926,
                "name": "disconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 2652,
                  "name": "AsyncDirective.disconnected"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 2651,
              "name": "AsyncDirective.disconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.disconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.disconnected"
            }
          },
          {
            "id": 2927,
            "name": "reconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/ref.ts",
                "line": 102,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L102",
                "moduleSpecifier": "lit-html/directives/ref.js"
              }
            ],
            "signatures": [
              {
                "id": 2928,
                "name": "reconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 2654,
                  "name": "AsyncDirective.reconnected"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 2653,
              "name": "AsyncDirective.reconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.reconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.reconnected"
            }
          },
          {
            "id": 2915,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/ref.ts",
                "line": 44,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L44",
                "moduleSpecifier": "lit-html/directives/ref.js"
              }
            ],
            "signatures": [
              {
                "id": 2916,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2917,
                    "name": "_ref",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 2901,
                      "name": "RefOrCallback",
                      "location": {
                        "page": "directives",
                        "anchor": "RefOrCallback"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "symbol"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 2658,
                  "name": "AsyncDirective.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 2657,
              "name": "AsyncDirective.render",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.render"
            }
          },
          {
            "id": 2935,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
              "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 364,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L364",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "id": 2936,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
                  "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
                },
                "parameters": [
                  {
                    "id": 2937,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The value to set\n"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 2649,
                  "name": "AsyncDirective.setValue"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 2648,
              "name": "AsyncDirective.setValue",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.setValue"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.setValue"
            }
          },
          {
            "id": 2918,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/ref.ts",
                "line": 48,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L48",
                "moduleSpecifier": "lit-html/directives/ref.js"
              }
            ],
            "signatures": [
              {
                "id": 2919,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2920,
                    "name": "part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3177,
                      "name": "ElementPart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ElementPart"
                      }
                    }
                  },
                  {
                    "id": 2921,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "_ref",
                          "isOptional": false,
                          "element": {
                            "type": "reference",
                            "id": 2901,
                            "name": "RefOrCallback",
                            "location": {
                              "page": "directives",
                              "anchor": "RefOrCallback"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "symbol"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 2661,
                  "name": "AsyncDirective.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 2660,
              "name": "AsyncDirective.update",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              2909
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2914,
              2912,
              2913,
              2922,
              2929
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              2938,
              2923
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              2930,
              2925,
              2927,
              2915,
              2935,
              2918
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/ref.ts",
            "line": 39,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L39",
            "moduleSpecifier": "lit-html/directives/ref.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 2638,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/ref.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
            "moduleSpecifier": "lit/directives/ref.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 2638,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          },
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 2901,
        "name": "RefOrCallback",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/ref.ts",
            "line": 37,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/ref.ts#L37",
            "moduleSpecifier": "lit-html/directives/ref.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "id": 2895,
              "name": "Ref",
              "location": {
                "page": "directives",
                "anchor": "Ref"
              }
            },
            {
              "type": "reflection",
              "declaration": {
                "id": 2902,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directives/ref.d.ts",
                    "line": 23,
                    "character": 43
                  }
                ],
                "signatures": [
                  {
                    "id": 2903,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 2904,
                        "name": "el",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Element",
                              "externalLocation": {
                                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                              }
                            },
                            {
                              "type": "intrinsic",
                              "name": "undefined"
                            }
                          ]
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            }
          ]
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/ref.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/ref.ts#L7",
            "moduleSpecifier": "lit/directives/ref.js"
          }
        ]
      },
      {
        "id": 2967,
        "name": "repeat",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A directive that repeats a series of values (usually `TemplateResults`)\ngenerated from an iterable, and updates those items efficiently when the\niterable changes based on user-provided `keys` associated with each item.",
          "text": "Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\nmeaning previous DOM for a given key is moved into the new position if\nneeded, and DOM will never be reused with values for different keys (new DOM\nwill always be created for new keys). This is generally the most efficient\nway to use `repeat` since it performs minimum unnecessary work for insertions\nand removals.\n\nThe `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n\n```js\nhtml`\n  <ol>\n    ${repeat(this.items, (item) => item.id, (item, index) => {\n      return html`<li>${index}: ${item.name}</li>`;\n    })}\n  </ol>\n`\n```\n\n**Important**: If providing a `keyFn`, keys *must* be unique for all items in a\ngiven call to `repeat`. The behavior when two or more items have the same key\nis undefined.\n\nIf no `keyFn` is provided, this directive will perform similar to mapping\nitems to values, and DOM will be reused against potentially different items.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/repeat.ts",
            "line": 481,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/repeat.ts#L481",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "signatures": [
          {
            "id": 2968,
            "name": "repeat",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that repeats a series of values (usually `TemplateResults`)\ngenerated from an iterable, and updates those items efficiently when the\niterable changes based on user-provided `keys` associated with each item.",
              "text": "Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\nmeaning previous DOM for a given key is moved into the new position if\nneeded, and DOM will never be reused with values for different keys (new DOM\nwill always be created for new keys). This is generally the most efficient\nway to use `repeat` since it performs minimum unnecessary work for insertions\nand removals.\n\nThe `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n\n```js\nhtml`\n  <ol>\n    ${repeat(this.items, (item) => item.id, (item, index) => {\n      return html`<li>${index}: ${item.name}</li>`;\n    })}\n  </ol>\n`\n```\n\n**Important**: If providing a `keyFn`, keys *must* be unique for all items in a\ngiven call to `repeat`. The behavior when two or more items have the same key\nis undefined.\n\nIf no `keyFn` is provided, this directive will perform similar to mapping\nitems to values, and DOM will be reused against potentially different items.\n"
            },
            "typeParameter": [
              {
                "id": 2969,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 2970,
                "name": "items",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable"
                }
              },
              {
                "id": 2971,
                "name": "keyFnOrTemplate",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "id": 2940,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "KeyFn",
                      "location": {
                        "page": "directives",
                        "anchor": "KeyFn"
                      }
                    },
                    {
                      "type": "reference",
                      "id": 2946,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate"
                      }
                    }
                  ]
                }
              },
              {
                "id": 2972,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "id": 2946,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          },
          {
            "id": 2973,
            "name": "repeat",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that repeats a series of values (usually `TemplateResults`)\ngenerated from an iterable, and updates those items efficiently when the\niterable changes based on user-provided `keys` associated with each item.",
              "text": "Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\nmeaning previous DOM for a given key is moved into the new position if\nneeded, and DOM will never be reused with values for different keys (new DOM\nwill always be created for new keys). This is generally the most efficient\nway to use `repeat` since it performs minimum unnecessary work for insertions\nand removals.\n\nThe `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n\n```js\nhtml`\n  <ol>\n    ${repeat(this.items, (item) => item.id, (item, index) => {\n      return html`<li>${index}: ${item.name}</li>`;\n    })}\n  </ol>\n`\n```\n\n**Important**: If providing a `keyFn`, keys *must* be unique for all items in a\ngiven call to `repeat`. The behavior when two or more items have the same key\nis undefined.\n\nIf no `keyFn` is provided, this directive will perform similar to mapping\nitems to values, and DOM will be reused against potentially different items.\n"
            },
            "typeParameter": [
              {
                "id": 2974,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 2975,
                "name": "items",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable"
                }
              },
              {
                "id": 2976,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 2946,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          },
          {
            "id": 2977,
            "name": "repeat",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that repeats a series of values (usually `TemplateResults`)\ngenerated from an iterable, and updates those items efficiently when the\niterable changes based on user-provided `keys` associated with each item.",
              "text": "Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\nmeaning previous DOM for a given key is moved into the new position if\nneeded, and DOM will never be reused with values for different keys (new DOM\nwill always be created for new keys). This is generally the most efficient\nway to use `repeat` since it performs minimum unnecessary work for insertions\nand removals.\n\nThe `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n\n```js\nhtml`\n  <ol>\n    ${repeat(this.items, (item) => item.id, (item, index) => {\n      return html`<li>${index}: ${item.name}</li>`;\n    })}\n  </ol>\n`\n```\n\n**Important**: If providing a `keyFn`, keys *must* be unique for all items in a\ngiven call to `repeat`. The behavior when two or more items have the same key\nis undefined.\n\nIf no `keyFn` is provided, this directive will perform similar to mapping\nitems to values, and DOM will be reused against potentially different items.\n"
            },
            "typeParameter": [
              {
                "id": 2978,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 2979,
                "name": "items",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable"
                }
              },
              {
                "id": 2980,
                "name": "keyFn",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "id": 2940,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "KeyFn",
                      "location": {
                        "page": "directives",
                        "anchor": "KeyFn"
                      }
                    },
                    {
                      "type": "reference",
                      "id": 2946,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate"
                      }
                    }
                  ]
                }
              },
              {
                "id": 2981,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 2946,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/repeat.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
            "moduleSpecifier": "lit/directives/repeat.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "repeat"
        }
      },
      {
        "id": 2982,
        "name": "RepeatDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 2983,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/repeat.d.ts",
                "line": 12,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 2984,
                "name": "new RepeatDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2985,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2982,
                  "name": "RepeatDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "RepeatDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3262,
                  "name": "Directive.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3261,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/repeat.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
                "moduleSpecifier": "lit/directives/repeat.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RepeatDirective.constructor"
            }
          },
          {
            "id": 2988,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/repeat.ts",
                "line": 66,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/repeat.ts#L66",
                "moduleSpecifier": "lit-html/directives/repeat.js"
              }
            ],
            "signatures": [
              {
                "id": 2989,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "typeParameter": [
                  {
                    "id": 2990,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {}
                  }
                ],
                "parameters": [
                  {
                    "id": 2991,
                    "name": "items",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "Iterable"
                    }
                  },
                  {
                    "id": 2992,
                    "name": "template",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 2946,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3267,
                  "name": "Directive.render"
                }
              },
              {
                "id": 2993,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "typeParameter": [
                  {
                    "id": 2994,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {}
                  }
                ],
                "parameters": [
                  {
                    "id": 2995,
                    "name": "items",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "Iterable"
                    }
                  },
                  {
                    "id": 2996,
                    "name": "keyFn",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "id": 2940,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "T"
                            }
                          ],
                          "name": "KeyFn",
                          "location": {
                            "page": "directives",
                            "anchor": "KeyFn"
                          }
                        },
                        {
                          "type": "reference",
                          "id": 2946,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "T"
                            }
                          ],
                          "name": "ItemTemplate",
                          "location": {
                            "page": "directives",
                            "anchor": "ItemTemplate"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "id": 2997,
                    "name": "template",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 2946,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3266,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/repeat.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
                "moduleSpecifier": "lit/directives/repeat.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RepeatDirective.render"
            }
          },
          {
            "id": 2998,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/repeat.ts",
                "line": 80,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/repeat.ts#L80",
                "moduleSpecifier": "lit-html/directives/repeat.js"
              }
            ],
            "signatures": [
              {
                "id": 2999,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "typeParameter": [
                  {
                    "id": 3000,
                    "name": "T",
                    "kind": 131072,
                    "kindString": "Type parameter",
                    "flags": {}
                  }
                ],
                "parameters": [
                  {
                    "id": 3001,
                    "name": "containerPart",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3149,
                      "name": "ChildPart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ChildPart"
                      }
                    }
                  },
                  {
                    "id": 3002,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "T"
                            }
                          ],
                          "name": "Iterable"
                        },
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "id": 2940,
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "T"
                                }
                              ],
                              "name": "KeyFn",
                              "location": {
                                "page": "directives",
                                "anchor": "KeyFn"
                              }
                            },
                            {
                              "type": "reference",
                              "id": 2946,
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "T"
                                }
                              ],
                              "name": "ItemTemplate",
                              "location": {
                                "page": "directives",
                                "anchor": "ItemTemplate"
                              }
                            }
                          ]
                        },
                        {
                          "type": "reference",
                          "id": 2946,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "T"
                            }
                          ],
                          "name": "ItemTemplate",
                          "location": {
                            "page": "directives",
                            "anchor": "ItemTemplate"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 5194,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3270,
                  "name": "Directive.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3269,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/repeat.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
                "moduleSpecifier": "lit/directives/repeat.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RepeatDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              2983
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2987,
              2986
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              3003
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              2988,
              2998
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/repeat.ts",
            "line": 31,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/repeat.ts#L31",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/repeat.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
            "moduleSpecifier": "lit/directives/repeat.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 2946,
        "name": "ItemTemplate",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/repeat.ts",
            "line": 18,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/repeat.ts#L18",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "typeParameter": [
          {
            "id": 2951,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 2947,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directives/repeat.d.ts",
                "line": 9,
                "character": 38
              }
            ],
            "signatures": [
              {
                "id": 2948,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2949,
                    "name": "item",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "T"
                    }
                  },
                  {
                    "id": 2950,
                    "name": "index",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/repeat.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
            "moduleSpecifier": "lit/directives/repeat.js"
          }
        ]
      },
      {
        "id": 2940,
        "name": "KeyFn",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/repeat.ts",
            "line": 17,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/repeat.ts#L17",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "typeParameter": [
          {
            "id": 2945,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 2941,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directives/repeat.d.ts",
                "line": 8,
                "character": 31
              }
            ],
            "signatures": [
              {
                "id": 2942,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2943,
                    "name": "item",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "T"
                    }
                  },
                  {
                    "id": 2944,
                    "name": "index",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/repeat.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
            "moduleSpecifier": "lit/directives/repeat.js"
          }
        ]
      },
      {
        "id": 2952,
        "name": "RepeatDirectiveFn",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/repeat.ts",
            "line": 436,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/repeat.ts#L436",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "signatures": [
          {
            "id": 2953,
            "name": "RepeatDirectiveFn",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "typeParameter": [
              {
                "id": 2954,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 2955,
                "name": "items",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable"
                }
              },
              {
                "id": 2956,
                "name": "keyFnOrTemplate",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "id": 2940,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "KeyFn",
                      "location": {
                        "page": "directives",
                        "anchor": "KeyFn"
                      }
                    },
                    {
                      "type": "reference",
                      "id": 2946,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate"
                      }
                    }
                  ]
                }
              },
              {
                "id": 2957,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "id": 2946,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          },
          {
            "id": 2958,
            "name": "RepeatDirectiveFn",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "typeParameter": [
              {
                "id": 2959,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 2960,
                "name": "items",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable"
                }
              },
              {
                "id": 2961,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 2946,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          },
          {
            "id": 2962,
            "name": "RepeatDirectiveFn",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "typeParameter": [
              {
                "id": 2963,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 2964,
                "name": "items",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable"
                }
              },
              {
                "id": 2965,
                "name": "keyFn",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "id": 2940,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "KeyFn",
                      "location": {
                        "page": "directives",
                        "anchor": "KeyFn"
                      }
                    },
                    {
                      "type": "reference",
                      "id": 2946,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate"
                      }
                    }
                  ]
                }
              },
              {
                "id": 2966,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 2946,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/repeat.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/repeat.ts#L7",
            "moduleSpecifier": "lit/directives/repeat.js"
          }
        ]
      },
      {
        "id": 3008,
        "name": "styleMap",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A directive that applies CSS properties to an element.",
          "text": "`styleMap` can only be used in the `style` attribute and must be the only\nexpression in the attribute. It takes the property names in the `styleInfo`\nobject and adds the property values as CSS properties. Property names with\ndashes (`-`) are assumed to be valid CSS property names and set on the\nelement's style object using `setProperty()`. Names without dashes are\nassumed to be camelCased JavaScript property names and set on the element's\nstyle object using property assignment, allowing the style object to\ntranslate JavaScript-style names to CSS property names.\n\nFor example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n'0'})` sets the `background-color`, `border-top` and `--size` properties.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/style-map.ts",
            "line": 127,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/style-map.ts#L127",
            "moduleSpecifier": "lit-html/directives/style-map.js"
          }
        ],
        "signatures": [
          {
            "id": 3009,
            "name": "styleMap",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that applies CSS properties to an element.",
              "text": "`styleMap` can only be used in the `style` attribute and must be the only\nexpression in the attribute. It takes the property names in the `styleInfo`\nobject and adds the property values as CSS properties. Property names with\ndashes (`-`) are assumed to be valid CSS property names and set on the\nelement's style object using `setProperty()`. Names without dashes are\nassumed to be camelCased JavaScript property names and set on the element's\nstyle object using property assignment, allowing the style object to\ntranslate JavaScript-style names to CSS property names.\n\nFor example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n'0'})` sets the `background-color`, `border-top` and `--size` properties.\n"
            },
            "parameters": [
              {
                "id": 3010,
                "name": "styleInfo",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "\n"
                },
                "type": {
                  "type": "reference",
                  "id": 3005,
                  "name": "StyleInfo",
                  "location": {
                    "page": "directives",
                    "anchor": "StyleInfo"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 3238,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 3011,
                    "name": "StyleMapDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "StyleMapDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/style-map.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/style-map.ts#L7",
            "moduleSpecifier": "lit/directives/style-map.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "styleMap"
        }
      },
      {
        "id": 3011,
        "name": "StyleMapDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 3012,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/style-map.d.ts",
                "line": 20,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 3013,
                "name": "new StyleMapDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3014,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 3011,
                  "name": "StyleMapDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "StyleMapDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3262,
                  "name": "Directive.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3261,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/style-map.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/style-map.ts#L7",
                "moduleSpecifier": "lit/directives/style-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "StyleMapDirective.constructor"
            }
          },
          {
            "id": 3016,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/style-map.ts",
                "line": 44,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/style-map.ts#L44",
                "moduleSpecifier": "lit-html/directives/style-map.js"
              }
            ],
            "signatures": [
              {
                "id": 3017,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3018,
                    "name": "styleInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3005,
                      "name": "StyleInfo",
                      "location": {
                        "page": "directives",
                        "anchor": "StyleInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3267,
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3266,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/style-map.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/style-map.ts#L7",
                "moduleSpecifier": "lit/directives/style-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "StyleMapDirective.render"
            }
          },
          {
            "id": 3019,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/style-map.ts",
                "line": 64,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/style-map.ts#L64",
                "moduleSpecifier": "lit-html/directives/style-map.js"
              }
            ],
            "signatures": [
              {
                "id": 3020,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3021,
                    "name": "part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3113,
                      "name": "AttributePart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "AttributePart"
                      }
                    }
                  },
                  {
                    "id": 3022,
                    "name": "__namedParameters",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "named-tuple-member",
                          "name": "styleInfo",
                          "isOptional": false,
                          "element": {
                            "type": "reference",
                            "id": 3005,
                            "name": "StyleInfo",
                            "location": {
                              "page": "directives",
                              "anchor": "StyleInfo"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 5194,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3270,
                  "name": "Directive.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3269,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/style-map.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/style-map.ts#L7",
                "moduleSpecifier": "lit/directives/style-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "StyleMapDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              3012
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              3015
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              3023
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              3016,
              3019
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/style-map.ts",
            "line": 27,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/style-map.ts#L27",
            "moduleSpecifier": "lit-html/directives/style-map.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/style-map.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/style-map.ts#L7",
            "moduleSpecifier": "lit/directives/style-map.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 3005,
        "name": "StyleInfo",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "A key-value set of CSS properties and values.",
          "text": "The key should be either a valid CSS property name string, like\n`'background-color'`, or a valid JavaScript camel case property name\nfor CSSStyleDeclaration like `backgroundColor`.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/style-map.ts",
            "line": 23,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/style-map.ts#L23",
            "moduleSpecifier": "lit-html/directives/style-map.js"
          }
        ],
        "indexSignature": {
          "id": 3006,
          "name": "__index",
          "kind": 8192,
          "kindString": "Index signature",
          "flags": {},
          "parameters": [
            {
              "id": 3007,
              "name": "name",
              "kind": 32768,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "literal",
                "value": null
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/style-map.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/style-map.ts#L7",
            "moduleSpecifier": "lit/directives/style-map.js"
          }
        ]
      },
      {
        "id": 3025,
        "name": "templateContent",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Renders the content of a template element as HTML.",
          "text": "Note, the template should be developer controlled and not user controlled.\nRendering a user-controlled template with this directive\ncould lead to cross-site-scripting vulnerabilities.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/template-content.ts",
            "line": 36,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/template-content.ts#L36",
            "moduleSpecifier": "lit-html/directives/template-content.js"
          }
        ],
        "signatures": [
          {
            "id": 3026,
            "name": "templateContent",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Renders the content of a template element as HTML.",
              "text": "Note, the template should be developer controlled and not user controlled.\nRendering a user-controlled template with this directive\ncould lead to cross-site-scripting vulnerabilities.\n"
            },
            "parameters": [
              {
                "id": 3027,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "HTMLTemplateElement",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 3238,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 3028,
                    "name": "TemplateContentDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "TemplateContentDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/template-content.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/template-content.ts#L7",
            "moduleSpecifier": "lit/directives/template-content.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "templateContent"
        }
      },
      {
        "id": 3028,
        "name": "TemplateContentDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 3029,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/template-content.d.ts",
                "line": 10,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 3030,
                "name": "new TemplateContentDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3031,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 3028,
                  "name": "TemplateContentDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "TemplateContentDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3262,
                  "name": "Directive.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3261,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/template-content.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/template-content.ts#L7",
                "moduleSpecifier": "lit/directives/template-content.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "TemplateContentDirective.constructor"
            }
          },
          {
            "id": 3033,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/template-content.ts",
                "line": 20,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/template-content.ts#L20",
                "moduleSpecifier": "lit-html/directives/template-content.js"
              }
            ],
            "signatures": [
              {
                "id": 3034,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3035,
                    "name": "template",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "HTMLTemplateElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 5194,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    },
                    {
                      "type": "reference",
                      "name": "DocumentFragment",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3267,
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3266,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/template-content.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/template-content.ts#L7",
                "moduleSpecifier": "lit/directives/template-content.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "TemplateContentDirective.render"
            }
          },
          {
            "id": 3038,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 139,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L139",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "id": 3039,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3040,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3213,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  },
                  {
                    "id": 3041,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 3270,
                  "name": "Directive.update"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3269,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/template-content.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/template-content.ts#L7",
                "moduleSpecifier": "lit/directives/template-content.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "TemplateContentDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              3029
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              3032
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              3036
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              3033,
              3038
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/template-content.ts",
            "line": 10,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/template-content.ts#L10",
            "moduleSpecifier": "lit-html/directives/template-content.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/template-content.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/template-content.ts#L7",
            "moduleSpecifier": "lit/directives/template-content.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 3059,
        "name": "unsafeHTML",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Renders the result as HTML, rather than text.",
          "text": "The values `undefined`, `null`, and `nothing`, will all result in no content\n(empty string) being rendered.\n\nNote, this is unsafe to use with any user-provided input that hasn't been\nsanitized or escaped, as it may lead to cross-site-scripting\nvulnerabilities.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
            "line": 76,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-html.ts#L76",
            "moduleSpecifier": "lit-html/directives/unsafe-html.js"
          }
        ],
        "signatures": [
          {
            "id": 3060,
            "name": "unsafeHTML",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Renders the result as HTML, rather than text.",
              "text": "The values `undefined`, `null`, and `nothing`, will all result in no content\n(empty string) being rendered.\n\nNote, this is unsafe to use with any user-provided input that hasn't been\nsanitized or escaped, as it may lead to cross-site-scripting\nvulnerabilities.\n"
            },
            "parameters": [
              {
                "id": 3061,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 5194,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 5195,
                        "name": "nothing",
                        "location": {
                          "page": "templates",
                          "anchor": "nothing"
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 3238,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 3042,
                    "name": "UnsafeHTMLDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "UnsafeHTMLDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/unsafe-html.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-html.ts#L7",
            "moduleSpecifier": "lit/directives/unsafe-html.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "unsafeHTML"
        }
      },
      {
        "id": 3042,
        "name": "UnsafeHTMLDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 3045,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directives/unsafe-html.d.ts",
                "line": 13,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 3046,
                "name": "new UnsafeHTMLDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3047,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 3042,
                  "name": "UnsafeHTMLDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "UnsafeHTMLDirective"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3262,
                  "name": "Directive.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3261,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-html.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-html.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-html.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective.constructor"
            }
          },
          {
            "id": 3043,
            "name": "directiveName",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
                "line": 13,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-html.ts#L13",
                "moduleSpecifier": "lit-html/directives/unsafe-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-html.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-html.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-html.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective.directiveName"
            }
          },
          {
            "id": 3044,
            "name": "resultType",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
                "line": 14,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-html.ts#L14",
                "moduleSpecifier": "lit-html/directives/unsafe-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-html.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-html.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-html.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective.resultType"
            }
          },
          {
            "id": 3050,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
                "line": 30,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-html.ts#L30",
                "moduleSpecifier": "lit-html/directives/unsafe-html.js"
              }
            ],
            "signatures": [
              {
                "id": 3051,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3052,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "query",
                          "queryType": {
                            "type": "reference",
                            "id": 5194,
                            "name": "noChange",
                            "location": {
                              "page": "custom-directives",
                              "anchor": "noChange"
                            }
                          }
                        },
                        {
                          "type": "query",
                          "queryType": {
                            "type": "reference",
                            "id": 5195,
                            "name": "nothing",
                            "location": {
                              "page": "templates",
                              "anchor": "nothing"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 5194,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 5195,
                        "name": "nothing",
                        "location": {
                          "page": "templates",
                          "anchor": "nothing"
                        }
                      }
                    },
                    {
                      "type": "reference",
                      "id": 5172,
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": 1
                            },
                            {
                              "type": "literal",
                              "value": 2
                            }
                          ]
                        }
                      ],
                      "name": "TemplateResult",
                      "location": {
                        "page": "templates",
                        "anchor": "TemplateResult"
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3267,
                  "name": "Directive.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3266,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-html.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-html.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-html.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective.render"
            }
          },
          {
            "id": 3055,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 139,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L139",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "id": 3056,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3057,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3213,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  },
                  {
                    "id": 3058,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 3270,
                  "name": "Directive.update"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3269,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-html.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-html.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-html.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              3045
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              3049,
              3048,
              3043,
              3044
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              3053
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              3050,
              3055
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
            "line": 12,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-html.ts#L12",
            "moduleSpecifier": "lit-html/directives/unsafe-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 3065,
            "name": "UnsafeSVGDirective",
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/unsafe-html.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-html.ts#L7",
            "moduleSpecifier": "lit/directives/unsafe-html.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 3062,
        "name": "unsafeSVG",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Renders the result as SVG, rather than text.",
          "text": "The values `undefined`, `null`, and `nothing`, will all result in no content\n(empty string) being rendered.\n\nNote, this is unsafe to use with any user-provided input that hasn't been\nsanitized or escaped, as it may lead to cross-site-scripting\nvulnerabilities.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/unsafe-svg.ts",
            "line": 27,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-svg.ts#L27",
            "moduleSpecifier": "lit-html/directives/unsafe-svg.js"
          }
        ],
        "signatures": [
          {
            "id": 3063,
            "name": "unsafeSVG",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Renders the result as SVG, rather than text.",
              "text": "The values `undefined`, `null`, and `nothing`, will all result in no content\n(empty string) being rendered.\n\nNote, this is unsafe to use with any user-provided input that hasn't been\nsanitized or escaped, as it may lead to cross-site-scripting\nvulnerabilities.\n"
            },
            "parameters": [
              {
                "id": 3064,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 5194,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 5195,
                        "name": "nothing",
                        "location": {
                          "page": "templates",
                          "anchor": "nothing"
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 3238,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 3065,
                    "name": "UnsafeSVGDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "UnsafeSVGDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/unsafe-svg.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-svg.ts#L7",
            "moduleSpecifier": "lit/directives/unsafe-svg.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "unsafeSVG"
        }
      },
      {
        "id": 3065,
        "name": "UnsafeSVGDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The type of the class that powers this directive. Necessary for naming the\ndirective's return type."
        },
        "children": [
          {
            "id": 3068,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 3069,
                "name": "new UnsafeSVGDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3070,
                    "name": "partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 3065,
                  "name": "UnsafeSVGDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "UnsafeSVGDirective"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 3046,
                  "name": "UnsafeHTMLDirective.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3045,
              "name": "UnsafeHTMLDirective.constructor",
              "location": {
                "page": "directives",
                "anchor": "UnsafeHTMLDirective.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-svg.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-svg.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-svg.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective.constructor"
            }
          },
          {
            "id": 3066,
            "name": "directiveName",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-svg.ts",
                "line": 13,
                "character": 18,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-svg.ts#L13",
                "moduleSpecifier": "lit-html/directives/unsafe-svg.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "overwrites": {
              "type": "reference",
              "id": 3043,
              "name": "UnsafeHTMLDirective.directiveName",
              "location": {
                "page": "directives",
                "anchor": "UnsafeHTMLDirective.directiveName"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-svg.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-svg.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-svg.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective.directiveName"
            }
          },
          {
            "id": 3067,
            "name": "resultType",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-svg.ts",
                "line": 14,
                "character": 18,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-svg.ts#L14",
                "moduleSpecifier": "lit-html/directives/unsafe-svg.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "overwrites": {
              "type": "reference",
              "id": 3044,
              "name": "UnsafeHTMLDirective.resultType",
              "location": {
                "page": "directives",
                "anchor": "UnsafeHTMLDirective.resultType"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-svg.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-svg.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-svg.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective.resultType"
            }
          },
          {
            "id": 3071,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
                "line": 30,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-html.ts#L30",
                "moduleSpecifier": "lit-html/directives/unsafe-html.js"
              }
            ],
            "signatures": [
              {
                "id": 3072,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3073,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "query",
                          "queryType": {
                            "type": "reference",
                            "id": 5194,
                            "name": "noChange",
                            "location": {
                              "page": "custom-directives",
                              "anchor": "noChange"
                            }
                          }
                        },
                        {
                          "type": "query",
                          "queryType": {
                            "type": "reference",
                            "id": 5195,
                            "name": "nothing",
                            "location": {
                              "page": "templates",
                              "anchor": "nothing"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 5194,
                        "name": "noChange",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "id": 5195,
                        "name": "nothing",
                        "location": {
                          "page": "templates",
                          "anchor": "nothing"
                        }
                      }
                    },
                    {
                      "type": "reference",
                      "id": 5172,
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": 1
                            },
                            {
                              "type": "literal",
                              "value": 2
                            }
                          ]
                        }
                      ],
                      "name": "TemplateResult",
                      "location": {
                        "page": "templates",
                        "anchor": "TemplateResult"
                      }
                    }
                  ]
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 3051,
                  "name": "UnsafeHTMLDirective.render"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3050,
              "name": "UnsafeHTMLDirective.render",
              "location": {
                "page": "directives",
                "anchor": "UnsafeHTMLDirective.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-svg.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-svg.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-svg.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective.render"
            }
          },
          {
            "id": 3076,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 139,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L139",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "id": 3077,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3078,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3213,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  },
                  {
                    "id": 3079,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 3056,
                  "name": "UnsafeHTMLDirective.update"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3055,
              "name": "UnsafeHTMLDirective.update",
              "location": {
                "page": "directives",
                "anchor": "UnsafeHTMLDirective.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-svg.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-svg.ts#L7",
                "moduleSpecifier": "lit/directives/unsafe-svg.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              3068
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              3066,
              3067
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              3074
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              3071,
              3076
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/unsafe-svg.ts",
            "line": 12,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/unsafe-svg.ts#L12",
            "moduleSpecifier": "lit-html/directives/unsafe-svg.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 3042,
            "name": "UnsafeHTMLDirective",
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/unsafe-svg.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/unsafe-svg.ts#L7",
            "moduleSpecifier": "lit/directives/unsafe-svg.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 3042,
            "name": "UnsafeHTMLDirective",
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective"
            }
          },
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 3110,
        "name": "until",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Renders one of a series of values, including Promises, to a Part.",
          "text": "Values are rendered in priority order, with the first argument having the\nhighest priority and the last argument having the lowest priority. If a\nvalue is a Promise, low-priority values will be rendered until it resolves.\n\nThe priority of values can be used to create placeholder content for async\ndata. For example, a Promise with pending content can be the first,\nhighest-priority, argument, and a non_promise loading indicator template can\nbe used as the second, lower-priority, argument. The loading indicator will\nrender immediately, and the primary content will render when the Promise\nresolves.\n\nExample:\n\n```js\nconst content = fetch('./content.txt').then(r => r.text());\nhtml`${until(content, html`<span>Loading...</span>`)}`\n```\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/until.ts",
            "line": 132,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/until.ts#L132",
            "moduleSpecifier": "lit-html/directives/until.js"
          }
        ],
        "signatures": [
          {
            "id": 3111,
            "name": "until",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Renders one of a series of values, including Promises, to a Part.",
              "text": "Values are rendered in priority order, with the first argument having the\nhighest priority and the last argument having the lowest priority. If a\nvalue is a Promise, low-priority values will be rendered until it resolves.\n\nThe priority of values can be used to create placeholder content for async\ndata. For example, a Promise with pending content can be the first,\nhighest-priority, argument, and a non_promise loading indicator template can\nbe used as the second, lower-priority, argument. The loading indicator will\nrender immediately, and the primary content will render when the Promise\nresolves.\n\nExample:\n\n```js\nconst content = fetch('./content.txt').then(r => r.text());\nhtml`${until(content, html`<span>Loading...</span>`)}`\n```\n"
            },
            "parameters": [
              {
                "id": 3112,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 3238,
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "id": 3080,
                    "name": "UntilDirective",
                    "location": {
                      "page": "directives",
                      "anchor": "UntilDirective"
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/until.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
            "moduleSpecifier": "lit/directives/until.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "until"
        }
      },
      {
        "id": 3080,
        "name": "UntilDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 3081,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 3082,
                "name": "new UntilDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3083,
                    "name": "_partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 3080,
                  "name": "UntilDirective",
                  "location": {
                    "page": "directives",
                    "anchor": "UntilDirective"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 2640,
                  "name": "AsyncDirective.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 2639,
              "name": "AsyncDirective.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.constructor"
            }
          },
          {
            "id": 3099,
            "name": "isConnected",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {
              "shortText": "The connection state for this Directive."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 304,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L304",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 2642,
              "name": "AsyncDirective.isConnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.isConnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.isConnected"
            }
          },
          {
            "id": 3095,
            "name": "disconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/until.ts",
                "line": 100,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/until.ts#L100",
                "moduleSpecifier": "lit-html/directives/until.js"
              }
            ],
            "signatures": [
              {
                "id": 3096,
                "name": "disconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 2652,
                  "name": "AsyncDirective.disconnected"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 2651,
              "name": "AsyncDirective.disconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.disconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.disconnected"
            }
          },
          {
            "id": 3097,
            "name": "reconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/until.ts",
                "line": 105,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/until.ts#L105",
                "moduleSpecifier": "lit-html/directives/until.js"
              }
            ],
            "signatures": [
              {
                "id": 3098,
                "name": "reconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 2654,
                  "name": "AsyncDirective.reconnected"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 2653,
              "name": "AsyncDirective.reconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.reconnected"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.reconnected"
            }
          },
          {
            "id": 3088,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/until.ts",
                "line": 25,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/until.ts#L25",
                "moduleSpecifier": "lit-html/directives/until.js"
              }
            ],
            "signatures": [
              {
                "id": 3089,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3090,
                    "name": "args",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isRest": true
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 2658,
                  "name": "AsyncDirective.render"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 2657,
              "name": "AsyncDirective.render",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.render"
            }
          },
          {
            "id": 3105,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
              "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 364,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L364",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "id": 3106,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
                  "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
                },
                "parameters": [
                  {
                    "id": 3107,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The value to set\n"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 2649,
                  "name": "AsyncDirective.setValue"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 2648,
              "name": "AsyncDirective.setValue",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.setValue"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.setValue"
            }
          },
          {
            "id": 3091,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/until.ts",
                "line": 29,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/until.ts#L29",
                "moduleSpecifier": "lit-html/directives/until.js"
              }
            ],
            "signatures": [
              {
                "id": 3092,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3093,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3213,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  },
                  {
                    "id": 3094,
                    "name": "args",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 2661,
                  "name": "AsyncDirective.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 2660,
              "name": "AsyncDirective.update",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              3081
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              3084,
              3087,
              3085,
              3086,
              3099
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              3108
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              3100,
              3095,
              3097,
              3088,
              3105,
              3091
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/until.ts",
            "line": 19,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directives/until.ts#L19",
            "moduleSpecifier": "lit-html/directives/until.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 2638,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/until.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directives/until.ts#L7",
            "moduleSpecifier": "lit/directives/until.js"
          }
        ],
        "heritage": [
          {
            "type": "reference",
            "id": 2638,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          },
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      }
    ]
  },
  {
    "slug": "custom-directives",
    "title": "Custom directives",
    "versionLinks": {
      "v1": "api/lit-html/custom-directives/"
    },
    "items": [
      {
        "id": 2638,
        "name": "AsyncDirective",
        "kind": 128,
        "kindString": "Class",
        "flags": {
          "isAbstract": true
        },
        "comment": {
          "shortText": "An abstract `Directive` base class whose `disconnected` method will be\ncalled when the part containing the directive is cleared as a result of\nre-rendering, or when the user calls `part.setConnected(false)` on\na part that was previously rendered containing the directive (as happens\nwhen e.g. a LitElement disconnects from the DOM).",
          "text": "If `part.setConnected(true)` is subsequently called on a\ncontaining part, the directive's `reconnected` method will be called prior\nto its next `update`/`render` callbacks. When implementing `disconnected`,\n`reconnected` should also be implemented to be compatible with reconnection.\n\nNote that updates may occur while the directive is disconnected. As such,\ndirectives should generally check the `this.isConnected` flag during\nrender/update to determine whether it is safe to subscribe to resources\nthat may prevent garbage collection.\n"
        },
        "children": [
          {
            "id": 2639,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 2640,
                "name": "new AsyncDirective",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2641,
                    "name": "_partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2638,
                  "name": "AsyncDirective",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "AsyncDirective"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 3262,
                  "name": "Directive.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3261,
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.constructor"
            }
          },
          {
            "id": 2642,
            "name": "isConnected",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {
              "shortText": "The connection state for this Directive."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 304,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L304",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.isConnected"
            }
          },
          {
            "id": 2651,
            "name": "disconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 385,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L385",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "id": 2652,
                "name": "disconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.disconnected"
            }
          },
          {
            "id": 2653,
            "name": "reconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 386,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L386",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "id": 2654,
                "name": "reconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.reconnected"
            }
          },
          {
            "id": 2657,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isAbstract": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 137,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L137",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "id": 2658,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2659,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isRest": true
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 3267,
                  "name": "Directive.render"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3266,
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.render"
            }
          },
          {
            "id": 2648,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
              "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 364,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L364",
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "id": 2649,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
                  "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
                },
                "parameters": [
                  {
                    "id": 2650,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The value to set\n"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.setValue"
            }
          },
          {
            "id": 2660,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 139,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L139",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "id": 2661,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2662,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3213,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  },
                  {
                    "id": 2663,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 3270,
                  "name": "Directive.update"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3269,
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              2639
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2642
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              2655
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              2643,
              2651,
              2653,
              2657,
              2648,
              2660
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/async-directive.ts",
            "line": 295,
            "character": 22,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/async-directive.ts#L295",
            "moduleSpecifier": "lit-html/async-directive.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 2769,
            "name": "AsyncReplaceDirective",
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective"
            }
          },
          {
            "type": "reference",
            "id": 2908,
            "name": "RefDirective",
            "location": {
              "page": "directives",
              "anchor": "RefDirective"
            }
          },
          {
            "type": "reference",
            "id": 3080,
            "name": "UntilDirective",
            "location": {
              "page": "directives",
              "anchor": "UntilDirective"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "AsyncDirective"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "id": 2631,
        "name": "directive",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Creates a user-facing directive function from a Directive class. This\nfunction has the same parameters as the directive's render() method."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 84,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L84",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "signatures": [
          {
            "id": 2632,
            "name": "directive",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Creates a user-facing directive function from a Directive class. This\nfunction has the same parameters as the directive's render() method."
            },
            "typeParameter": [
              {
                "id": 2633,
                "name": "C",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 3232,
                  "name": "DirectiveClass",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "DirectiveClass"
                  }
                }
              }
            ],
            "parameters": [
              {
                "id": 2634,
                "name": "c",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "C"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2635,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 2636,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 2637,
                        "name": "values",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isRest": true
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "literal",
                                "value": "render"
                              },
                              "objectType": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "name": "C"
                                  }
                                ],
                                "name": "InstanceType"
                              }
                            }
                          ],
                          "name": "Parameters"
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 3238,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "C"
                        }
                      ],
                      "name": "DirectiveResult",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "DirectiveResult"
                      }
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/async-directive.ts#L7",
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "directive"
        }
      },
      {
        "id": 3315,
        "name": "clearPart",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 226,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L226",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 3316,
            "name": "clearPart",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 3317,
                "name": "part",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 3149,
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "clearPart"
        }
      },
      {
        "id": 3309,
        "name": "getCommittedValue",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Returns the committed value of a ChildPart.",
          "text": "The committed value is used for change detection and efficient updates of\nthe part. It can differ from the value set by the template or directive in\ncases where the template value is transformed before being commited.\n\n- `TemplateResult`s are committed as a `TemplateInstance`\n- Iterables are committed as `Array<ChildPart>`\n- All other types are committed as the template value or value returned or\n  set by a directive.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 208,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L208",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 3310,
            "name": "getCommittedValue",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Returns the committed value of a ChildPart.",
              "text": "The committed value is used for change detection and efficient updates of\nthe part. It can differ from the value set by the template or directive in\ncases where the template value is transformed before being commited.\n\n- `TemplateResult`s are committed as a `TemplateInstance`\n- Iterables are committed as `Array<ChildPart>`\n- All other types are committed as the template value or value returned or\n  set by a directive.\n"
            },
            "parameters": [
              {
                "id": 3311,
                "name": "part",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "\n"
                },
                "type": {
                  "type": "reference",
                  "id": 3149,
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "getCommittedValue"
        }
      },
      {
        "id": 3288,
        "name": "getDirectiveClass",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Retrieves the Directive class for a DirectiveResult"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 67,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L67",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 3289,
            "name": "getDirectiveClass",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Retrieves the Directive class for a DirectiveResult"
            },
            "parameters": [
              {
                "id": 3290,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 3232,
                  "name": "DirectiveClass",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "DirectiveClass"
                  }
                }
              ]
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "getDirectiveClass"
        }
      },
      {
        "id": 3294,
        "name": "insertPart",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Inserts a ChildPart into the given container ChildPart's DOM, either at the\nend of the container ChildPart, or before the optional `refPart`.",
          "text": "This does not add the part to the containerPart's committed value. That must\nbe done by callers.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 96,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L96",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 3295,
            "name": "insertPart",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Inserts a ChildPart into the given container ChildPart's DOM, either at the\nend of the container ChildPart, or before the optional `refPart`.",
              "text": "This does not add the part to the containerPart's committed value. That must\nbe done by callers.\n"
            },
            "parameters": [
              {
                "id": 3296,
                "name": "containerPart",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "Part within which to add the new ChildPart"
                },
                "type": {
                  "type": "reference",
                  "id": 3149,
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              },
              {
                "id": 3297,
                "name": "refPart",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "Part before which to add the new ChildPart; when omitted the\n    part added to the end of the `containerPart`"
                },
                "type": {
                  "type": "reference",
                  "id": 3149,
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              },
              {
                "id": 3298,
                "name": "part",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "Part to insert, or undefined to create a new part\n"
                },
                "type": {
                  "type": "reference",
                  "id": 3149,
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 3149,
              "name": "ChildPart",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "insertPart"
        }
      },
      {
        "id": 3285,
        "name": "isDirectiveResult",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Tests if a value is a DirectiveResult."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 60,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L60",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 3286,
            "name": "isDirectiveResult",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Tests if a value is a DirectiveResult."
            },
            "parameters": [
              {
                "id": 3287,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "predicate",
              "name": "value",
              "asserts": false,
              "targetType": {
                "type": "reference",
                "id": 3238,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 3232,
                    "name": "DirectiveClass",
                    "location": {
                      "page": "custom-directives",
                      "anchor": "DirectiveClass"
                    }
                  }
                ],
                "name": "DirectiveResult",
                "location": {
                  "page": "custom-directives",
                  "anchor": "DirectiveResult"
                }
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isDirectiveResult"
        }
      },
      {
        "id": 3273,
        "name": "isPrimitive",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Tests if a value is a primitive value.",
          "text": "See https://tc39.github.io/ecma262/#sec-typeof-operator\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 34,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L34",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 3274,
            "name": "isPrimitive",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Tests if a value is a primitive value.",
              "text": "See https://tc39.github.io/ecma262/#sec-typeof-operator\n"
            },
            "parameters": [
              {
                "id": 3275,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "predicate",
              "name": "value",
              "asserts": false,
              "targetType": {
                "type": "reference",
                "name": "Primitive"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isPrimitive"
        }
      },
      {
        "id": 3291,
        "name": "isSingleExpression",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Tests whether a part has only a single-expression with no strings to\ninterpolate between.",
          "text": "Only AttributePart and PropertyPart can have multiple expressions.\nMulti-expression parts have a `strings` property and single-expression\nparts do not.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 79,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L79",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 3292,
            "name": "isSingleExpression",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Tests whether a part has only a single-expression with no strings to\ninterpolate between.",
              "text": "Only AttributePart and PropertyPart can have multiple expressions.\nMulti-expression parts have a `strings` property and single-expression\nparts do not.\n"
            },
            "parameters": [
              {
                "id": 3293,
                "name": "part",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 3258,
                  "name": "PartInfo",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "PartInfo"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isSingleExpression"
        }
      },
      {
        "id": 3281,
        "name": "isTemplateResult",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Tests if a value is a TemplateResult."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 48,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L48",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 3282,
            "name": "isTemplateResult",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Tests if a value is a TemplateResult."
            },
            "parameters": [
              {
                "id": 3283,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 3284,
                "name": "type",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "id": 3276,
                  "name": "TemplateResultType",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "TemplateResultType"
                  }
                }
              }
            ],
            "type": {
              "type": "predicate",
              "name": "value",
              "asserts": false,
              "targetType": {
                "type": "reference",
                "id": 5172,
                "typeArguments": [
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": 1
                      },
                      {
                        "type": "literal",
                        "value": 2
                      }
                    ]
                  }
                ],
                "name": "TemplateResult",
                "location": {
                  "page": "templates",
                  "anchor": "TemplateResult"
                }
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isTemplateResult"
        }
      },
      {
        "id": 3312,
        "name": "removePart",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Removes a ChildPart from the DOM, including any of its content."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 215,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L215",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 3313,
            "name": "removePart",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Removes a ChildPart from the DOM, including any of its content."
            },
            "parameters": [
              {
                "id": 3314,
                "name": "part",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "The Part to remove\n"
                },
                "type": {
                  "type": "reference",
                  "id": 3149,
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "removePart"
        }
      },
      {
        "id": 3299,
        "name": "setChildPartValue",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Sets the value of a Part.",
          "text": "Note that this should only be used to set/update the value of user-created\nparts (i.e. those created using `insertPart`); it should not be used\nby directives to set the value of the directive's container part. Directives\nshould return a value from `update`/`render` to update their part state.\n\nFor directives that require setting their part value asynchronously, they\nshould extend `AsyncDirective` and call `this.setValue()`.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 167,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L167",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 3300,
            "name": "setChildPartValue",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Sets the value of a Part.",
              "text": "Note that this should only be used to set/update the value of user-created\nparts (i.e. those created using `insertPart`); it should not be used\nby directives to set the value of the directive's container part. Directives\nshould return a value from `update`/`render` to update their part state.\n\nFor directives that require setting their part value asynchronously, they\nshould extend `AsyncDirective` and call `this.setValue()`.\n"
            },
            "typeParameter": [
              {
                "id": 3301,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 3149,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              }
            ],
            "parameters": [
              {
                "id": 3302,
                "name": "part",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "Part to set"
                },
                "type": {
                  "type": "reference",
                  "name": "T"
                }
              },
              {
                "id": 3303,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "Value to set"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 3304,
                "name": "directiveParent",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "Used internally; should not be set by user\n"
                },
                "type": {
                  "type": "reference",
                  "id": 5218,
                  "name": "DirectiveParent",
                  "location": {
                    "page": "misc",
                    "anchor": "DirectiveParent"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "T"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "setChildPartValue"
        }
      },
      {
        "id": 3305,
        "name": "setCommittedValue",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Sets the committed value of a ChildPart directly without triggering the\ncommit stage of the part.",
          "text": "This is useful in cases where a directive needs to update the part such\nthat the next update detects a value change or not. When value is omitted,\nthe next update will be guaranteed to be detected as a change.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 191,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L191",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "id": 3306,
            "name": "setCommittedValue",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Sets the committed value of a ChildPart directly without triggering the\ncommit stage of the part.",
              "text": "This is useful in cases where a directive needs to update the part such\nthat the next update detects a value change or not. When value is omitted,\nthe next update will be guaranteed to be detected as a change.\n"
            },
            "parameters": [
              {
                "id": 3307,
                "name": "part",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {},
                "type": {
                  "type": "reference",
                  "id": 3213,
                  "name": "Part",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "Part"
                  }
                }
              },
              {
                "id": 3308,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "setCommittedValue"
        }
      },
      {
        "id": 3276,
        "name": "TemplateResultType",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 37,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive-helpers.ts#L37",
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 3277,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 3278,
                "name": "HTML",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive-helpers.d.ts",
                    "line": 16,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 1
                }
              },
              {
                "id": 3279,
                "name": "SVG",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive-helpers.d.ts",
                    "line": 17,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 2
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "kind": 1024,
                "children": [
                  3278,
                  3279
                ]
              }
            ],
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive-helpers.d.ts",
                "line": 15,
                "character": 41
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive-helpers.ts#L7",
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "TemplateResultType"
        }
      },
      {
        "id": 3113,
        "name": "AttributePart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 3114,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/lit-html.d.ts",
                "line": 241,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 3115,
                "name": "new AttributePart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3116,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "HTMLElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                      }
                    }
                  },
                  {
                    "id": 3117,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 3118,
                    "name": "strings",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  },
                  {
                    "id": 3119,
                    "name": "parent",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5223,
                      "name": "Disconnectable",
                      "location": {
                        "page": "misc",
                        "anchor": "Disconnectable"
                      }
                    }
                  },
                  {
                    "id": 3120,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 5196,
                          "name": "RenderOptions",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 3113,
                  "name": "AttributePart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "AttributePart"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.constructor"
            }
          },
          {
            "id": 3122,
            "name": "element",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1389,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1389",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLElement",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.element"
            }
          },
          {
            "id": 3123,
            "name": "name",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1390,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1390",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.name"
            }
          },
          {
            "id": 3124,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1391,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1391",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 5196,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.options"
            }
          },
          {
            "id": 3125,
            "name": "strings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "If this attribute part represents an interpolation, this contains the\nstatic strings of the interpolation. For single-value, complete bindings,\nthis is undefined."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1398,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1398",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.strings"
            }
          },
          {
            "id": 3121,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1384,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1384",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": 1
                },
                {
                  "type": "literal",
                  "value": 3
                },
                {
                  "type": "literal",
                  "value": 4
                },
                {
                  "type": "literal",
                  "value": 5
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.type"
            }
          },
          {
            "id": 3127,
            "name": "tagName",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1410,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1410",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "getSignature": [
              {
                "id": 3128,
                "name": "tagName",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.tagName"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              3114
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              3126,
              3122,
              3123,
              3124,
              3125,
              3121
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              3129,
              3127
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1383,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1383",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 3131,
            "name": "BooleanAttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart"
            }
          },
          {
            "type": "reference",
            "id": 3192,
            "name": "EventPart",
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart"
            }
          },
          {
            "type": "reference",
            "id": 3214,
            "name": "PropertyPart",
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart"
            }
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "id": 5223,
            "name": "Disconnectable",
            "location": {
              "page": "misc",
              "anchor": "Disconnectable"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "AttributePart"
        }
      },
      {
        "id": 3131,
        "name": "BooleanAttributePart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 3132,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 3133,
                "name": "new BooleanAttributePart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3134,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "HTMLElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                      }
                    }
                  },
                  {
                    "id": 3135,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 3136,
                    "name": "strings",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  },
                  {
                    "id": 3137,
                    "name": "parent",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5223,
                      "name": "Disconnectable",
                      "location": {
                        "page": "misc",
                        "anchor": "Disconnectable"
                      }
                    }
                  },
                  {
                    "id": 3138,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 5196,
                          "name": "RenderOptions",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 3131,
                  "name": "BooleanAttributePart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "BooleanAttributePart"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 3115,
                  "name": "AttributePart.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3114,
              "name": "AttributePart.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.constructor"
            }
          },
          {
            "id": 3140,
            "name": "element",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1389,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1389",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLElement",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 3122,
              "name": "AttributePart.element",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.element"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.element"
            }
          },
          {
            "id": 3141,
            "name": "name",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1390,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1390",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 3123,
              "name": "AttributePart.name",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.name"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.name"
            }
          },
          {
            "id": 3142,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1391,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1391",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 5196,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 3124,
              "name": "AttributePart.options",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.options"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.options"
            }
          },
          {
            "id": 3143,
            "name": "strings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "If this attribute part represents an interpolation, this contains the\nstatic strings of the interpolation. For single-value, complete bindings,\nthis is undefined."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1398,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1398",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 3125,
              "name": "AttributePart.strings",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.strings"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.strings"
            }
          },
          {
            "id": 3139,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1559,
                "character": 20,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1559",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 4
            },
            "defaultValue": "4",
            "overwrites": {
              "type": "reference",
              "id": 3121,
              "name": "AttributePart.type",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.type"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.type"
            }
          },
          {
            "id": 3145,
            "name": "tagName",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1410,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1410",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "getSignature": [
              {
                "id": 3146,
                "name": "tagName",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3127,
              "name": "AttributePart.tagName",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.tagName"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.tagName"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              3132
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              3144,
              3140,
              3141,
              3142,
              3143,
              3139
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              3147,
              3145
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1558,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1558",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 3113,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "BooleanAttributePart"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 3113,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ]
      },
      {
        "id": 3149,
        "name": "ChildPart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 3150,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/lit-html.d.ts",
                "line": 167,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 3151,
                "name": "new ChildPart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3152,
                    "name": "startNode",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "ChildNode"
                    }
                  },
                  {
                    "id": 3153,
                    "name": "endNode",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "reference",
                          "name": "ChildNode"
                        }
                      ]
                    }
                  },
                  {
                    "id": 3154,
                    "name": "parent",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 3149,
                          "name": "ChildPart",
                          "location": {
                            "page": "custom-directives",
                            "anchor": "ChildPart"
                          }
                        },
                        {
                          "type": "reference",
                          "name": "TemplateInstance"
                        }
                      ]
                    }
                  },
                  {
                    "id": 3155,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 5196,
                          "name": "RenderOptions",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 3149,
                  "name": "ChildPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.constructor"
            }
          },
          {
            "id": 3157,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1008,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1008",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 5196,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.options"
            }
          },
          {
            "id": 3156,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1007,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1007",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 2
            },
            "defaultValue": "2",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.type"
            }
          },
          {
            "id": 3166,
            "name": "endNode",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "The part's trailing marker node, if any. See `.parentNode` for more\ninformation."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1115,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1115",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "Node"
                }
              ]
            },
            "getSignature": [
              {
                "id": 3167,
                "name": "endNode",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "The part's trailing marker node, if any. See `.parentNode` for more\ninformation."
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "Node"
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.endNode"
            }
          },
          {
            "id": 3162,
            "name": "parentNode",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "The parent node into which the part renders its content.",
              "text": "A ChildPart's content consists of a range of adjacent child nodes of\n`.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n`.endNode`).\n\n- If both `.startNode` and `.endNode` are non-null, then the part's content\nconsists of all siblings between `.startNode` and `.endNode`, exclusively.\n\n- If `.startNode` is non-null but `.endNode` is null, then the part's\ncontent consists of all siblings following `.startNode`, up to and\nincluding the last child of `.parentNode`. If `.endNode` is non-null, then\n`.startNode` will always be non-null.\n\n- If both `.endNode` and `.startNode` are null, then the part's content\nconsists of all child nodes of `.parentNode`.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1088,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1088",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Node"
            },
            "getSignature": [
              {
                "id": 3163,
                "name": "parentNode",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "The parent node into which the part renders its content.",
                  "text": "A ChildPart's content consists of a range of adjacent child nodes of\n`.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n`.endNode`).\n\n- If both `.startNode` and `.endNode` are non-null, then the part's content\nconsists of all siblings between `.startNode` and `.endNode`, exclusively.\n\n- If `.startNode` is non-null but `.endNode` is null, then the part's\ncontent consists of all siblings following `.startNode`, up to and\nincluding the last child of `.parentNode`. If `.endNode` is non-null, then\n`.startNode` will always be non-null.\n\n- If both `.endNode` and `.startNode` are null, then the part's content\nconsists of all child nodes of `.parentNode`.\n"
                },
                "type": {
                  "type": "reference",
                  "name": "Node"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.parentNode"
            }
          },
          {
            "id": 3164,
            "name": "startNode",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "The part's leading marker node, if any. See `.parentNode` for more\ninformation."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1107,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1107",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "Node"
                }
              ]
            },
            "getSignature": [
              {
                "id": 3165,
                "name": "startNode",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "The part's leading marker node, if any. See `.parentNode` for more\ninformation."
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "Node"
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.startNode"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              3150
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              3158,
              3176,
              3173,
              3175,
              3174,
              3172,
              3159,
              3157,
              3156
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              3160,
              3166,
              3162,
              3164
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              3168
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1006,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1006",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 5229,
            "name": "RootPart",
            "location": {
              "page": "misc",
              "anchor": "RootPart"
            }
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "id": 5223,
            "name": "Disconnectable",
            "location": {
              "page": "misc",
              "anchor": "Disconnectable"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "ChildPart"
        }
      },
      {
        "id": 3260,
        "name": "Directive",
        "kind": 128,
        "kindString": "Class",
        "flags": {
          "isAbstract": true
        },
        "comment": {
          "shortText": "Base class for creating custom directives. Users should extend this class,\nimplement `render` and/or `update`, and then pass their subclass to\n`directive`."
        },
        "children": [
          {
            "id": 3261,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/directive.d.ts",
                "line": 61,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 3262,
                "name": "new Directive",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3263,
                    "name": "_partInfo",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 3260,
                  "name": "Directive",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "Directive"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "Directive.constructor"
            }
          },
          {
            "id": 3266,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isAbstract": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 137,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L137",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "id": 3267,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3268,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isRest": true
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "Directive.render"
            }
          },
          {
            "id": 3269,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 139,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L139",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "id": 3270,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3271,
                    "name": "_part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3213,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  },
                  {
                    "id": 3272,
                    "name": "props",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "Directive.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              3261
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              3264
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              3266,
              3269
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 97,
            "character": 22,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L97",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 2638,
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          },
          {
            "type": "reference",
            "id": 2811,
            "name": "CacheDirective",
            "location": {
              "page": "directives",
              "anchor": "CacheDirective"
            }
          },
          {
            "type": "reference",
            "id": 2832,
            "name": "ClassMapDirective",
            "location": {
              "page": "directives",
              "anchor": "ClassMapDirective"
            }
          },
          {
            "type": "reference",
            "id": 2853,
            "name": "GuardDirective",
            "location": {
              "page": "directives",
              "anchor": "GuardDirective"
            }
          },
          {
            "type": "reference",
            "id": 2879,
            "name": "LiveDirective",
            "location": {
              "page": "directives",
              "anchor": "LiveDirective"
            }
          },
          {
            "type": "reference",
            "id": 2982,
            "name": "RepeatDirective",
            "location": {
              "page": "directives",
              "anchor": "RepeatDirective"
            }
          },
          {
            "type": "reference",
            "id": 3011,
            "name": "StyleMapDirective",
            "location": {
              "page": "directives",
              "anchor": "StyleMapDirective"
            }
          },
          {
            "type": "reference",
            "id": 3028,
            "name": "TemplateContentDirective",
            "location": {
              "page": "directives",
              "anchor": "TemplateContentDirective"
            }
          },
          {
            "type": "reference",
            "id": 3042,
            "name": "UnsafeHTMLDirective",
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective"
            }
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "id": 5223,
            "name": "Disconnectable",
            "location": {
              "page": "misc",
              "anchor": "Disconnectable"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "Directive"
        }
      },
      {
        "id": 3177,
        "name": "ElementPart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 3178,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/lit-html.d.ts",
                "line": 274,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 3179,
                "name": "new ElementPart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3180,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    }
                  },
                  {
                    "id": 3181,
                    "name": "parent",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5223,
                      "name": "Disconnectable",
                      "location": {
                        "page": "misc",
                        "anchor": "Disconnectable"
                      }
                    }
                  },
                  {
                    "id": 3182,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 5196,
                          "name": "RenderOptions",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 3177,
                  "name": "ElementPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ElementPart"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPart.constructor"
            }
          },
          {
            "id": 3183,
            "name": "element",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1686,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1686",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPart.element"
            }
          },
          {
            "id": 3186,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1683,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1683",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 5196,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPart.options"
            }
          },
          {
            "id": 3184,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1669,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1669",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 6
            },
            "defaultValue": "6",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPart.type"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              3178
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              3185,
              3183,
              3186,
              3184
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              3187
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              3189
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1668,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1668",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "id": 5223,
            "name": "Disconnectable",
            "location": {
              "page": "misc",
              "anchor": "Disconnectable"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "ElementPart"
        }
      },
      {
        "id": 3192,
        "name": "EventPart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 3193,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/lit-html.d.ts",
                "line": 265,
                "character": 4
              }
            ],
            "signatures": [
              {
                "id": 3194,
                "name": "new EventPart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3195,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "HTMLElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                      }
                    }
                  },
                  {
                    "id": 3196,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 3197,
                    "name": "strings",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  },
                  {
                    "id": 3198,
                    "name": "parent",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5223,
                      "name": "Disconnectable",
                      "location": {
                        "page": "misc",
                        "anchor": "Disconnectable"
                      }
                    }
                  },
                  {
                    "id": 3199,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 5196,
                          "name": "RenderOptions",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 3192,
                  "name": "EventPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "EventPart"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 3115,
                  "name": "AttributePart.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 3114,
              "name": "AttributePart.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.constructor"
            }
          },
          {
            "id": 3204,
            "name": "element",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1389,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1389",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLElement",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 3122,
              "name": "AttributePart.element",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.element"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.element"
            }
          },
          {
            "id": 3205,
            "name": "name",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1390,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1390",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 3123,
              "name": "AttributePart.name",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.name"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.name"
            }
          },
          {
            "id": 3206,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1391,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1391",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 5196,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 3124,
              "name": "AttributePart.options",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.options"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.options"
            }
          },
          {
            "id": 3207,
            "name": "strings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "If this attribute part represents an interpolation, this contains the\nstatic strings of the interpolation. For single-value, complete bindings,\nthis is undefined."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1398,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1398",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 3125,
              "name": "AttributePart.strings",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.strings"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.strings"
            }
          },
          {
            "id": 3200,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1587,
                "character": 20,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1587",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 5
            },
            "defaultValue": "5",
            "overwrites": {
              "type": "reference",
              "id": 3121,
              "name": "AttributePart.type",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.type"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.type"
            }
          },
          {
            "id": 3209,
            "name": "tagName",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1410,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1410",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "getSignature": [
              {
                "id": 3210,
                "name": "tagName",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3127,
              "name": "AttributePart.tagName",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.tagName"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.tagName"
            }
          },
          {
            "id": 3201,
            "name": "handleEvent",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1658,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1658",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "signatures": [
              {
                "id": 3202,
                "name": "handleEvent",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3203,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Event"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.handleEvent"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              3193
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              3208,
              3204,
              3205,
              3206,
              3207,
              3200
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              3211,
              3209
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              3201
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1586,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1586",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 3113,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "EventPart"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 3113,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ]
      },
      {
        "id": 3240,
        "name": "PartType",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 42,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L42",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 3241,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "children": [
              {
                "id": 3242,
                "name": "ATTRIBUTE",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive.d.ts",
                    "line": 23,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 1
                }
              },
              {
                "id": 3245,
                "name": "BOOLEAN_ATTRIBUTE",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive.d.ts",
                    "line": 26,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 4
                }
              },
              {
                "id": 3243,
                "name": "CHILD",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive.d.ts",
                    "line": 24,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 2
                }
              },
              {
                "id": 3247,
                "name": "ELEMENT",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive.d.ts",
                    "line": 28,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 6
                }
              },
              {
                "id": 3246,
                "name": "EVENT",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive.d.ts",
                    "line": 27,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 5
                }
              },
              {
                "id": 3244,
                "name": "PROPERTY",
                "kind": 1024,
                "kindString": "Property",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive.d.ts",
                    "line": 25,
                    "character": 13
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 3
                }
              }
            ],
            "groups": [
              {
                "title": "Properties",
                "kind": 1024,
                "children": [
                  3242,
                  3245,
                  3243,
                  3247,
                  3246,
                  3244
                ]
              }
            ],
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/directive.d.ts",
                "line": 22,
                "character": 31
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "PartType"
        }
      },
      {
        "id": 3214,
        "name": "PropertyPart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 3215,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 3216,
                "name": "new PropertyPart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3217,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "HTMLElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                      }
                    }
                  },
                  {
                    "id": 3218,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 3219,
                    "name": "strings",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  },
                  {
                    "id": 3220,
                    "name": "parent",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5223,
                      "name": "Disconnectable",
                      "location": {
                        "page": "misc",
                        "anchor": "Disconnectable"
                      }
                    }
                  },
                  {
                    "id": 3221,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "id": 5196,
                          "name": "RenderOptions",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 3214,
                  "name": "PropertyPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "PropertyPart"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 3115,
                  "name": "AttributePart.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3114,
              "name": "AttributePart.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.constructor"
            }
          },
          {
            "id": 3223,
            "name": "element",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1389,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1389",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLElement",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 3122,
              "name": "AttributePart.element",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.element"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.element"
            }
          },
          {
            "id": 3224,
            "name": "name",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1390,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1390",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 3123,
              "name": "AttributePart.name",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.name"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.name"
            }
          },
          {
            "id": 3225,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1391,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1391",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 5196,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 3124,
              "name": "AttributePart.options",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.options"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.options"
            }
          },
          {
            "id": 3226,
            "name": "strings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "If this attribute part represents an interpolation, this contains the\nstatic strings of the interpolation. For single-value, complete bindings,\nthis is undefined."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1398,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1398",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 3125,
              "name": "AttributePart.strings",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.strings"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.strings"
            }
          },
          {
            "id": 3222,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1538,
                "character": 20,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1538",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 3
            },
            "defaultValue": "3",
            "overwrites": {
              "type": "reference",
              "id": 3121,
              "name": "AttributePart.type",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.type"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.type"
            }
          },
          {
            "id": 3228,
            "name": "tagName",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1410,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1410",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "getSignature": [
              {
                "id": 3229,
                "name": "tagName",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3127,
              "name": "AttributePart.tagName",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.tagName"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.tagName"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              3215
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              3227,
              3223,
              3224,
              3225,
              3226,
              3222
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              3230,
              3228
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1537,
            "character": 6,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1537",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 3113,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "PropertyPart"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 3113,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ]
      },
      {
        "id": 3251,
        "name": "AttributePartInfo",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 3254,
            "name": "name",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 64,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L64",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePartInfo.name"
            }
          },
          {
            "id": 3253,
            "name": "strings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 63,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L63",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePartInfo.strings"
            }
          },
          {
            "id": 3255,
            "name": "tagName",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 65,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L65",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePartInfo.tagName"
            }
          },
          {
            "id": 3252,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 58,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L58",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": 1
                },
                {
                  "type": "literal",
                  "value": 3
                },
                {
                  "type": "literal",
                  "value": 4
                },
                {
                  "type": "literal",
                  "value": 5
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePartInfo.type"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              3254,
              3253,
              3255,
              3252
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 57,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L57",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "AttributePartInfo"
        }
      },
      {
        "id": 3249,
        "name": "ChildPartInfo",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 3250,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 54,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L54",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 2
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPartInfo.type"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              3250
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 53,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L53",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "ChildPartInfo"
        }
      },
      {
        "id": 3232,
        "name": "DirectiveClass",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 3233,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 3234,
                "name": "new DirectiveClass",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 3235,
                    "name": "part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 3258,
                      "name": "PartInfo",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 3260,
                  "name": "Directive",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "Directive"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "DirectiveClass.constructor"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              3233
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 19,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L19",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "DirectiveClass"
        }
      },
      {
        "id": 3236,
        "name": "DirectiveParameters",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "This utility type extracts the signature of a directive class's render()\nmethod so we can use it for the type of the generated directive function."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 27,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L27",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "typeParameter": [
          {
            "id": 3237,
            "name": "C",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "id": 3260,
              "name": "Directive",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive"
              }
            }
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "indexedAccess",
              "indexType": {
                "type": "literal",
                "value": "render"
              },
              "objectType": {
                "type": "reference",
                "name": "C"
              }
            }
          ],
          "name": "Parameters"
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "DirectiveParameters"
        }
      },
      {
        "id": 3238,
        "name": "DirectiveResult",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "A generated directive function doesn't evaluate the directive, but just\nreturns a DirectiveResult object that captures the arguments."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 33,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L33",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "typeParameter": [
          {
            "id": 3239,
            "name": "C",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "type": {
              "type": "reference",
              "id": 3232,
              "name": "DirectiveClass",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveClass"
              }
            },
            "default": {
              "type": "reference",
              "id": 3232,
              "name": "DirectiveClass",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveClass"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "DirectiveResult"
        }
      },
      {
        "id": 3256,
        "name": "ElementPartInfo",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 3257,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 69,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L69",
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 6
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directive.ts",
                "line": 7,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
                "moduleSpecifier": "lit/directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPartInfo.type"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              3257
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 68,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L68",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "ElementPartInfo"
        }
      },
      {
        "id": 3213,
        "name": "Part",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 997,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L997",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "id": 3149,
              "name": "ChildPart",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart"
              }
            },
            {
              "type": "reference",
              "id": 3113,
              "name": "AttributePart",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart"
              }
            },
            {
              "type": "reference",
              "id": 3214,
              "name": "PropertyPart",
              "location": {
                "page": "custom-directives",
                "anchor": "PropertyPart"
              }
            },
            {
              "type": "reference",
              "id": 3131,
              "name": "BooleanAttributePart",
              "location": {
                "page": "custom-directives",
                "anchor": "BooleanAttributePart"
              }
            },
            {
              "type": "reference",
              "id": 3177,
              "name": "ElementPart",
              "location": {
                "page": "custom-directives",
                "anchor": "ElementPart"
              }
            },
            {
              "type": "reference",
              "id": 3192,
              "name": "EventPart",
              "location": {
                "page": "custom-directives",
                "anchor": "EventPart"
              }
            }
          ]
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "Part"
        }
      },
      {
        "id": 3258,
        "name": "PartInfo",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "Information about the part a directive is bound to.",
          "text": "This is useful for checking that a directive is attached to a valid part,\nsuch as with directive that can only be used on attribute bindings.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 78,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/directive.ts#L78",
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "id": 3249,
              "name": "ChildPartInfo",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPartInfo"
              }
            },
            {
              "type": "reference",
              "id": 3251,
              "name": "AttributePartInfo",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePartInfo"
              }
            },
            {
              "type": "reference",
              "id": 3256,
              "name": "ElementPartInfo",
              "location": {
                "page": "custom-directives",
                "anchor": "ElementPartInfo"
              }
            }
          ]
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/directive.ts#L7",
            "moduleSpecifier": "lit/directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "PartInfo"
        }
      },
      {
        "id": 5194,
        "name": "noChange",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A sentinel value that signals that a value was handled by a directive and\nshould not be written to the DOM."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 326,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L326",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "typeOperator",
          "operator": "unique",
          "target": {
            "type": "intrinsic",
            "name": "symbol"
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "noChange"
        }
      }
    ]
  },
  {
    "slug": "static-html",
    "title": "Static HTML",
    "versionLinks": {
      "v1": "api/lit-html/templates/"
    },
    "items": [
      {
        "id": 5300,
        "name": "html",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Interprets a template literal as an HTML template that can efficiently\nrender to and update a container.",
          "text": "Includes static value support from `lit-html/static.js`.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 124,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/static.ts#L124",
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "signatures": [
          {
            "id": 5301,
            "name": "html",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Interprets a template literal as an HTML template that can efficiently\nrender to and update a container.",
              "text": "Includes static value support from `lit-html/static.js`.\n"
            },
            "parameters": [
              {
                "id": 5302,
                "name": "strings",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 5303,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 5172,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "ResultType"
                }
              ],
              "name": "TemplateResult",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/static-html.ts#L7",
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "html"
        }
      },
      {
        "id": 5279,
        "name": "literal",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Tags a string literal so that it behaves like part of the static template\nstrings instead of a dynamic value.",
          "text": "The only values that may be used in template expressions are other tagged\n`literal` results or `unsafeStatic` values (note that untrusted content\nshould never be passed to `unsafeStatic`).\n\nUsers must take care to ensure that adding the static string to the template\nresults in well-formed HTML, or else templates may break unexpectedly.\n\nStatic values can be changed, but they will cause a complete re-render since\nthey effectively create a new template.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 51,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/static.ts#L51",
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "signatures": [
          {
            "id": 5280,
            "name": "literal",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Tags a string literal so that it behaves like part of the static template\nstrings instead of a dynamic value.",
              "text": "The only values that may be used in template expressions are other tagged\n`literal` results or `unsafeStatic` values (note that untrusted content\nshould never be passed to `unsafeStatic`).\n\nUsers must take care to ensure that adding the static string to the template\nresults in well-formed HTML, or else templates may break unexpectedly.\n\nStatic values can be changed, but they will cause a complete re-render since\nthey effectively create a new template.\n"
            },
            "parameters": [
              {
                "id": 5281,
                "name": "strings",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 5282,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 5283,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 5284,
                    "name": "_$litStatic$",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/static.d.ts",
                        "line": 39,
                        "character": 4
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [
                      5284
                    ]
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/static-html.ts#L7",
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "literal"
        }
      },
      {
        "id": 5304,
        "name": "svg",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Interprets a template literal as an SVG template that can efficiently\nrender to and update a container.",
          "text": "Includes static value support from `lit-html/static.js`.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 132,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/static.ts#L132",
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "signatures": [
          {
            "id": 5305,
            "name": "svg",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Interprets a template literal as an SVG template that can efficiently\nrender to and update a container.",
              "text": "Includes static value support from `lit-html/static.js`.\n"
            },
            "parameters": [
              {
                "id": 5306,
                "name": "strings",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 5307,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 5172,
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "ResultType"
                }
              ],
              "name": "TemplateResult",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/static-html.ts#L7",
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "svg"
        }
      },
      {
        "id": 5274,
        "name": "unsafeStatic",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Wraps a string so that it behaves like part of the static template\nstrings instead of a dynamic value.",
          "text": "Users must take care to ensure that adding the static string to the template\nresults in well-formed HTML, or else templates may break unexpectedly.\n\nNote that this function is unsafe to use on untrusted content, as it will be\ndirectly parsed into HTML. Do not pass user input to this function\nwithout sanitizing it.\n\nStatic values can be changed, but they will cause a complete re-render\nsince they effectively create a new template.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 22,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/static.ts#L22",
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "signatures": [
          {
            "id": 5275,
            "name": "unsafeStatic",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Wraps a string so that it behaves like part of the static template\nstrings instead of a dynamic value.",
              "text": "Users must take care to ensure that adding the static string to the template\nresults in well-formed HTML, or else templates may break unexpectedly.\n\nNote that this function is unsafe to use on untrusted content, as it will be\ndirectly parsed into HTML. Do not pass user input to this function\nwithout sanitizing it.\n\nStatic values can be changed, but they will cause a complete re-render\nsince they effectively create a new template.\n"
            },
            "parameters": [
              {
                "id": 5276,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 5277,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "children": [
                  {
                    "id": 5278,
                    "name": "_$litStatic$",
                    "kind": 1024,
                    "kindString": "Property",
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/static.d.ts",
                        "line": 22,
                        "character": 4
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "groups": [
                  {
                    "title": "Properties",
                    "kind": 1024,
                    "children": [
                      5278
                    ]
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/static-html.ts#L7",
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "unsafeStatic"
        }
      },
      {
        "id": 5285,
        "name": "withStatic",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Wraps a lit-html template tag (`html` or `svg`) to add static value support."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 68,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/static.ts#L68",
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "signatures": [
          {
            "id": 5286,
            "name": "withStatic",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Wraps a lit-html template tag (`html` or `svg`) to add static value support."
            },
            "parameters": [
              {
                "id": 5287,
                "name": "coreTag",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 5288,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 5289,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 5290,
                                "name": "strings",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "reference",
                                  "name": "TemplateStringsArray"
                                }
                              },
                              {
                                "id": 5291,
                                "name": "values",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {
                                  "isRest": true
                                },
                                "type": {
                                  "type": "array",
                                  "elementType": {
                                    "type": "intrinsic",
                                    "name": "unknown"
                                  }
                                }
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "id": 5172,
                              "typeArguments": [
                                {
                                  "type": "literal",
                                  "value": 1
                                }
                              ],
                              "name": "TemplateResult",
                              "location": {
                                "page": "templates",
                                "anchor": "TemplateResult"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 5292,
                        "name": "__type",
                        "kind": 65536,
                        "kindString": "Type literal",
                        "flags": {},
                        "signatures": [
                          {
                            "id": 5293,
                            "name": "__type",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 5294,
                                "name": "strings",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "reference",
                                  "name": "TemplateStringsArray"
                                }
                              },
                              {
                                "id": 5295,
                                "name": "values",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {
                                  "isRest": true
                                },
                                "type": {
                                  "type": "array",
                                  "elementType": {
                                    "type": "intrinsic",
                                    "name": "unknown"
                                  }
                                }
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "id": 5172,
                              "typeArguments": [
                                {
                                  "type": "literal",
                                  "value": 2
                                }
                              ],
                              "name": "TemplateResult",
                              "location": {
                                "page": "templates",
                                "anchor": "TemplateResult"
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 5296,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 5297,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 5298,
                        "name": "strings",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "TemplateStringsArray"
                        }
                      },
                      {
                        "id": 5299,
                        "name": "values",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isRest": true
                        },
                        "type": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 5172,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "ResultType"
                        }
                      ],
                      "name": "TemplateResult",
                      "location": {
                        "page": "templates",
                        "anchor": "TemplateResult"
                      }
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 7,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/static-html.ts#L7",
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "withStatic"
        }
      }
    ]
  },
  {
    "slug": "controllers",
    "title": "Controllers",
    "versionLinks": {
      "v1": "api/lit-element/LitElement/"
    },
    "items": [
      {
        "id": 4198,
        "name": "ReactiveController",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "A Reactive Controller is an object that enables sub-component code\norganization and reuse by aggregating the state, behavior, and lifecycle\nhooks related to a single feature.",
          "text": "Controllers are added to a host component, or other object that implements\nthe `ReactiveControllerHost` interface, via the `addController()` method.\nThey can hook their host components's lifecycle by implementing one or more\nof the lifecycle callbacks, or initiate an update of the host component by\ncalling `requestUpdate()` on the host.\n"
        },
        "children": [
          {
            "id": 4199,
            "name": "hostConnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Called when the host is connected to the component tree. For custom\nelement hosts, this corresponds to the `connectedCallback()` lifecycle,\nwhich is only called when the component is connected to the document."
            },
            "children": [],
            "signatures": [
              {
                "id": 4200,
                "name": "hostConnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Called when the host is connected to the component tree. For custom\nelement hosts, this corresponds to the `connectedCallback()` lifecycle,\nwhich is only called when the component is connected to the document."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveController.hostConnected"
            }
          },
          {
            "id": 4201,
            "name": "hostDisconnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Called when the host is disconnected from the component tree. For custom\nelement hosts, this corresponds to the `disconnectedCallback()` lifecycle,\nwhich is called the host or an ancestor component is disconnected from the\ndocument."
            },
            "children": [],
            "signatures": [
              {
                "id": 4202,
                "name": "hostDisconnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Called when the host is disconnected from the component tree. For custom\nelement hosts, this corresponds to the `disconnectedCallback()` lifecycle,\nwhich is called the host or an ancestor component is disconnected from the\ndocument."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveController.hostDisconnected"
            }
          },
          {
            "id": 4203,
            "name": "hostUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Called during the client-side host update, just before the host calls\nits own update.",
              "text": "Code in `update()` can depend on the DOM as it is not called in\nserver-side rendering.\n"
            },
            "children": [],
            "signatures": [
              {
                "id": 4204,
                "name": "hostUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Called during the client-side host update, just before the host calls\nits own update.",
                  "text": "Code in `update()` can depend on the DOM as it is not called in\nserver-side rendering.\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveController.hostUpdate"
            }
          },
          {
            "id": 4205,
            "name": "hostUpdated",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Called after a host update, just before the host calls firstUpdated and\nupdated. It is not called in server-side rendering."
            },
            "children": [],
            "signatures": [
              {
                "id": 4206,
                "name": "hostUpdated",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Called after a host update, just before the host calls firstUpdated and\nupdated. It is not called in server-side rendering."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveController.hostUpdated"
            }
          }
        ],
        "groups": [
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              4199,
              4201,
              4203,
              4205
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-controller.ts",
            "line": 53,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-controller.ts#L53",
            "moduleSpecifier": "reactive-element/reactive-controller.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "controllers",
          "anchor": "ReactiveController"
        }
      },
      {
        "id": 4207,
        "name": "ReactiveControllerHost",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "An object that can host Reactive Controllers and call their lifecycle\ncallbacks."
        },
        "children": [
          {
            "id": 4216,
            "name": "updateComplete",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "comment": {
              "shortText": "Returns a Promise that resolves when the host has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
              "tags": [
                {
                  "tag": "returns",
                  "text": "A promise of a boolean that indicates if the update resolved\n    without triggering another update.\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-controller.ts",
                "line": 39,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-controller.ts#L39",
                "moduleSpecifier": "reactive-element/reactive-controller.js"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              ],
              "name": "Promise"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveControllerHost.updateComplete"
            }
          },
          {
            "id": 4208,
            "name": "addController",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Adds a controller to the host, which sets up the controller's lifecycle\nmethods to be called with the host's lifecycle."
            },
            "children": [],
            "signatures": [
              {
                "id": 4209,
                "name": "addController",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Adds a controller to the host, which sets up the controller's lifecycle\nmethods to be called with the host's lifecycle."
                },
                "parameters": [
                  {
                    "id": 4210,
                    "name": "controller",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 4198,
                      "name": "ReactiveController",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveController"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveControllerHost.addController"
            }
          },
          {
            "id": 4211,
            "name": "removeController",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Removes a controller from the host."
            },
            "children": [],
            "signatures": [
              {
                "id": 4212,
                "name": "removeController",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Removes a controller from the host."
                },
                "parameters": [
                  {
                    "id": 4213,
                    "name": "controller",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 4198,
                      "name": "ReactiveController",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveController"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveControllerHost.removeController"
            }
          },
          {
            "id": 4214,
            "name": "requestUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Requests a host update which is processed asynchronously. The update can\nbe waited on via the `updateComplete` property."
            },
            "children": [],
            "signatures": [
              {
                "id": 4215,
                "name": "requestUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Requests a host update which is processed asynchronously. The update can\nbe waited on via the `updateComplete` property."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveControllerHost.requestUpdate"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              4216
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              4208,
              4211,
              4214
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-controller.ts",
            "line": 11,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-controller.ts#L11",
            "moduleSpecifier": "reactive-element/reactive-controller.js"
          }
        ],
        "implementedBy": [
          {
            "type": "reference",
            "id": 4260,
            "name": "ReactiveElement",
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "controllers",
          "anchor": "ReactiveControllerHost"
        }
      }
    ]
  },
  {
    "slug": "misc",
    "title": "Misc",
    "versionLinks": {
      "v1": "api/lit-element/LitElement/"
    },
    "items": [
      {
        "id": 4246,
        "name": "defaultConverter",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 218,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L218",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "type": {
          "type": "reference",
          "id": 4217,
          "name": "ComplexAttributeConverter",
          "location": {
            "page": "ReactiveElement",
            "anchor": "ComplexAttributeConverter"
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "defaultConverter"
        }
      },
      {
        "id": 4251,
        "name": "notEqual",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Change function that returns true if `value` is different from `oldValue`.\nThis method is used as the default for a property's `hasChanged` function."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 268,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L268",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "signatures": [
          {
            "id": 4252,
            "name": "notEqual",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Change function that returns true if `value` is different from `oldValue`.\nThis method is used as the default for a property's `hasChanged` function."
            },
            "parameters": [
              {
                "id": 4253,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 4254,
                "name": "old",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "notEqual"
        }
      },
      {
        "id": 5183,
        "name": "CompiledTemplate",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 5184,
            "name": "el",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 280,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L280",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLTemplateElement",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "CompiledTemplate.el"
            }
          },
          {
            "id": 5185,
            "name": "h",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 283,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L283",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "TrustedHTML"
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "CompiledTemplate.h"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5184,
              5185
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 278,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L278",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "Template"
              },
              {
                "type": "literal",
                "value": "el"
              }
            ],
            "name": "Omit"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "CompiledTemplate"
        },
        "heritage": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "Template"
              },
              {
                "type": "literal",
                "value": "el"
              }
            ],
            "name": "Omit"
          }
        ]
      },
      {
        "id": 5180,
        "name": "CompiledTemplateResult",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 5182,
            "name": "values",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 275,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L275",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "unknown"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "CompiledTemplateResult.values"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5181,
              5182
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 270,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L270",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "CompiledTemplateResult"
        }
      },
      {
        "id": 5218,
        "name": "DirectiveParent",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5220,
              5219,
              5221,
              5222
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 460,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L460",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "DirectiveParent"
        }
      },
      {
        "id": 5223,
        "name": "Disconnectable",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5225,
              5226,
              5224
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 806,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L806",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "implementedBy": [
          {
            "type": "reference",
            "id": 3113,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          },
          {
            "type": "reference",
            "id": 3149,
            "name": "ChildPart",
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart"
            }
          },
          {
            "type": "reference",
            "id": 3260,
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          },
          {
            "type": "reference",
            "id": 3177,
            "name": "ElementPart",
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPart"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "Disconnectable"
        }
      },
      {
        "id": 4247,
        "name": "HasChanged",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 260,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L260",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "signatures": [
          {
            "id": 4248,
            "name": "HasChanged",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 4249,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 4250,
                "name": "old",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "HasChanged"
        }
      },
      {
        "id": 5178,
        "name": "HTMLTemplateResult",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 266,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L266",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "reference",
          "id": 5172,
          "typeArguments": [
            {
              "type": "query",
              "queryType": {
                "type": "reference",
                "name": "HTML_RESULT"
              }
            }
          ],
          "name": "TemplateResult",
          "location": {
            "page": "templates",
            "anchor": "TemplateResult"
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "HTMLTemplateResult"
        }
      },
      {
        "id": 4256,
        "name": "Initializer",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 294,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L294",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 4257,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/reactive-element/reactive-element.d.ts",
                "line": 131,
                "character": 34
              }
            ],
            "signatures": [
              {
                "id": 4258,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 4259,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 4260,
                      "name": "ReactiveElement",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "ReactiveElement"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "Initializer"
        }
      },
      {
        "id": 5229,
        "name": "RootPart",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "A top-level `ChildPart` returned from `render` that manages the connected\nstate of `AsyncDirective`s created throughout the tree below it."
        },
        "children": [
          {
            "id": 5234,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1008,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1008",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "id": 5196,
                  "name": "RenderOptions",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 3157,
              "name": "ChildPart.options",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart.options"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.options"
            }
          },
          {
            "id": 5233,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1007,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1007",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 2
            },
            "defaultValue": "2",
            "inheritedFrom": {
              "type": "reference",
              "id": 3156,
              "name": "ChildPart.type",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart.type"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.type"
            }
          },
          {
            "id": 5242,
            "name": "endNode",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "The part's trailing marker node, if any. See `.parentNode` for more\ninformation."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1115,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1115",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "Node"
                }
              ]
            },
            "getSignature": [
              {
                "id": 5243,
                "name": "endNode",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "The part's trailing marker node, if any. See `.parentNode` for more\ninformation."
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "Node"
                    }
                  ]
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3166,
              "name": "ChildPart.endNode",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart.endNode"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.endNode"
            }
          },
          {
            "id": 5238,
            "name": "parentNode",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "The parent node into which the part renders its content.",
              "text": "A ChildPart's content consists of a range of adjacent child nodes of\n`.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n`.endNode`).\n\n- If both `.startNode` and `.endNode` are non-null, then the part's content\nconsists of all siblings between `.startNode` and `.endNode`, exclusively.\n\n- If `.startNode` is non-null but `.endNode` is null, then the part's\ncontent consists of all siblings following `.startNode`, up to and\nincluding the last child of `.parentNode`. If `.endNode` is non-null, then\n`.startNode` will always be non-null.\n\n- If both `.endNode` and `.startNode` are null, then the part's content\nconsists of all child nodes of `.parentNode`.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1088,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1088",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Node"
            },
            "getSignature": [
              {
                "id": 5239,
                "name": "parentNode",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "The parent node into which the part renders its content.",
                  "text": "A ChildPart's content consists of a range of adjacent child nodes of\n`.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n`.endNode`).\n\n- If both `.startNode` and `.endNode` are non-null, then the part's content\nconsists of all siblings between `.startNode` and `.endNode`, exclusively.\n\n- If `.startNode` is non-null but `.endNode` is null, then the part's\ncontent consists of all siblings following `.startNode`, up to and\nincluding the last child of `.parentNode`. If `.endNode` is non-null, then\n`.startNode` will always be non-null.\n\n- If both `.endNode` and `.startNode` are null, then the part's content\nconsists of all child nodes of `.parentNode`.\n"
                },
                "type": {
                  "type": "reference",
                  "name": "Node"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3162,
              "name": "ChildPart.parentNode",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart.parentNode"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.parentNode"
            }
          },
          {
            "id": 5240,
            "name": "startNode",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "The part's leading marker node, if any. See `.parentNode` for more\ninformation."
            },
            "children": [],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1107,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1107",
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "Node"
                }
              ]
            },
            "getSignature": [
              {
                "id": 5241,
                "name": "startNode",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "The part's leading marker node, if any. See `.parentNode` for more\ninformation."
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "Node"
                    }
                  ]
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 3164,
              "name": "ChildPart.startNode",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart.startNode"
              }
            },
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.startNode"
            }
          },
          {
            "id": 5230,
            "name": "setConnected",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the connection state for `AsyncDirective`s contained within this root\nChildPart.",
              "text": "lit-html does not automatically monitor the connectedness of DOM rendered;\nas such, it is the responsibility of the caller to `render` to ensure that\n`part.setConnected(false)` is called before the part object is potentially\ndiscarded, to ensure that `AsyncDirective`s have a chance to dispose of\nany resources being held. If a `RootPart` that was prevously\ndisconnected is subsequently re-connected (and its `AsyncDirective`s should\nre-connect), `setConnected(true)` should be called.\n"
            },
            "children": [],
            "signatures": [
              {
                "id": 5231,
                "name": "setConnected",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the connection state for `AsyncDirective`s contained within this root\nChildPart.",
                  "text": "lit-html does not automatically monitor the connectedness of DOM rendered;\nas such, it is the responsibility of the caller to `render` to ensure that\n`part.setConnected(false)` is called before the part object is potentially\ndiscarded, to ensure that `AsyncDirective`s have a chance to dispose of\nany resources being held. If a `RootPart` that was prevously\ndisconnected is subsequently re-connected (and its `AsyncDirective`s should\nre-connect), `setConnected(true)` should be called.\n"
                },
                "parameters": [
                  {
                    "id": 5232,
                    "name": "isConnected",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Whether directives within this tree should be connected\nor not\n"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 10,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.setConnected"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5235,
              5234,
              5233
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              5236,
              5242,
              5238,
              5240
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              5244,
              5230
            ]
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1363,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L1363",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 3149,
            "name": "ChildPart",
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "RootPart"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 3149,
            "name": "ChildPart",
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart"
            }
          }
        ]
      },
      {
        "id": 5168,
        "name": "ValueSanitizer",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 104,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit-html/src/lit-html.ts#L104",
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 5169,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "comment": {
              "shortText": "A function which can sanitize values that will be written to a specific kind\nof DOM sink.",
              "text": "See SanitizerFactory.\n",
              "returns": "The value to write to the DOM. Usually the same as the input value,\n    unless sanitization is needed.\n"
            },
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-2/repo/packages/lit-html/lit-html.d.ts",
                "line": 41,
                "character": 37
              }
            ],
            "signatures": [
              {
                "id": 5170,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "A function which can sanitize values that will be written to a specific kind\nof DOM sink.",
                  "text": "See SanitizerFactory.\n",
                  "returns": "The value to write to the DOM. Usually the same as the input value,\n    unless sanitization is needed.\n"
                },
                "parameters": [
                  {
                    "id": 5171,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "shortText": "The value to sanitize. Will be the actual value passed into\n    the lit-html template literal, so this could be of any type."
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "ValueSanitizer"
        }
      },
      {
        "id": 4255,
        "name": "WarningKind",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "A string representing one of the supported dev mode warnings classes."
        },
        "children": [],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 292,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/reactive-element/src/reactive-element.ts#L292",
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "literal",
              "value": "change-in-update"
            },
            {
              "type": "literal",
              "value": "migration"
            }
          ]
        },
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 10,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/f8ee010bc515e4bb319e98408d38ef3d971cc08b/packages/lit/src/index.ts#L10",
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "WarningKind"
        }
      }
    ]
  }
]