[
  {
    "slug": "templates",
    "title": "Templates",
    "versionLinks": {
      "v2": "api/templates/"
    },
    "items": [
      {
        "id": 4884,
        "name": "html",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Interprets a template literal as an HTML template that can efficiently\nrender to and update a container."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 66,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L66",
            "moduleSpecifier": "lit-html"
          }
        ],
        "signatures": [
          {
            "id": 4885,
            "name": "html",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Interprets a template literal as an HTML template that can efficiently\nrender to and update a container."
            },
            "parameters": [
              {
                "id": 4886,
                "name": "strings",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 4887,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 5278,
              "name": "TemplateResult",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "html"
        }
      },
      {
        "id": 5069,
        "name": "nothing",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A sentinel value that signals a NodePart to fully clear its content."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/part.ts",
            "line": 50,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/part.ts#L50",
            "moduleSpecifier": "lit-html/lib/part.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 5070,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {}
          }
        },
        "defaultValue": "{}",
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "nothing"
        }
      },
      {
        "id": 5229,
        "name": "render",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Renders a template result or other value to a container.",
          "text": "To update a container with new values, reevaluate the template literal and\ncall `render` with the new result.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/render.ts",
            "line": 37,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/render.ts#L37",
            "moduleSpecifier": "lit-html/lib/render.js"
          }
        ],
        "signatures": [
          {
            "id": 5230,
            "name": "render",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Renders a template result or other value to a container.",
              "text": "To update a container with new values, reevaluate the template literal and\ncall `render` with the new result.\n"
            },
            "parameters": [
              {
                "id": 5231,
                "name": "result",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "Any value renderable by NodePart - typically a TemplateResult\n    created by evaluating a template tag like `html` or `svg`."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 5232,
                "name": "container",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "A DOM parent to render to. The entire contents are either\n    replaced, or efficiently updated if the same result type was previous\n    rendered there."
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "DocumentFragment",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"
                      }
                    }
                  ]
                }
              },
              {
                "id": 5233,
                "name": "options",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "RenderOptions for the entire render tree rendered to this\n    container. Render options must *not* change between renders to the same\n    container, as those changes will not effect previously rendered DOM.\n"
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "id": 5225,
                      "name": "RenderOptions",
                      "location": {
                        "page": "templates",
                        "anchor": "RenderOptions"
                      }
                    }
                  ],
                  "name": "Partial"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "render"
        }
      },
      {
        "id": 4888,
        "name": "svg",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Interprets a template literal as an SVG template that can efficiently\nrender to and update a container."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 73,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L73",
            "moduleSpecifier": "lit-html"
          }
        ],
        "signatures": [
          {
            "id": 4889,
            "name": "svg",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Interprets a template literal as an SVG template that can efficiently\nrender to and update a container."
            },
            "parameters": [
              {
                "id": 4890,
                "name": "strings",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 4891,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 5263,
              "name": "SVGTemplateResult",
              "location": {
                "page": "templates",
                "anchor": "SVGTemplateResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "svg"
        }
      },
      {
        "id": 5263,
        "name": "SVGTemplateResult",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "A TemplateResult for SVG fragments.",
          "text": "This class wraps HTML in an `<svg>` tag in order to parse its contents in the\nSVG namespace, then modifies the template to remove the `<svg>` tag so that\nclones only container the original fragment.\n"
        },
        "children": [
          {
            "id": 5264,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 5265,
                "name": "new SVGTemplateResult",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 5266,
                    "name": "strings",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "TemplateStringsArray"
                    }
                  },
                  {
                    "id": 5267,
                    "name": "values",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    }
                  },
                  {
                    "id": 5268,
                    "name": "type",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 5269,
                    "name": "processor",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5253,
                      "name": "TemplateProcessor",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "TemplateProcessor"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5263,
                  "name": "SVGTemplateResult",
                  "location": {
                    "page": "templates",
                    "anchor": "SVGTemplateResult"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 5280,
                  "name": "TemplateResult.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 5279,
              "name": "TemplateResult.constructor",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "SVGTemplateResult.constructor"
            }
          },
          {
            "id": 5277,
            "name": "processor",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-result.ts",
                "line": 45,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-result.ts#L45",
                "moduleSpecifier": "lit-html/lib/template-result.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 5253,
              "name": "TemplateProcessor",
              "location": {
                "page": "custom-directives",
                "anchor": "TemplateProcessor"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 5288,
              "name": "TemplateResult.processor",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult.processor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "SVGTemplateResult.processor"
            }
          },
          {
            "id": 5274,
            "name": "strings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-result.ts",
                "line": 42,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-result.ts#L42",
                "moduleSpecifier": "lit-html/lib/template-result.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "TemplateStringsArray"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 5285,
              "name": "TemplateResult.strings",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult.strings"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "SVGTemplateResult.strings"
            }
          },
          {
            "id": 5276,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-result.ts",
                "line": 44,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-result.ts#L44",
                "moduleSpecifier": "lit-html/lib/template-result.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 5287,
              "name": "TemplateResult.type",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult.type"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "SVGTemplateResult.type"
            }
          },
          {
            "id": 5275,
            "name": "values",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-result.ts",
                "line": 43,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-result.ts#L43",
                "moduleSpecifier": "lit-html/lib/template-result.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 5286,
              "name": "TemplateResult.values",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult.values"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "SVGTemplateResult.values"
            }
          },
          {
            "id": 5270,
            "name": "getHTML",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Returns a string of HTML used to create a `<template>` element."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-result.ts",
                "line": 136,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-result.ts#L136",
                "moduleSpecifier": "lit-html/lib/template-result.js"
              }
            ],
            "signatures": [
              {
                "id": 5271,
                "name": "getHTML",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a string of HTML used to create a `<template>` element."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 5290,
                  "name": "TemplateResult.getHTML"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 5289,
              "name": "TemplateResult.getHTML",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult.getHTML"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "SVGTemplateResult.getHTML"
            }
          },
          {
            "id": 5272,
            "name": "getTemplateElement",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-result.ts",
                "line": 140,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-result.ts#L140",
                "moduleSpecifier": "lit-html/lib/template-result.js"
              }
            ],
            "signatures": [
              {
                "id": 5273,
                "name": "getTemplateElement",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "HTMLTemplateElement",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 5292,
                  "name": "TemplateResult.getTemplateElement"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 5291,
              "name": "TemplateResult.getTemplateElement",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult.getTemplateElement"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "SVGTemplateResult.getTemplateElement"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              5264
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5277,
              5274,
              5276,
              5275
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              5270,
              5272
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/template-result.ts",
            "line": 135,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-result.ts#L135",
            "moduleSpecifier": "lit-html/lib/template-result.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 5278,
            "name": "TemplateResult",
            "location": {
              "page": "templates",
              "anchor": "TemplateResult"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "SVGTemplateResult"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 5278,
            "name": "TemplateResult",
            "location": {
              "page": "templates",
              "anchor": "TemplateResult"
            }
          }
        ]
      },
      {
        "id": 5278,
        "name": "TemplateResult",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "The return type of `html`, which holds a Template and the values from\ninterpolated expressions."
        },
        "children": [
          {
            "id": 5279,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-result.ts",
                "line": 47,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-result.ts#L47",
                "moduleSpecifier": "lit-html/lib/template-result.js"
              }
            ],
            "signatures": [
              {
                "id": 5280,
                "name": "new TemplateResult",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 5281,
                    "name": "strings",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "TemplateStringsArray"
                    }
                  },
                  {
                    "id": 5282,
                    "name": "values",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    }
                  },
                  {
                    "id": 5283,
                    "name": "type",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 5284,
                    "name": "processor",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5253,
                      "name": "TemplateProcessor",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "TemplateProcessor"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5278,
                  "name": "TemplateResult",
                  "location": {
                    "page": "templates",
                    "anchor": "TemplateResult"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "TemplateResult.constructor"
            }
          },
          {
            "id": 5288,
            "name": "processor",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-result.ts",
                "line": 45,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-result.ts#L45",
                "moduleSpecifier": "lit-html/lib/template-result.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 5253,
              "name": "TemplateProcessor",
              "location": {
                "page": "custom-directives",
                "anchor": "TemplateProcessor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "TemplateResult.processor"
            }
          },
          {
            "id": 5285,
            "name": "strings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-result.ts",
                "line": 42,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-result.ts#L42",
                "moduleSpecifier": "lit-html/lib/template-result.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "TemplateStringsArray"
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "TemplateResult.strings"
            }
          },
          {
            "id": 5287,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-result.ts",
                "line": 44,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-result.ts#L44",
                "moduleSpecifier": "lit-html/lib/template-result.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "TemplateResult.type"
            }
          },
          {
            "id": 5286,
            "name": "values",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-result.ts",
                "line": 43,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-result.ts#L43",
                "moduleSpecifier": "lit-html/lib/template-result.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "TemplateResult.values"
            }
          },
          {
            "id": 5289,
            "name": "getHTML",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Returns a string of HTML used to create a `<template>` element."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-result.ts",
                "line": 59,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-result.ts#L59",
                "moduleSpecifier": "lit-html/lib/template-result.js"
              }
            ],
            "signatures": [
              {
                "id": 5290,
                "name": "getHTML",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a string of HTML used to create a `<template>` element."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "TemplateResult.getHTML"
            }
          },
          {
            "id": 5291,
            "name": "getTemplateElement",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-result.ts",
                "line": 113,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-result.ts#L113",
                "moduleSpecifier": "lit-html/lib/template-result.js"
              }
            ],
            "signatures": [
              {
                "id": 5292,
                "name": "getTemplateElement",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "HTMLTemplateElement",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "TemplateResult.getTemplateElement"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              5279
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5288,
              5285,
              5287,
              5286
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              5289,
              5291
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/template-result.ts",
            "line": 41,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-result.ts#L41",
            "moduleSpecifier": "lit-html/lib/template-result.js"
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 5263,
            "name": "SVGTemplateResult",
            "location": {
              "page": "templates",
              "anchor": "SVGTemplateResult"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "TemplateResult"
        }
      },
      {
        "id": 5225,
        "name": "RenderOptions",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 5227,
            "name": "eventContext",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/render-options.ts",
                "line": 19,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/render-options.ts#L19",
                "moduleSpecifier": "lit-html/lib/render-options.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "EventTarget"
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "RenderOptions.eventContext"
            }
          },
          {
            "id": 5226,
            "name": "templateFactory",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/render-options.ts",
                "line": 18,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/render-options.ts#L18",
                "moduleSpecifier": "lit-html/lib/render-options.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "TemplateFactory"
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "templates",
              "anchor": "RenderOptions.templateFactory"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5227,
              5226
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/render-options.ts",
            "line": 17,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/render-options.ts#L17",
            "moduleSpecifier": "lit-html/lib/render-options.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "RenderOptions"
        }
      }
    ]
  },
  {
    "slug": "directives",
    "title": "Directives",
    "versionLinks": {
      "v2": "api/directives/"
    },
    "items": [
      {
        "id": 4909,
        "name": "asyncAppend",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A directive that renders the items of an async iterable[1], appending new\nvalues after previous values, similar to the built-in support for iterables.",
          "text": "Async iterables are objects with a [Symbol.asyncIterator] method, which\nreturns an iterator who's `next()` method returns a Promise. When a new\nvalue is available, the Promise resolves and the value is appended to the\nPart controlled by the directive. If another value other than this\ndirective has been set on the Part, the iterable will no longer be listened\nto and new values won't be written to the Part.\n\n[1]: https://github.com/tc39/proposal-async-iteration\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/async-append.ts",
            "line": 34,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/async-append.ts#L34",
            "moduleSpecifier": "lit-html/directives/async-append.js"
          }
        ],
        "signatures": [
          {
            "id": 4910,
            "name": "asyncAppend",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that renders the items of an async iterable[1], appending new\nvalues after previous values, similar to the built-in support for iterables.",
              "text": "Async iterables are objects with a [Symbol.asyncIterator] method, which\nreturns an iterator who's `next()` method returns a Promise. When a new\nvalue is available, the Promise resolves and the value is appended to the\nPart controlled by the directive. If another value other than this\ndirective has been set on the Part, the iterable will no longer be listened\nto and new values won't be written to the Part.\n\n[1]: https://github.com/tc39/proposal-async-iteration\n"
            },
            "typeParameter": [
              {
                "id": 4911,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 4912,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "An async iterable"
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "AsyncIterable"
                }
              },
              {
                "id": 4913,
                "name": "mapper",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "An optional function that maps from (value, index) to another\n    value. Useful for generating templates for each item in the iterable.\n"
                },
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 4914,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 4915,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 4916,
                            "name": "v",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "name": "T"
                            }
                          },
                          {
                            "id": 4917,
                            "name": "index",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                              "isOptional": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 4918,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 4919,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 4920,
                        "name": "part",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 5071,
                          "name": "Part",
                          "location": {
                            "page": "custom-directives",
                            "anchor": "Part"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      ],
                      "name": "Promise"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/directives/async-append.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/async-append.ts#L15",
            "moduleSpecifier": "lit-html/directives/async-append.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "asyncAppend"
        }
      },
      {
        "id": 4922,
        "name": "asyncReplace",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A directive that renders the items of an async iterable[1], replacing\nprevious values with new values, so that only one value is ever rendered\nat a time.",
          "text": "Async iterables are objects with a [Symbol.asyncIterator] method, which\nreturns an iterator who's `next()` method returns a Promise. When a new\nvalue is available, the Promise resolves and the value is rendered to the\nPart controlled by the directive. If another value other than this\ndirective has been set on the Part, the iterable will no longer be listened\nto and new values won't be written to the Part.\n\n[1]: https://github.com/tc39/proposal-async-iteration\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/async-replace.ts",
            "line": 35,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/async-replace.ts#L35",
            "moduleSpecifier": "lit-html/directives/async-replace.js"
          }
        ],
        "signatures": [
          {
            "id": 4923,
            "name": "asyncReplace",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that renders the items of an async iterable[1], replacing\nprevious values with new values, so that only one value is ever rendered\nat a time.",
              "text": "Async iterables are objects with a [Symbol.asyncIterator] method, which\nreturns an iterator who's `next()` method returns a Promise. When a new\nvalue is available, the Promise resolves and the value is rendered to the\nPart controlled by the directive. If another value other than this\ndirective has been set on the Part, the iterable will no longer be listened\nto and new values won't be written to the Part.\n\n[1]: https://github.com/tc39/proposal-async-iteration\n"
            },
            "typeParameter": [
              {
                "id": 4924,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 4925,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "An async iterable"
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "AsyncIterable"
                }
              },
              {
                "id": 4926,
                "name": "mapper",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "An optional function that maps from (value, index) to another\n    value. Useful for generating templates for each item in the iterable.\n"
                },
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 4927,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 4928,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "parameters": [
                          {
                            "id": 4929,
                            "name": "v",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {},
                            "type": {
                              "type": "reference",
                              "name": "T"
                            }
                          },
                          {
                            "id": 4930,
                            "name": "index",
                            "kind": 32768,
                            "kindString": "Parameter",
                            "flags": {
                              "isOptional": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            }
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 4931,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 4932,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 4933,
                        "name": "part",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 5071,
                          "name": "Part",
                          "location": {
                            "page": "custom-directives",
                            "anchor": "Part"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "void"
                        }
                      ],
                      "name": "Promise"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/directives/async-replace.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/async-replace.ts#L15",
            "moduleSpecifier": "lit-html/directives/async-replace.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "asyncReplace"
        }
      },
      {
        "id": 4935,
        "name": "cache",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Enables fast switching between multiple templates by caching the DOM nodes\nand TemplateInstances produced by the templates.",
          "text": "Example:\n\n```\nlet checked = false;\n\nhtml`\n  ${cache(checked ? html`input is checked` : html`input is not checked`)}\n`\n```\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/cache.ts",
            "line": 40,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/cache.ts#L40",
            "moduleSpecifier": "lit-html/directives/cache.js"
          }
        ],
        "signatures": [
          {
            "id": 4936,
            "name": "cache",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Enables fast switching between multiple templates by caching the DOM nodes\nand TemplateInstances produced by the templates.",
              "text": "Example:\n\n```\nlet checked = false;\n\nhtml`\n  ${cache(checked ? html`input is checked` : html`input is not checked`)}\n`\n```\n"
            },
            "parameters": [
              {
                "id": 4937,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 4938,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 4939,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 4940,
                        "name": "part",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 5071,
                          "name": "Part",
                          "location": {
                            "page": "custom-directives",
                            "anchor": "Part"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/directives/cache.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/cache.ts#L15",
            "moduleSpecifier": "lit-html/directives/cache.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "cache"
        }
      },
      {
        "id": 4945,
        "name": "classMap",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A directive that applies CSS classes. This must be used in the `class`\nattribute and must be the only part used in the attribute. It takes each\nproperty in the `classInfo` argument and adds the property name to the\nelement's `class` if the property value is truthy; if the property value is\nfalsey, the property name is removed from the element's `class`. For example\n`{foo: bar}` applies the class `foo` if the value of `bar` is truthy."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/class-map.ts",
            "line": 68,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/class-map.ts#L68",
            "moduleSpecifier": "lit-html/directives/class-map.js"
          }
        ],
        "signatures": [
          {
            "id": 4946,
            "name": "classMap",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that applies CSS classes. This must be used in the `class`\nattribute and must be the only part used in the attribute. It takes each\nproperty in the `classInfo` argument and adds the property name to the\nelement's `class` if the property value is truthy; if the property value is\nfalsey, the property name is removed from the element's `class`. For example\n`{foo: bar}` applies the class `foo` if the value of `bar` is truthy."
            },
            "parameters": [
              {
                "id": 4947,
                "name": "classInfo",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "\n"
                },
                "type": {
                  "type": "reference",
                  "id": 4942,
                  "name": "ClassInfo",
                  "location": {
                    "page": "directives",
                    "anchor": "ClassInfo"
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 4948,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 4949,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 4950,
                        "name": "part",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 5071,
                          "name": "Part",
                          "location": {
                            "page": "custom-directives",
                            "anchor": "Part"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/directives/class-map.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/class-map.ts#L15",
            "moduleSpecifier": "lit-html/directives/class-map.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "classMap"
        }
      },
      {
        "id": 4942,
        "name": "ClassInfo",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/class-map.ts",
            "line": 49,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/class-map.ts#L49",
            "moduleSpecifier": "lit-html/directives/class-map.js"
          }
        ],
        "indexSignature": {
          "id": 4943,
          "name": "__index",
          "kind": 8192,
          "kindString": "Index signature",
          "flags": {},
          "parameters": [
            {
              "id": 4944,
              "name": "name",
              "kind": 32768,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "src/directives/class-map.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/class-map.ts#L15",
            "moduleSpecifier": "lit-html/directives/class-map.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "ClassInfo"
        }
      },
      {
        "id": 4952,
        "name": "guard",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Prevents re-render of a template function until a single value or an array of\nvalues changes.",
          "text": "Example:\n\n```js\nhtml`\n  <div>\n    ${guard([user.id, company.id], () => html`...`)}\n  </div>\n```\n\nIn this case, the template only renders if either `user.id` or `company.id`\nchanges.\n\nguard() is useful with immutable data patterns, by preventing expensive work\nuntil data updates.\n\nExample:\n\n```js\nhtml`\n  <div>\n    ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n  </div>\n```\n\nIn this case, items are mapped over only when the array reference changes.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/guard.ts",
            "line": 52,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/guard.ts#L52",
            "moduleSpecifier": "lit-html/directives/guard.js"
          }
        ],
        "signatures": [
          {
            "id": 4953,
            "name": "guard",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Prevents re-render of a template function until a single value or an array of\nvalues changes.",
              "text": "Example:\n\n```js\nhtml`\n  <div>\n    ${guard([user.id, company.id], () => html`...`)}\n  </div>\n```\n\nIn this case, the template only renders if either `user.id` or `company.id`\nchanges.\n\nguard() is useful with immutable data patterns, by preventing expensive work\nuntil data updates.\n\nExample:\n\n```js\nhtml`\n  <div>\n    ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n  </div>\n```\n\nIn this case, items are mapped over only when the array reference changes.\n"
            },
            "parameters": [
              {
                "id": 4954,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "the value to check before re-rendering"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 4955,
                "name": "f",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "the template function\n"
                },
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 4956,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "signatures": [
                      {
                        "id": 4957,
                        "name": "__type",
                        "kind": 4096,
                        "kindString": "Call signature",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 4958,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 4959,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 4960,
                        "name": "part",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 5071,
                          "name": "Part",
                          "location": {
                            "page": "custom-directives",
                            "anchor": "Part"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/directives/guard.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/guard.ts#L15",
            "moduleSpecifier": "lit-html/directives/guard.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "guard"
        }
      },
      {
        "id": 4962,
        "name": "ifDefined",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "For AttributeParts, sets the attribute if the value is defined and removes\nthe attribute if the value is undefined.",
          "text": "For other part types, this directive is a no-op.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/if-defined.ts",
            "line": 25,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/if-defined.ts#L25",
            "moduleSpecifier": "lit-html/directives/if-defined.js"
          }
        ],
        "signatures": [
          {
            "id": 4963,
            "name": "ifDefined",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "For AttributeParts, sets the attribute if the value is defined and removes\nthe attribute if the value is undefined.",
              "text": "For other part types, this directive is a no-op.\n"
            },
            "parameters": [
              {
                "id": 4964,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 4965,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 4966,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 4967,
                        "name": "part",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 5071,
                          "name": "Part",
                          "location": {
                            "page": "custom-directives",
                            "anchor": "Part"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/directives/if-defined.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/if-defined.ts#L15",
            "moduleSpecifier": "lit-html/directives/if-defined.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "ifDefined"
        }
      },
      {
        "id": 4969,
        "name": "live",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Checks binding values against live DOM values, instead of previously bound\nvalues, when determining whether to update the value.",
          "text": "This is useful for cases where the DOM value may change from outside of\nlit-html, such as with a binding to an `<input>` element's `value` property,\na content editable elements text, or to a custom element that changes it's\nown properties or attributes.\n\nIn these cases if the DOM value changes, but the value set through lit-html\nbindings hasn't, lit-html won't know to update the DOM value and will leave\nit alone. If this is not what you want—if you want to overwrite the DOM\nvalue with the bound value no matter what—use the `live()` directive:\n\n    html`<input .value=${live(x)}>`\n\n`live()` performs a strict equality check agains the live DOM value, and if\nthe new value is equal to the live value, does nothing. This means that\n`live()` should not be used when the binding will cause a type conversion. If\nyou use `live()` with an attribute binding, make sure that only strings are\npassed in, or the binding will update every render.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/live.ts",
            "line": 39,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/live.ts#L39",
            "moduleSpecifier": "lit-html/directives/live.js"
          }
        ],
        "signatures": [
          {
            "id": 4970,
            "name": "live",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Checks binding values against live DOM values, instead of previously bound\nvalues, when determining whether to update the value.",
              "text": "This is useful for cases where the DOM value may change from outside of\nlit-html, such as with a binding to an `<input>` element's `value` property,\na content editable elements text, or to a custom element that changes it's\nown properties or attributes.\n\nIn these cases if the DOM value changes, but the value set through lit-html\nbindings hasn't, lit-html won't know to update the DOM value and will leave\nit alone. If this is not what you want—if you want to overwrite the DOM\nvalue with the bound value no matter what—use the `live()` directive:\n\n    html`<input .value=${live(x)}>`\n\n`live()` performs a strict equality check agains the live DOM value, and if\nthe new value is equal to the live value, does nothing. This means that\n`live()` should not be used when the binding will cause a type conversion. If\nyou use `live()` with an attribute binding, make sure that only strings are\npassed in, or the binding will update every render.\n"
            },
            "parameters": [
              {
                "id": 4971,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 4972,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 4973,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 4974,
                        "name": "part",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "id": 5095,
                              "name": "AttributePart",
                              "location": {
                                "page": "custom-directives",
                                "anchor": "AttributePart"
                              }
                            },
                            {
                              "type": "reference",
                              "id": 5214,
                              "name": "PropertyPart",
                              "location": {
                                "page": "custom-directives",
                                "anchor": "PropertyPart"
                              }
                            },
                            {
                              "type": "reference",
                              "id": 5106,
                              "name": "BooleanAttributePart",
                              "location": {
                                "page": "custom-directives",
                                "anchor": "BooleanAttributePart"
                              }
                            }
                          ]
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/directives/live.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/live.ts#L15",
            "moduleSpecifier": "lit-html/directives/live.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "live"
        }
      },
      {
        "id": 4988,
        "name": "repeat",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A directive that repeats a series of values (usually `TemplateResults`)\ngenerated from an iterable, and updates those items efficiently when the\niterable changes based on user-provided `keys` associated with each item.",
          "text": "Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\nmeaning previous DOM for a given key is moved into the new position if\nneeded, and DOM will never be reused with values for different keys (new DOM\nwill always be created for new keys). This is generally the most efficient\nway to use `repeat` since it performs minimum unnecessary work for insertions\nand removals.\n\nIMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\ngiven call to `repeat`. The behavior when two or more items have the same key\nis undefined.\n\nIf no `keyFn` is provided, this directive will perform similar to mapping\nitems to values, and DOM will be reused against potentially different items.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/repeat.ts",
            "line": 90,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/repeat.ts#L90",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "signatures": [
          {
            "id": 4989,
            "name": "repeat",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that repeats a series of values (usually `TemplateResults`)\ngenerated from an iterable, and updates those items efficiently when the\niterable changes based on user-provided `keys` associated with each item.",
              "text": "Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\nmeaning previous DOM for a given key is moved into the new position if\nneeded, and DOM will never be reused with values for different keys (new DOM\nwill always be created for new keys). This is generally the most efficient\nway to use `repeat` since it performs minimum unnecessary work for insertions\nand removals.\n\nIMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\ngiven call to `repeat`. The behavior when two or more items have the same key\nis undefined.\n\nIf no `keyFn` is provided, this directive will perform similar to mapping\nitems to values, and DOM will be reused against potentially different items.\n"
            },
            "typeParameter": [
              {
                "id": 4990,
                "name": "T",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {}
              }
            ],
            "parameters": [
              {
                "id": 4991,
                "name": "items",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable"
                }
              },
              {
                "id": 4992,
                "name": "keyFnOrTemplate",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "id": 4976,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "KeyFn",
                      "location": {
                        "page": "directives",
                        "anchor": "KeyFn"
                      }
                    },
                    {
                      "type": "reference",
                      "id": 4982,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate"
                      }
                    }
                  ]
                }
              },
              {
                "id": 4993,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "id": 4982,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 5049,
              "name": "DirectiveFn",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveFn"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/directives/repeat.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/repeat.ts#L15",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "repeat"
        }
      },
      {
        "id": 4982,
        "name": "ItemTemplate",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/repeat.ts",
            "line": 19,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/repeat.ts#L19",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "typeParameter": [
          {
            "id": 4987,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 4983,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "sources": [
              {
                "fileName": "directives/repeat.ts",
                "line": 19,
                "character": 30
              }
            ],
            "signatures": [
              {
                "id": 4984,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 4985,
                    "name": "item",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "T"
                    }
                  },
                  {
                    "id": 4986,
                    "name": "index",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "src/directives/repeat.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/repeat.ts#L15",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "ItemTemplate"
        }
      },
      {
        "id": 4976,
        "name": "KeyFn",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/repeat.ts",
            "line": 18,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/repeat.ts#L18",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "typeParameter": [
          {
            "id": 4981,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 4977,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "sources": [
              {
                "fileName": "directives/repeat.ts",
                "line": 18,
                "character": 23
              }
            ],
            "signatures": [
              {
                "id": 4978,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 4979,
                    "name": "item",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "T"
                    }
                  },
                  {
                    "id": 4980,
                    "name": "index",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "src/directives/repeat.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/repeat.ts#L15",
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "KeyFn"
        }
      },
      {
        "id": 4998,
        "name": "styleMap",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A directive that applies CSS properties to an element.",
          "text": "`styleMap` can only be used in the `style` attribute and must be the only\nexpression in the attribute. It takes the property names in the `styleInfo`\nobject and adds the property values as CSS properties. Property names with\ndashes (`-`) are assumed to be valid CSS property names and set on the\nelement's style object using `setProperty()`. Names without dashes are\nassumed to be camelCased JavaScript property names and set on the element's\nstyle object using property assignment, allowing the style object to\ntranslate JavaScript-style names to CSS property names.\n\nFor example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n'0'})` sets the `background-color`, `border-top` and `--size` properties.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/style-map.ts",
            "line": 44,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/style-map.ts#L44",
            "moduleSpecifier": "lit-html/directives/style-map.js"
          }
        ],
        "signatures": [
          {
            "id": 4999,
            "name": "styleMap",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A directive that applies CSS properties to an element.",
              "text": "`styleMap` can only be used in the `style` attribute and must be the only\nexpression in the attribute. It takes the property names in the `styleInfo`\nobject and adds the property values as CSS properties. Property names with\ndashes (`-`) are assumed to be valid CSS property names and set on the\nelement's style object using `setProperty()`. Names without dashes are\nassumed to be camelCased JavaScript property names and set on the element's\nstyle object using property assignment, allowing the style object to\ntranslate JavaScript-style names to CSS property names.\n\nFor example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n'0'})` sets the `background-color`, `border-top` and `--size` properties.\n"
            },
            "parameters": [
              {
                "id": 5000,
                "name": "styleInfo",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "\n"
                },
                "type": {
                  "type": "reference",
                  "id": 4995,
                  "name": "StyleInfo",
                  "location": {
                    "page": "directives",
                    "anchor": "StyleInfo"
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 5001,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 5002,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 5003,
                        "name": "part",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 5071,
                          "name": "Part",
                          "location": {
                            "page": "custom-directives",
                            "anchor": "Part"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/directives/style-map.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/style-map.ts#L15",
            "moduleSpecifier": "lit-html/directives/style-map.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "styleMap"
        }
      },
      {
        "id": 4995,
        "name": "StyleInfo",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/style-map.ts",
            "line": 17,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/style-map.ts#L17",
            "moduleSpecifier": "lit-html/directives/style-map.js"
          }
        ],
        "indexSignature": {
          "id": 4996,
          "name": "__index",
          "kind": 8192,
          "kindString": "Index signature",
          "flags": {},
          "parameters": [
            {
              "id": 4997,
              "name": "name",
              "kind": 32768,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        "entrypointSources": [
          {
            "fileName": "src/directives/style-map.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/style-map.ts#L15",
            "moduleSpecifier": "lit-html/directives/style-map.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "StyleInfo"
        }
      },
      {
        "id": 5005,
        "name": "templateContent",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Renders the content of a template element as HTML.",
          "text": "Note, the template should be developer controlled and not user controlled.\nRendering a user-controlled template with this directive\ncould lead to cross-site-scripting vulnerabilities.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/template-content.ts",
            "line": 36,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/template-content.ts#L36",
            "moduleSpecifier": "lit-html/directives/template-content.js"
          }
        ],
        "signatures": [
          {
            "id": 5006,
            "name": "templateContent",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Renders the content of a template element as HTML.",
              "text": "Note, the template should be developer controlled and not user controlled.\nRendering a user-controlled template with this directive\ncould lead to cross-site-scripting vulnerabilities.\n"
            },
            "parameters": [
              {
                "id": 5007,
                "name": "template",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "HTMLTemplateElement",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement"
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 5008,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 5009,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 5010,
                        "name": "part",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 5071,
                          "name": "Part",
                          "location": {
                            "page": "custom-directives",
                            "anchor": "Part"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/directives/template-content.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/template-content.ts#L15",
            "moduleSpecifier": "lit-html/directives/template-content.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "templateContent"
        }
      },
      {
        "id": 5012,
        "name": "unsafeHTML",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Renders the result as HTML, rather than text.",
          "text": "Note, this is unsafe to use with any user-provided input that hasn't been\nsanitized or escaped, as it may lead to cross-site-scripting\nvulnerabilities.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/unsafe-html.ts",
            "line": 37,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/unsafe-html.ts#L37",
            "moduleSpecifier": "lit-html/directives/unsafe-html.js"
          }
        ],
        "signatures": [
          {
            "id": 5013,
            "name": "unsafeHTML",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Renders the result as HTML, rather than text.",
              "text": "Note, this is unsafe to use with any user-provided input that hasn't been\nsanitized or escaped, as it may lead to cross-site-scripting\nvulnerabilities.\n"
            },
            "parameters": [
              {
                "id": 5014,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 5015,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 5016,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 5017,
                        "name": "part",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 5071,
                          "name": "Part",
                          "location": {
                            "page": "custom-directives",
                            "anchor": "Part"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/directives/unsafe-html.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/unsafe-html.ts#L15",
            "moduleSpecifier": "lit-html/directives/unsafe-html.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "unsafeHTML"
        }
      },
      {
        "id": 5019,
        "name": "unsafeSVG",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Renders the result as SVG, rather than text.",
          "text": "Note, this is unsafe to use with any user-provided input that hasn't been\nsanitized or escaped, as it may lead to cross-site-scripting\nvulnerabilities.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/unsafe-svg.ts",
            "line": 40,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/unsafe-svg.ts#L40",
            "moduleSpecifier": "lit-html/directives/unsafe-svg.js"
          }
        ],
        "signatures": [
          {
            "id": 5020,
            "name": "unsafeSVG",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Renders the result as SVG, rather than text.",
              "text": "Note, this is unsafe to use with any user-provided input that hasn't been\nsanitized or escaped, as it may lead to cross-site-scripting\nvulnerabilities.\n"
            },
            "parameters": [
              {
                "id": 5021,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 5022,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 5023,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 5024,
                        "name": "part",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 5071,
                          "name": "Part",
                          "location": {
                            "page": "custom-directives",
                            "anchor": "Part"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/directives/unsafe-svg.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/unsafe-svg.ts#L15",
            "moduleSpecifier": "lit-html/directives/unsafe-svg.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "unsafeSVG"
        }
      },
      {
        "id": 5026,
        "name": "until",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Renders one of a series of values, including Promises, to a Part.",
          "text": "Values are rendered in priority order, with the first argument having the\nhighest priority and the last argument having the lowest priority. If a\nvalue is a Promise, low-priority values will be rendered until it resolves.\n\nThe priority of values can be used to create placeholder content for async\ndata. For example, a Promise with pending content can be the first,\nhighest-priority, argument, and a non_promise loading indicator template can\nbe used as the second, lower-priority, argument. The loading indicator will\nrender immediately, and the primary content will render when the Promise\nresolves.\n\nExample:\n\n    const content = fetch('./content.txt').then(r => r.text());\n    html`${until(content, html`<span>Loading...</span>`)}`\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/directives/until.ts",
            "line": 51,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/until.ts#L51",
            "moduleSpecifier": "lit-html/directives/until.js"
          }
        ],
        "signatures": [
          {
            "id": 5027,
            "name": "until",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Renders one of a series of values, including Promises, to a Part.",
              "text": "Values are rendered in priority order, with the first argument having the\nhighest priority and the last argument having the lowest priority. If a\nvalue is a Promise, low-priority values will be rendered until it resolves.\n\nThe priority of values can be used to create placeholder content for async\ndata. For example, a Promise with pending content can be the first,\nhighest-priority, argument, and a non_promise loading indicator template can\nbe used as the second, lower-priority, argument. The loading indicator will\nrender immediately, and the primary content will render when the Promise\nresolves.\n\nExample:\n\n    const content = fetch('./content.txt').then(r => r.text());\n    html`${until(content, html`<span>Loading...</span>`)}`\n"
            },
            "parameters": [
              {
                "id": 5028,
                "name": "args",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 5029,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 5030,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 5031,
                        "name": "part",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 5071,
                          "name": "Part",
                          "location": {
                            "page": "custom-directives",
                            "anchor": "Part"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/directives/until.ts",
            "line": 15,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/directives/until.ts#L15",
            "moduleSpecifier": "lit-html/directives/until.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "until"
        }
      }
    ]
  },
  {
    "slug": "custom-directives",
    "title": "Custom directives",
    "versionLinks": {
      "v2": "api/custom-directives/"
    },
    "items": [
      {
        "id": 5078,
        "name": "AttributeCommitter",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "Writes attribute values to the DOM for a group of AttributeParts bound to a\nsingle attribute. The value is only set once even if there are multiple parts\nfor an attribute."
        },
        "children": [
          {
            "id": 5079,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 48,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L48",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5080,
                "name": "new AttributeCommitter",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 5081,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    }
                  },
                  {
                    "id": 5082,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 5083,
                    "name": "strings",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5078,
                  "name": "AttributeCommitter",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "AttributeCommitter"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributeCommitter.constructor"
            }
          },
          {
            "id": 5088,
            "name": "dirty",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 46,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L46",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "defaultValue": "true",
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributeCommitter.dirty"
            }
          },
          {
            "id": 5084,
            "name": "element",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 42,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L42",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributeCommitter.element"
            }
          },
          {
            "id": 5085,
            "name": "name",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 43,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L43",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributeCommitter.name"
            }
          },
          {
            "id": 5087,
            "name": "parts",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 45,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L45",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 5095,
                  "name": "AttributePart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "AttributePart"
                  }
                }
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributeCommitter.parts"
            }
          },
          {
            "id": 5086,
            "name": "strings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 44,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L44",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributeCommitter.strings"
            }
          },
          {
            "id": 5093,
            "name": "commit",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 113,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L113",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5094,
                "name": "commit",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributeCommitter.commit"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              5079
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5088,
              5084,
              5085,
              5087,
              5086
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              5089,
              5091,
              5093
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/parts.ts",
            "line": 41,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L41",
            "moduleSpecifier": "lit-html/lib/parts.js"
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 5196,
            "name": "PropertyCommitter",
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyCommitter"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "AttributeCommitter"
        }
      },
      {
        "id": 5095,
        "name": "AttributePart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "A Part that controls all or part of an attribute value."
        },
        "children": [
          {
            "id": 5096,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 128,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L128",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5097,
                "name": "new AttributePart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 5098,
                    "name": "committer",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5078,
                      "name": "AttributeCommitter",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "AttributeCommitter"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5095,
                  "name": "AttributePart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "AttributePart"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.constructor"
            }
          },
          {
            "id": 5099,
            "name": "committer",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 125,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L125",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 5078,
              "name": "AttributeCommitter",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributeCommitter"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.committer"
            }
          },
          {
            "id": 5100,
            "name": "value",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 126,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L126",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "defaultValue": "...",
            "implementationOf": {
              "type": "reference",
              "id": 5072,
              "name": "Part.value",
              "location": {
                "page": "custom-directives",
                "anchor": "Part.value"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.value"
            }
          },
          {
            "id": 5104,
            "name": "commit",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Commits the current part value, causing it to actually be written to the\nDOM.",
              "text": "Directives are run at the start of `commit`, so that if they call\n`part.setValue(...)` synchronously that value will be used in the current\ncommit, and there's no need to call `part.commit()` within the directive.\nIf directives set a part value asynchronously, then they must call\n`part.commit()` manually.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 144,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L144",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5105,
                "name": "commit",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Commits the current part value, causing it to actually be written to the\nDOM.",
                  "text": "Directives are run at the start of `commit`, so that if they call\n`part.setValue(...)` synchronously that value will be used in the current\ncommit, and there's no need to call `part.commit()` within the directive.\nIf directives set a part value asynchronously, then they must call\n`part.commit()` manually.\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 5077,
                  "name": "Part.commit"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 5076,
              "name": "Part.commit",
              "location": {
                "page": "custom-directives",
                "anchor": "Part.commit"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.commit"
            }
          },
          {
            "id": 5101,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the current part value, but does not write it to the DOM."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 132,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L132",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5102,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the current part value, but does not write it to the DOM."
                },
                "parameters": [
                  {
                    "id": 5103,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 5074,
                  "name": "Part.setValue"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 5073,
              "name": "Part.setValue",
              "location": {
                "page": "custom-directives",
                "anchor": "Part.setValue"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.setValue"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              5096
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5099,
              5100
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              5104,
              5101
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/parts.ts",
            "line": 124,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L124",
            "moduleSpecifier": "lit-html/lib/parts.js"
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 5214,
            "name": "PropertyPart",
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart"
            }
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "id": 5071,
            "name": "Part",
            "location": {
              "page": "custom-directives",
              "anchor": "Part"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "AttributePart"
        }
      },
      {
        "id": 5106,
        "name": "BooleanAttributePart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "Implements a boolean attribute, roughly as defined in the HTML\nspecification.",
          "text": "If the value is truthy, then the attribute is present with a value of\n''. If the value is falsey, the attribute is removed.\n"
        },
        "children": [
          {
            "id": 5107,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 374,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L374",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5108,
                "name": "new BooleanAttributePart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 5109,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    }
                  },
                  {
                    "id": 5110,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 5111,
                    "name": "strings",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5106,
                  "name": "BooleanAttributePart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "BooleanAttributePart"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.constructor"
            }
          },
          {
            "id": 5112,
            "name": "element",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 368,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L368",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.element"
            }
          },
          {
            "id": 5113,
            "name": "name",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 369,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L369",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.name"
            }
          },
          {
            "id": 5114,
            "name": "strings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 370,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L370",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.strings"
            }
          },
          {
            "id": 5115,
            "name": "value",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 371,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L371",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "defaultValue": "...",
            "implementationOf": {
              "type": "reference",
              "id": 5072,
              "name": "Part.value",
              "location": {
                "page": "custom-directives",
                "anchor": "Part.value"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.value"
            }
          },
          {
            "id": 5120,
            "name": "commit",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Commits the current part value, causing it to actually be written to the\nDOM.",
              "text": "Directives are run at the start of `commit`, so that if they call\n`part.setValue(...)` synchronously that value will be used in the current\ncommit, and there's no need to call `part.commit()` within the directive.\nIf directives set a part value asynchronously, then they must call\n`part.commit()` manually.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 388,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L388",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5121,
                "name": "commit",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Commits the current part value, causing it to actually be written to the\nDOM.",
                  "text": "Directives are run at the start of `commit`, so that if they call\n`part.setValue(...)` synchronously that value will be used in the current\ncommit, and there's no need to call `part.commit()` within the directive.\nIf directives set a part value asynchronously, then they must call\n`part.commit()` manually.\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 5077,
                  "name": "Part.commit"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 5076,
              "name": "Part.commit",
              "location": {
                "page": "custom-directives",
                "anchor": "Part.commit"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.commit"
            }
          },
          {
            "id": 5117,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the current part value, but does not write it to the DOM."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 384,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L384",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5118,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the current part value, but does not write it to the DOM."
                },
                "parameters": [
                  {
                    "id": 5119,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 5074,
                  "name": "Part.setValue"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 5073,
              "name": "Part.setValue",
              "location": {
                "page": "custom-directives",
                "anchor": "Part.setValue"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.setValue"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              5107
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5116,
              5112,
              5113,
              5114,
              5115
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              5120,
              5117
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/parts.ts",
            "line": 367,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L367",
            "moduleSpecifier": "lit-html/lib/parts.js"
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "id": 5071,
            "name": "Part",
            "location": {
              "page": "custom-directives",
              "anchor": "Part"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "BooleanAttributePart"
        }
      },
      {
        "id": 5293,
        "name": "createMarker",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/template.ts",
            "line": 225,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template.ts#L225",
            "moduleSpecifier": "lit-html/lib/template.js"
          }
        ],
        "signatures": [
          {
            "id": 5294,
            "name": "createMarker",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "type": {
              "type": "reference",
              "name": "Comment"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "createMarker"
        }
      },
      {
        "id": 5044,
        "name": "defaultTemplateProcessor",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/default-template-processor.ts",
            "line": 59,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/default-template-processor.ts#L59",
            "moduleSpecifier": "lit-html/lib/default-template-processor.js"
          }
        ],
        "type": {
          "type": "reference",
          "id": 5032,
          "name": "DefaultTemplateProcessor",
          "location": {
            "page": "custom-directives",
            "anchor": "DefaultTemplateProcessor"
          }
        },
        "defaultValue": "...",
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "defaultTemplateProcessor"
        }
      },
      {
        "id": 5032,
        "name": "DefaultTemplateProcessor",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "Creates Parts when a template is instantiated."
        },
        "children": [
          {
            "id": 5033,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 5034,
                "name": "new DefaultTemplateProcessor",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 5032,
                  "name": "DefaultTemplateProcessor",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "DefaultTemplateProcessor"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "DefaultTemplateProcessor.constructor"
            }
          },
          {
            "id": 5035,
            "name": "handleAttributeExpressions",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Create parts for an attribute-position binding, given the event, attribute\nname, and string literals."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/default-template-processor.ts",
                "line": 33,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/default-template-processor.ts#L33",
                "moduleSpecifier": "lit-html/lib/default-template-processor.js"
              }
            ],
            "signatures": [
              {
                "id": 5036,
                "name": "handleAttributeExpressions",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Create parts for an attribute-position binding, given the event, attribute\nname, and string literals."
                },
                "parameters": [
                  {
                    "id": 5037,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The element containing the binding"
                    },
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    }
                  },
                  {
                    "id": 5038,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The attribute name"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 5039,
                    "name": "strings",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The string literals. There are always at least two strings,\n  event for fully-controlled bindings with a single expression.\n"
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  },
                  {
                    "id": 5040,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5225,
                      "name": "RenderOptions",
                      "location": {
                        "page": "templates",
                        "anchor": "RenderOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "typeOperator",
                  "operator": "readonly",
                  "target": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 5071,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  }
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 5255,
                  "name": "TemplateProcessor.handleAttributeExpressions"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 5254,
              "name": "TemplateProcessor.handleAttributeExpressions",
              "location": {
                "page": "custom-directives",
                "anchor": "TemplateProcessor.handleAttributeExpressions"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "DefaultTemplateProcessor.handleAttributeExpressions"
            }
          },
          {
            "id": 5041,
            "name": "handleTextExpression",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Create parts for a text-position binding."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/default-template-processor.ts",
                "line": 54,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/default-template-processor.ts#L54",
                "moduleSpecifier": "lit-html/lib/default-template-processor.js"
              }
            ],
            "signatures": [
              {
                "id": 5042,
                "name": "handleTextExpression",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Create parts for a text-position binding."
                },
                "parameters": [
                  {
                    "id": 5043,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5225,
                      "name": "RenderOptions",
                      "location": {
                        "page": "templates",
                        "anchor": "RenderOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5152,
                  "name": "NodePart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "NodePart"
                  }
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 5261,
                  "name": "TemplateProcessor.handleTextExpression"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 5260,
              "name": "TemplateProcessor.handleTextExpression",
              "location": {
                "page": "custom-directives",
                "anchor": "TemplateProcessor.handleTextExpression"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "DefaultTemplateProcessor.handleTextExpression"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              5033
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              5035,
              5041
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/default-template-processor.ts",
            "line": 23,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/default-template-processor.ts#L23",
            "moduleSpecifier": "lit-html/lib/default-template-processor.js"
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "id": 5253,
            "name": "TemplateProcessor",
            "location": {
              "page": "custom-directives",
              "anchor": "TemplateProcessor"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "DefaultTemplateProcessor"
        }
      },
      {
        "id": 5045,
        "name": "directive",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Brands a function as a directive factory function so that lit-html will call\nthe function during template rendering, rather than passing as a value.",
          "text": "A _directive_ is a function that takes a Part as an argument. It has the\nsignature: `(part: Part) => void`.\n\nA directive _factory_ is a function that takes arguments for data and\nconfiguration and returns a directive. Users of directive usually refer to\nthe directive factory as the directive. For example, \"The repeat directive\".\n\nUsually a template author will invoke a directive factory in their template\nwith relevant arguments, which will then return a directive function.\n\nHere's an example of using the `repeat()` directive factory that takes an\narray and a function to render an item:\n\n```js\nhtml`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n```\n\nWhen `repeat` is invoked, it returns a directive function that closes over\n`items` and the template function. When the outer template is rendered, the\nreturn directive function is called with the Part for the expression.\n`repeat` then performs it's custom logic to render multiple items.\n",
          "tags": [
            {
              "tag": "example",
              "text": "\n\nimport {directive, html} from 'lit-html';\n\nconst immutable = directive((v) => (part) => {\n  if (part.value !== v) {\n    part.setValue(v)\n  }\n});\n"
            }
          ]
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/directive.ts",
            "line": 64,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/directive.ts#L64",
            "moduleSpecifier": "lit-html/lib/directive.js"
          }
        ],
        "signatures": [
          {
            "id": 5046,
            "name": "directive",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Brands a function as a directive factory function so that lit-html will call\nthe function during template rendering, rather than passing as a value.",
              "text": "A _directive_ is a function that takes a Part as an argument. It has the\nsignature: `(part: Part) => void`.\n\nA directive _factory_ is a function that takes arguments for data and\nconfiguration and returns a directive. Users of directive usually refer to\nthe directive factory as the directive. For example, \"The repeat directive\".\n\nUsually a template author will invoke a directive factory in their template\nwith relevant arguments, which will then return a directive function.\n\nHere's an example of using the `repeat()` directive factory that takes an\narray and a function to render an item:\n\n```js\nhtml`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n```\n\nWhen `repeat` is invoked, it returns a directive function that closes over\n`items` and the template function. When the outer template is rendered, the\nreturn directive function is called with the Part for the expression.\n`repeat` then performs it's custom logic to render multiple items.\n",
              "tags": [
                {
                  "tag": "example",
                  "text": "\n\nimport {directive, html} from 'lit-html';\n\nconst immutable = directive((v) => (part) => {\n  if (part.value !== v) {\n    part.setValue(v)\n  }\n});\n"
                }
              ]
            },
            "typeParameter": [
              {
                "id": 5047,
                "name": "F",
                "kind": 131072,
                "kindString": "Type parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "DirectiveFactory"
                }
              }
            ],
            "parameters": [
              {
                "id": 5048,
                "name": "f",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "The directive factory function. Must be a function that returns a\nfunction of the signature `(part: Part) => void`. The returned function will\nbe called with the part object.\n"
                },
                "type": {
                  "type": "reference",
                  "name": "F"
                }
              }
            ],
            "type": {
              "type": "reference",
              "name": "F"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "directive"
        }
      },
      {
        "id": 5122,
        "name": "EventPart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 5123,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 486,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L486",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5124,
                "name": "new EventPart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 5125,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    }
                  },
                  {
                    "id": 5126,
                    "name": "eventName",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 5127,
                    "name": "eventContext",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "EventTarget"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5122,
                  "name": "EventPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "EventPart"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.constructor"
            }
          },
          {
            "id": 5128,
            "name": "element",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 478,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L478",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.element"
            }
          },
          {
            "id": 5130,
            "name": "eventContext",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 480,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L480",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "EventTarget"
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.eventContext"
            }
          },
          {
            "id": 5129,
            "name": "eventName",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 479,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L479",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.eventName"
            }
          },
          {
            "id": 5131,
            "name": "value",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 481,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L481",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "name": "EventHandlerWithOptions"
                }
              ]
            },
            "defaultValue": "...",
            "implementationOf": {
              "type": "reference",
              "id": 5072,
              "name": "Part.value",
              "location": {
                "page": "custom-directives",
                "anchor": "Part.value"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.value"
            }
          },
          {
            "id": 5141,
            "name": "commit",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Commits the current part value, causing it to actually be written to the\nDOM.",
              "text": "Directives are run at the start of `commit`, so that if they call\n`part.setValue(...)` synchronously that value will be used in the current\ncommit, and there's no need to call `part.commit()` within the directive.\nIf directives set a part value asynchronously, then they must call\n`part.commit()` manually.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 497,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L497",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5142,
                "name": "commit",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Commits the current part value, causing it to actually be written to the\nDOM.",
                  "text": "Directives are run at the start of `commit`, so that if they call\n`part.setValue(...)` synchronously that value will be used in the current\ncommit, and there's no need to call `part.commit()` within the directive.\nIf directives set a part value asynchronously, then they must call\n`part.commit()` manually.\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 5077,
                  "name": "Part.commit"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 5076,
              "name": "Part.commit",
              "location": {
                "page": "custom-directives",
                "anchor": "Part.commit"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.commit"
            }
          },
          {
            "id": 5143,
            "name": "handleEvent",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 530,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L530",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5144,
                "name": "handleEvent",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 5145,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Event"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.handleEvent"
            }
          },
          {
            "id": 5138,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the current part value, but does not write it to the DOM."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 493,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L493",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5139,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the current part value, but does not write it to the DOM."
                },
                "parameters": [
                  {
                    "id": 5140,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "EventHandlerWithOptions"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 5074,
                  "name": "Part.setValue"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 5073,
              "name": "Part.setValue",
              "location": {
                "page": "custom-directives",
                "anchor": "Part.setValue"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.setValue"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              5123
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5134,
              5132,
              5133,
              5128,
              5130,
              5129,
              5131
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              5141,
              5143,
              5138
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/parts.ts",
            "line": 477,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L477",
            "moduleSpecifier": "lit-html/lib/parts.js"
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "id": 5071,
            "name": "Part",
            "location": {
              "page": "custom-directives",
              "anchor": "Part"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "EventPart"
        }
      },
      {
        "id": 5053,
        "name": "isDirective",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/directive.ts",
            "line": 71,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/directive.ts#L71",
            "moduleSpecifier": "lit-html/lib/directive.js"
          }
        ],
        "signatures": [
          {
            "id": 5054,
            "name": "isDirective",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 5055,
                "name": "o",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "predicate",
              "name": "o",
              "asserts": false,
              "targetType": {
                "type": "reference",
                "id": 5049,
                "name": "DirectiveFn",
                "location": {
                  "page": "custom-directives",
                  "anchor": "DirectiveFn"
                }
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isDirective"
        }
      },
      {
        "id": 5146,
        "name": "isIterable",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/parts.ts",
            "line": 30,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L30",
            "moduleSpecifier": "lit-html/lib/parts.js"
          }
        ],
        "signatures": [
          {
            "id": 5147,
            "name": "isIterable",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 5148,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "predicate",
              "name": "value",
              "asserts": false,
              "targetType": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                ],
                "name": "Iterable"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isIterable"
        }
      },
      {
        "id": 5149,
        "name": "isPrimitive",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/parts.ts",
            "line": 25,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L25",
            "moduleSpecifier": "lit-html/lib/parts.js"
          }
        ],
        "signatures": [
          {
            "id": 5150,
            "name": "isPrimitive",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 5151,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "predicate",
              "name": "value",
              "asserts": false,
              "targetType": {
                "type": "reference",
                "name": "Primitive"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isPrimitive"
        }
      },
      {
        "id": 5295,
        "name": "isTemplatePartActive",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/template.ts",
            "line": 221,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template.ts#L221",
            "moduleSpecifier": "lit-html/lib/template.js"
          }
        ],
        "signatures": [
          {
            "id": 5296,
            "name": "isTemplatePartActive",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 5297,
                "name": "part",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplatePart"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isTemplatePartActive"
        }
      },
      {
        "id": 5067,
        "name": "noChange",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A sentinel value that signals that a value was handled by a directive and\nshould not be written to the DOM."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/part.ts",
            "line": 45,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/part.ts#L45",
            "moduleSpecifier": "lit-html/lib/part.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 5068,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {}
          }
        },
        "defaultValue": "{}",
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "noChange"
        }
      },
      {
        "id": 5152,
        "name": "NodePart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "A Part that controls a location within a Node tree. Like a Range, NodePart\nhas start and end locations and can set and update the Nodes between those\nlocations.",
          "text": "NodeParts support several value types: primitives, Nodes, TemplateResults,\nas well as arrays and iterables of those types.\n"
        },
        "children": [
          {
            "id": 5153,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 172,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L172",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5154,
                "name": "new NodePart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 5155,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5225,
                      "name": "RenderOptions",
                      "location": {
                        "page": "templates",
                        "anchor": "RenderOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5152,
                  "name": "NodePart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "NodePart"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "NodePart.constructor"
            }
          },
          {
            "id": 5158,
            "name": "endNode",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 168,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L168",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Node"
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "NodePart.endNode"
            }
          },
          {
            "id": 5156,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 166,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L166",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 5225,
              "name": "RenderOptions",
              "location": {
                "page": "templates",
                "anchor": "RenderOptions"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "NodePart.options"
            }
          },
          {
            "id": 5157,
            "name": "startNode",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 167,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L167",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Node"
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "NodePart.startNode"
            }
          },
          {
            "id": 5159,
            "name": "value",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 169,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L169",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "defaultValue": "...",
            "implementationOf": {
              "type": "reference",
              "id": 5072,
              "name": "Part.value",
              "location": {
                "page": "custom-directives",
                "anchor": "Part.value"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "NodePart.value"
            }
          },
          {
            "id": 5161,
            "name": "appendInto",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Appends this part into a container.",
              "text": "This part must be empty, as its contents are not automatically moved.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 181,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L181",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5162,
                "name": "appendInto",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Appends this part into a container.",
                  "text": "This part must be empty, as its contents are not automatically moved.\n"
                },
                "parameters": [
                  {
                    "id": 5163,
                    "name": "container",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Node"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "NodePart.appendInto"
            }
          },
          {
            "id": 5167,
            "name": "appendIntoPart",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Appends this part into a parent part.",
              "text": "This part must be empty, as its contents are not automatically moved.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 203,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L203",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5168,
                "name": "appendIntoPart",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Appends this part into a parent part.",
                  "text": "This part must be empty, as its contents are not automatically moved.\n"
                },
                "parameters": [
                  {
                    "id": 5169,
                    "name": "part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5152,
                      "name": "NodePart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "NodePart"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "NodePart.appendIntoPart"
            }
          },
          {
            "id": 5193,
            "name": "clear",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 354,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L354",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5194,
                "name": "clear",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 5195,
                    "name": "startNode",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Node"
                    },
                    "defaultValue": "..."
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "NodePart.clear"
            }
          },
          {
            "id": 5176,
            "name": "commit",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Commits the current part value, causing it to actually be written to the\nDOM.",
              "text": "Directives are run at the start of `commit`, so that if they call\n`part.setValue(...)` synchronously that value will be used in the current\ncommit, and there's no need to call `part.commit()` within the directive.\nIf directives set a part value asynchronously, then they must call\n`part.commit()` manually.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 223,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L223",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5177,
                "name": "commit",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Commits the current part value, causing it to actually be written to the\nDOM.",
                  "text": "Directives are run at the start of `commit`, so that if they call\n`part.setValue(...)` synchronously that value will be used in the current\ncommit, and there's no need to call `part.commit()` within the directive.\nIf directives set a part value asynchronously, then they must call\n`part.commit()` manually.\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 5077,
                  "name": "Part.commit"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 5076,
              "name": "Part.commit",
              "location": {
                "page": "custom-directives",
                "anchor": "Part.commit"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "NodePart.commit"
            }
          },
          {
            "id": 5164,
            "name": "insertAfterNode",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Inserts this part after the `ref` node (between `ref` and `ref`'s next\nsibling). Both `ref` and its next sibling must be static, unchanging nodes\nsuch as those that appear in a literal section of a template.",
              "text": "This part must be empty, as its contents are not automatically moved.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 193,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L193",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5165,
                "name": "insertAfterNode",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Inserts this part after the `ref` node (between `ref` and `ref`'s next\nsibling). Both `ref` and its next sibling must be static, unchanging nodes\nsuch as those that appear in a literal section of a template.",
                  "text": "This part must be empty, as its contents are not automatically moved.\n"
                },
                "parameters": [
                  {
                    "id": 5166,
                    "name": "ref",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Node"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "NodePart.insertAfterNode"
            }
          },
          {
            "id": 5170,
            "name": "insertAfterPart",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Inserts this part after the `ref` part.",
              "text": "This part must be empty, as its contents are not automatically moved.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 213,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L213",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5171,
                "name": "insertAfterPart",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Inserts this part after the `ref` part.",
                  "text": "This part must be empty, as its contents are not automatically moved.\n"
                },
                "parameters": [
                  {
                    "id": 5172,
                    "name": "ref",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5152,
                      "name": "NodePart",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "NodePart"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "NodePart.insertAfterPart"
            }
          },
          {
            "id": 5173,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the current part value, but does not write it to the DOM."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 219,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L219",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5174,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the current part value, but does not write it to the DOM."
                },
                "parameters": [
                  {
                    "id": 5175,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "id": 5074,
                  "name": "Part.setValue"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "id": 5073,
              "name": "Part.setValue",
              "location": {
                "page": "custom-directives",
                "anchor": "Part.setValue"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "NodePart.setValue"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              5153
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5160,
              5158,
              5156,
              5157,
              5159
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              5190,
              5181,
              5187,
              5184,
              5178,
              5161,
              5167,
              5193,
              5176,
              5164,
              5170,
              5173
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/parts.ts",
            "line": 165,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L165",
            "moduleSpecifier": "lit-html/lib/parts.js"
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "id": 5071,
            "name": "Part",
            "location": {
              "page": "custom-directives",
              "anchor": "Part"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "NodePart"
        }
      },
      {
        "id": 5228,
        "name": "parts",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/render.ts",
            "line": 20,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/render.ts#L20",
            "moduleSpecifier": "lit-html/lib/render.js"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "name": "Node"
            },
            {
              "type": "reference",
              "id": 5152,
              "name": "NodePart",
              "location": {
                "page": "custom-directives",
                "anchor": "NodePart"
              }
            }
          ],
          "name": "WeakMap"
        },
        "defaultValue": "...",
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "parts"
        }
      },
      {
        "id": 5196,
        "name": "PropertyCommitter",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "Sets attribute values for PropertyParts, so that the value is only set once\neven if there are multiple parts for a property.",
          "text": "If an expression controls the whole property value, then the value is simply\nassigned to the property under control. If there are string literals or\nmultiple expressions, then the strings are expressions are interpolated into\na string first.\n"
        },
        "children": [
          {
            "id": 5197,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 422,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L422",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5198,
                "name": "new PropertyCommitter",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 5199,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    }
                  },
                  {
                    "id": 5200,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 5201,
                    "name": "strings",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5196,
                  "name": "PropertyCommitter",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "PropertyCommitter"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "id": 5080,
                  "name": "AttributeCommitter.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 5079,
              "name": "AttributeCommitter.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributeCommitter.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyCommitter.constructor"
            }
          },
          {
            "id": 5213,
            "name": "dirty",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 46,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L46",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "defaultValue": "true",
            "inheritedFrom": {
              "type": "reference",
              "id": 5088,
              "name": "AttributeCommitter.dirty",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributeCommitter.dirty"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyCommitter.dirty"
            }
          },
          {
            "id": 5209,
            "name": "element",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 42,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L42",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 5084,
              "name": "AttributeCommitter.element",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributeCommitter.element"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyCommitter.element"
            }
          },
          {
            "id": 5210,
            "name": "name",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 43,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L43",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 5085,
              "name": "AttributeCommitter.name",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributeCommitter.name"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyCommitter.name"
            }
          },
          {
            "id": 5212,
            "name": "parts",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 45,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L45",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 5095,
                  "name": "AttributePart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "AttributePart"
                  }
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 5087,
              "name": "AttributeCommitter.parts",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributeCommitter.parts"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyCommitter.parts"
            }
          },
          {
            "id": 5202,
            "name": "single",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 420,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L420",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyCommitter.single"
            }
          },
          {
            "id": 5211,
            "name": "strings",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 44,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L44",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 5086,
              "name": "AttributeCommitter.strings",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributeCommitter.strings"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyCommitter.strings"
            }
          },
          {
            "id": 5207,
            "name": "commit",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 439,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L439",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5208,
                "name": "commit",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 5094,
                  "name": "AttributeCommitter.commit"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 5093,
              "name": "AttributeCommitter.commit",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributeCommitter.commit"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyCommitter.commit"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              5197
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5213,
              5209,
              5210,
              5212,
              5202,
              5211
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              5203,
              5205,
              5207
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/parts.ts",
            "line": 419,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L419",
            "moduleSpecifier": "lit-html/lib/parts.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 5078,
            "name": "AttributeCommitter",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributeCommitter"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "PropertyCommitter"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 5078,
            "name": "AttributeCommitter",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributeCommitter"
            }
          }
        ]
      },
      {
        "id": 5214,
        "name": "PropertyPart",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 5215,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 5216,
                "name": "new PropertyPart",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 5217,
                    "name": "committer",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5078,
                      "name": "AttributeCommitter",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "AttributeCommitter"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5214,
                  "name": "PropertyPart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "PropertyPart"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 5097,
                  "name": "AttributePart.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 5096,
              "name": "AttributePart.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.constructor"
            }
          },
          {
            "id": 5218,
            "name": "committer",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 125,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L125",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 5078,
              "name": "AttributeCommitter",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributeCommitter"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 5099,
              "name": "AttributePart.committer",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.committer"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.committer"
            }
          },
          {
            "id": 5219,
            "name": "value",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 126,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L126",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "defaultValue": "...",
            "inheritedFrom": {
              "type": "reference",
              "id": 5100,
              "name": "AttributePart.value",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.value"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.value"
            }
          },
          {
            "id": 5223,
            "name": "commit",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Commits the current part value, causing it to actually be written to the\nDOM.",
              "text": "Directives are run at the start of `commit`, so that if they call\n`part.setValue(...)` synchronously that value will be used in the current\ncommit, and there's no need to call `part.commit()` within the directive.\nIf directives set a part value asynchronously, then they must call\n`part.commit()` manually.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 144,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L144",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5224,
                "name": "commit",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Commits the current part value, causing it to actually be written to the\nDOM.",
                  "text": "Directives are run at the start of `commit`, so that if they call\n`part.setValue(...)` synchronously that value will be used in the current\ncommit, and there's no need to call `part.commit()` within the directive.\nIf directives set a part value asynchronously, then they must call\n`part.commit()` manually.\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 5105,
                  "name": "AttributePart.commit"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 5104,
              "name": "AttributePart.commit",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.commit"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.commit"
            }
          },
          {
            "id": 5220,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the current part value, but does not write it to the DOM."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/parts.ts",
                "line": 132,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L132",
                "moduleSpecifier": "lit-html/lib/parts.js"
              }
            ],
            "signatures": [
              {
                "id": 5221,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the current part value, but does not write it to the DOM."
                },
                "parameters": [
                  {
                    "id": 5222,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 5102,
                  "name": "AttributePart.setValue"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 5101,
              "name": "AttributePart.setValue",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.setValue"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.setValue"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              5215
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5218,
              5219
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              5223,
              5220
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/parts.ts",
            "line": 448,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/parts.ts#L448",
            "moduleSpecifier": "lit-html/lib/parts.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 5095,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "PropertyPart"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 5095,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ]
      },
      {
        "id": 5056,
        "name": "removeNodes",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n`container`."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/dom.ts",
            "line": 43,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/dom.ts#L43",
            "moduleSpecifier": "lit-html/lib/dom.js"
          }
        ],
        "signatures": [
          {
            "id": 5057,
            "name": "removeNodes",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n`container`."
            },
            "parameters": [
              {
                "id": 5058,
                "name": "container",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Node"
                }
              },
              {
                "id": 5059,
                "name": "start",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "Node"
                    }
                  ]
                }
              },
              {
                "id": 5060,
                "name": "end",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "Node"
                    }
                  ]
                },
                "defaultValue": "null"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "removeNodes"
        }
      },
      {
        "id": 5061,
        "name": "reparentNodes",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\ninto another container (could be the same container), before `before`. If\n`before` is null, it appends the nodes to the container."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/dom.ts",
            "line": 27,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/dom.ts#L27",
            "moduleSpecifier": "lit-html/lib/dom.js"
          }
        ],
        "signatures": [
          {
            "id": 5062,
            "name": "reparentNodes",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\ninto another container (could be the same container), before `before`. If\n`before` is null, it appends the nodes to the container."
            },
            "parameters": [
              {
                "id": 5063,
                "name": "container",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "Node"
                }
              },
              {
                "id": 5064,
                "name": "start",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "Node"
                    }
                  ]
                }
              },
              {
                "id": 5065,
                "name": "end",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "Node"
                    }
                  ]
                },
                "defaultValue": "null"
              },
              {
                "id": 5066,
                "name": "before",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "Node"
                    }
                  ]
                },
                "defaultValue": "null"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "reparentNodes"
        }
      },
      {
        "id": 5298,
        "name": "Template",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "An updatable Template that tracks the location of dynamic parts."
        },
        "children": [
          {
            "id": 5299,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template.ts",
                "line": 43,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template.ts#L43",
                "moduleSpecifier": "lit-html/lib/template.js"
              }
            ],
            "signatures": [
              {
                "id": 5300,
                "name": "new Template",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 5301,
                    "name": "result",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5278,
                      "name": "TemplateResult",
                      "location": {
                        "page": "templates",
                        "anchor": "TemplateResult"
                      }
                    }
                  },
                  {
                    "id": 5302,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "HTMLTemplateElement",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5298,
                  "name": "Template",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "Template"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "Template.constructor"
            }
          },
          {
            "id": 5304,
            "name": "element",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template.ts",
                "line": 41,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template.ts#L41",
                "moduleSpecifier": "lit-html/lib/template.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLTemplateElement",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "Template.element"
            }
          },
          {
            "id": 5303,
            "name": "parts",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template.ts",
                "line": 40,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template.ts#L40",
                "moduleSpecifier": "lit-html/lib/template.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "name": "TemplatePart"
              }
            },
            "defaultValue": "[]",
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "Template.parts"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              5299
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5304,
              5303
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/template.ts",
            "line": 39,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template.ts#L39",
            "moduleSpecifier": "lit-html/lib/template.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "Template"
        }
      },
      {
        "id": 5234,
        "name": "templateCaches",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/template-factory.ts",
            "line": 92,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-factory.ts#L92",
            "moduleSpecifier": "lit-html/lib/template-factory.js"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "intrinsic",
              "name": "string"
            },
            {
              "type": "reference",
              "name": "TemplateCache"
            }
          ],
          "name": "Map"
        },
        "defaultValue": "...",
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "templateCaches"
        }
      },
      {
        "id": 5235,
        "name": "templateFactory",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "The default TemplateFactory which caches Templates keyed on\nresult.type and result.strings."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/template-factory.ts",
            "line": 44,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-factory.ts#L44",
            "moduleSpecifier": "lit-html/lib/template-factory.js"
          }
        ],
        "signatures": [
          {
            "id": 5236,
            "name": "templateFactory",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "The default TemplateFactory which caches Templates keyed on\nresult.type and result.strings."
            },
            "parameters": [
              {
                "id": 5237,
                "name": "result",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 5278,
                  "name": "TemplateResult",
                  "location": {
                    "page": "templates",
                    "anchor": "TemplateResult"
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 5298,
              "name": "Template",
              "location": {
                "page": "custom-directives",
                "anchor": "Template"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "templateFactory"
        }
      },
      {
        "id": 5238,
        "name": "TemplateInstance",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "An instance of a `Template` that can be attached to the DOM and updated\nwith new values."
        },
        "children": [
          {
            "id": 5239,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-instance.ts",
                "line": 31,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-instance.ts#L31",
                "moduleSpecifier": "lit-html/lib/template-instance.js"
              }
            ],
            "signatures": [
              {
                "id": 5240,
                "name": "new TemplateInstance",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 5241,
                    "name": "template",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5298,
                      "name": "Template",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Template"
                      }
                    }
                  },
                  {
                    "id": 5242,
                    "name": "processor",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5253,
                      "name": "TemplateProcessor",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "TemplateProcessor"
                      }
                    }
                  },
                  {
                    "id": 5243,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5225,
                      "name": "RenderOptions",
                      "location": {
                        "page": "templates",
                        "anchor": "RenderOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5238,
                  "name": "TemplateInstance",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "TemplateInstance"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "TemplateInstance.constructor"
            }
          },
          {
            "id": 5246,
            "name": "options",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-instance.ts",
                "line": 28,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-instance.ts#L28",
                "moduleSpecifier": "lit-html/lib/template-instance.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 5225,
              "name": "RenderOptions",
              "location": {
                "page": "templates",
                "anchor": "RenderOptions"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "TemplateInstance.options"
            }
          },
          {
            "id": 5245,
            "name": "processor",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-instance.ts",
                "line": 27,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-instance.ts#L27",
                "moduleSpecifier": "lit-html/lib/template-instance.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 5253,
              "name": "TemplateProcessor",
              "location": {
                "page": "custom-directives",
                "anchor": "TemplateProcessor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "TemplateInstance.processor"
            }
          },
          {
            "id": 5247,
            "name": "template",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-instance.ts",
                "line": 29,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-instance.ts#L29",
                "moduleSpecifier": "lit-html/lib/template-instance.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 5298,
              "name": "Template",
              "location": {
                "page": "custom-directives",
                "anchor": "Template"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "TemplateInstance.template"
            }
          },
          {
            "id": 5248,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/template-instance.ts",
                "line": 39,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-instance.ts#L39",
                "moduleSpecifier": "lit-html/lib/template-instance.js"
              }
            ],
            "signatures": [
              {
                "id": 5249,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 5250,
                    "name": "values",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "TemplateInstance.update"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              5239
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5244,
              5246,
              5245,
              5247
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              5251,
              5248
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/template-instance.ts",
            "line": 25,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-instance.ts#L25",
            "moduleSpecifier": "lit-html/lib/template-instance.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "TemplateInstance"
        }
      },
      {
        "id": 5049,
        "name": "DirectiveFn",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/directive.ts",
            "line": 22,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/directive.ts#L22",
            "moduleSpecifier": "lit-html/lib/directive.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 5050,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "sources": [
              {
                "fileName": "lib/directive.ts",
                "line": 22,
                "character": 26
              }
            ],
            "signatures": [
              {
                "id": 5051,
                "name": "__type",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 5052,
                    "name": "part",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5071,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "DirectiveFn"
        }
      },
      {
        "id": 5071,
        "name": "Part",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "The Part interface represents a dynamic part of a template instance rendered\nby lit-html."
        },
        "children": [
          {
            "id": 5072,
            "name": "value",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/part.ts",
                "line": 20,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/part.ts#L20",
                "moduleSpecifier": "lit-html/lib/part.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "Part.value"
            }
          },
          {
            "id": 5076,
            "name": "commit",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Commits the current part value, causing it to actually be written to the\nDOM.",
              "text": "Directives are run at the start of `commit`, so that if they call\n`part.setValue(...)` synchronously that value will be used in the current\ncommit, and there's no need to call `part.commit()` within the directive.\nIf directives set a part value asynchronously, then they must call\n`part.commit()` manually.\n"
            },
            "children": [],
            "signatures": [
              {
                "id": 5077,
                "name": "commit",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Commits the current part value, causing it to actually be written to the\nDOM.",
                  "text": "Directives are run at the start of `commit`, so that if they call\n`part.setValue(...)` synchronously that value will be used in the current\ncommit, and there's no need to call `part.commit()` within the directive.\nIf directives set a part value asynchronously, then they must call\n`part.commit()` manually.\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "Part.commit"
            }
          },
          {
            "id": 5073,
            "name": "setValue",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Sets the current part value, but does not write it to the DOM."
            },
            "children": [],
            "signatures": [
              {
                "id": 5074,
                "name": "setValue",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Sets the current part value, but does not write it to the DOM."
                },
                "parameters": [
                  {
                    "id": 5075,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The value that will be committed.\n"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "Part.setValue"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              5072
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              5076,
              5073
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/part.ts",
            "line": 19,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/part.ts#L19",
            "moduleSpecifier": "lit-html/lib/part.js"
          }
        ],
        "implementedBy": [
          {
            "type": "reference",
            "id": 5095,
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          },
          {
            "type": "reference",
            "id": 5106,
            "name": "BooleanAttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart"
            }
          },
          {
            "type": "reference",
            "id": 5122,
            "name": "EventPart",
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart"
            }
          },
          {
            "type": "reference",
            "id": 5152,
            "name": "NodePart",
            "location": {
              "page": "custom-directives",
              "anchor": "NodePart"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "Part"
        }
      },
      {
        "id": 5253,
        "name": "TemplateProcessor",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 5254,
            "name": "handleAttributeExpressions",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Create parts for an attribute-position binding, given the element,\nattribute name, and string literals."
            },
            "children": [],
            "signatures": [
              {
                "id": 5255,
                "name": "handleAttributeExpressions",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Create parts for an attribute-position binding, given the element,\nattribute name, and string literals."
                },
                "parameters": [
                  {
                    "id": 5256,
                    "name": "element",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The element containing the binding"
                    },
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    }
                  },
                  {
                    "id": 5257,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The attribute name, including a possible prefix. The name may\n  be prefixed by `.` (for a property binding), `@` (for an event binding)\nor\n  `?` (for a boolean attribute binding)."
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 5258,
                    "name": "strings",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "The array of literal strings that form the static part of\n    the\n  attribute value. There are always at least two strings,\n  even for fully-controlled bindings with a single expression. For example,\n  for the binding `attr=\"${e1}-${e2}\"`, the `strings` array includes three\n  strings (`['', '-', '']`)—the text _before_ the first expression (the\nempty string), the text between the two expressions (`'-'`), and the text\nafter the last expression (another empty string).\n"
                    },
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  },
                  {
                    "id": 5259,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5225,
                      "name": "RenderOptions",
                      "location": {
                        "page": "templates",
                        "anchor": "RenderOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "typeOperator",
                  "operator": "readonly",
                  "target": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "id": 5071,
                      "name": "Part",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    }
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "TemplateProcessor.handleAttributeExpressions"
            }
          },
          {
            "id": 5260,
            "name": "handleTextExpression",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Create parts for a text-position binding."
            },
            "children": [],
            "signatures": [
              {
                "id": 5261,
                "name": "handleTextExpression",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Create parts for a text-position binding."
                },
                "parameters": [
                  {
                    "id": 5262,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 5225,
                      "name": "RenderOptions",
                      "location": {
                        "page": "templates",
                        "anchor": "RenderOptions"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 5152,
                  "name": "NodePart",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "NodePart"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-html.ts",
                "line": 32,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
                "moduleSpecifier": "lit-html"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "TemplateProcessor.handleTextExpression"
            }
          }
        ],
        "groups": [
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              5254,
              5260
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/template-processor.ts",
            "line": 23,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/template-processor.ts#L23",
            "moduleSpecifier": "lit-html/lib/template-processor.js"
          }
        ],
        "implementedBy": [
          {
            "type": "reference",
            "id": 5032,
            "name": "DefaultTemplateProcessor",
            "location": {
              "page": "custom-directives",
              "anchor": "DefaultTemplateProcessor"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-html.ts",
            "line": 32,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lit-html.ts#L32",
            "moduleSpecifier": "lit-html"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "TemplateProcessor"
        }
      }
    ]
  },
  {
    "slug": "shady",
    "title": "ShadyCSS/DOM",
    "versionLinks": {
      "v2": "api/templates/"
    },
    "items": [
      {
        "id": 4903,
        "name": "render",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Extension to the standard `render` method which supports rendering\nto ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\nand ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\nor when the webcomponentsjs\n(https://github.com/webcomponents/webcomponentsjs) polyfill is used.",
          "text": "Adds a `scopeName` option which is used to scope element DOM and stylesheets\nwhen native ShadowDOM is unavailable. The `scopeName` will be added to\nthe class attribute of all rendered DOM. In addition, any style elements will\nbe automatically re-written with this `scopeName` selector and moved out\nof the rendered DOM and into the document `<head>`.\n\nIt is common to use this render method in conjunction with a custom element\nwhich renders a shadowRoot. When this is done, typically the element's\n`localName` should be used as the `scopeName`.\n\nIn addition to DOM scoping, ShadyCSS also supports a basic shim for css\ncustom properties (needed only on older browsers like IE11) and a shim for\na deprecated feature called `@apply` that supports applying a set of css\ncustom properties to a given location.\n\nUsage considerations:\n\n* Part values in `<style>` elements are only applied the first time a given\n`scopeName` renders. Subsequent changes to parts in style elements will have\nno effect. Because of this, parts in style elements should only be used for\nvalues that will never change, for example parts that set scope-wide theme\nvalues or parts which render shared style elements.\n\n* Note, due to a limitation of the ShadyDOM polyfill, rendering in a\ncustom element's `constructor` is not supported. Instead rendering should\neither done asynchronously, for example at microtask timing (for example\n`Promise.resolve()`), or be deferred until the first time the element's\n`connectedCallback` runs.\n\nUsage considerations when using shimmed custom properties or `@apply`:\n\n* Whenever any dynamic changes are made which affect\ncss custom properties, `ShadyCSS.styleElement(element)` must be called\nto update the element. There are two cases when this is needed:\n(1) the element is connected to a new parent, (2) a class is added to the\nelement that causes it to match different custom properties.\nTo address the first case when rendering a custom element, `styleElement`\nshould be called in the element's `connectedCallback`.\n\n* Shimmed custom properties may only be defined either for an entire\nshadowRoot (for example, in a `:host` rule) or via a rule that directly\nmatches an element with a shadowRoot. In other words, instead of flowing from\nparent to child as do native css custom properties, shimmed custom properties\nflow only from shadowRoots to nested shadowRoots.\n\n* When using `@apply` mixing css shorthand property names with\nnon-shorthand names (for example `border` and `border-width`) is not\nsupported.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/shady-render.ts",
            "line": 258,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/shady-render.ts#L258",
            "moduleSpecifier": "lit-html/lib/shady-render.js"
          }
        ],
        "signatures": [
          {
            "id": 4904,
            "name": "render",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Extension to the standard `render` method which supports rendering\nto ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\nand ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\nor when the webcomponentsjs\n(https://github.com/webcomponents/webcomponentsjs) polyfill is used.",
              "text": "Adds a `scopeName` option which is used to scope element DOM and stylesheets\nwhen native ShadowDOM is unavailable. The `scopeName` will be added to\nthe class attribute of all rendered DOM. In addition, any style elements will\nbe automatically re-written with this `scopeName` selector and moved out\nof the rendered DOM and into the document `<head>`.\n\nIt is common to use this render method in conjunction with a custom element\nwhich renders a shadowRoot. When this is done, typically the element's\n`localName` should be used as the `scopeName`.\n\nIn addition to DOM scoping, ShadyCSS also supports a basic shim for css\ncustom properties (needed only on older browsers like IE11) and a shim for\na deprecated feature called `@apply` that supports applying a set of css\ncustom properties to a given location.\n\nUsage considerations:\n\n* Part values in `<style>` elements are only applied the first time a given\n`scopeName` renders. Subsequent changes to parts in style elements will have\nno effect. Because of this, parts in style elements should only be used for\nvalues that will never change, for example parts that set scope-wide theme\nvalues or parts which render shared style elements.\n\n* Note, due to a limitation of the ShadyDOM polyfill, rendering in a\ncustom element's `constructor` is not supported. Instead rendering should\neither done asynchronously, for example at microtask timing (for example\n`Promise.resolve()`), or be deferred until the first time the element's\n`connectedCallback` runs.\n\nUsage considerations when using shimmed custom properties or `@apply`:\n\n* Whenever any dynamic changes are made which affect\ncss custom properties, `ShadyCSS.styleElement(element)` must be called\nto update the element. There are two cases when this is needed:\n(1) the element is connected to a new parent, (2) a class is added to the\nelement that causes it to match different custom properties.\nTo address the first case when rendering a custom element, `styleElement`\nshould be called in the element's `connectedCallback`.\n\n* Shimmed custom properties may only be defined either for an entire\nshadowRoot (for example, in a `:host` rule) or via a rule that directly\nmatches an element with a shadowRoot. In other words, instead of flowing from\nparent to child as do native css custom properties, shimmed custom properties\nflow only from shadowRoots to nested shadowRoots.\n\n* When using `@apply` mixing css shorthand property names with\nnon-shorthand names (for example `border` and `border-width`) is not\nsupported.\n"
            },
            "parameters": [
              {
                "id": 4905,
                "name": "result",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 4906,
                "name": "container",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "DocumentFragment",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "ShadowRoot",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                      }
                    }
                  ]
                }
              },
              {
                "id": 4907,
                "name": "options",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 4899,
                  "name": "ShadyRenderOptions",
                  "location": {
                    "page": "shady",
                    "anchor": "ShadyRenderOptions"
                  }
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lib/shady-render.ts",
            "line": 26,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/shady-render.ts#L26",
            "moduleSpecifier": "lit-html/lib/shady-render.js"
          }
        ],
        "location": {
          "page": "shady",
          "anchor": "render"
        }
      },
      {
        "id": 4893,
        "name": "shadyTemplateFactory",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Template factory which scopes template DOM using ShadyCSS."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/shady-render.ts",
            "line": 57,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/shady-render.ts#L57",
            "moduleSpecifier": "lit-html/lib/shady-render.js"
          }
        ],
        "signatures": [
          {
            "id": 4894,
            "name": "shadyTemplateFactory",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Template factory which scopes template DOM using ShadyCSS."
            },
            "parameters": [
              {
                "id": 4895,
                "name": "scopeName",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 4896,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 4897,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 4898,
                        "name": "result",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "id": 5278,
                          "name": "TemplateResult",
                          "location": {
                            "page": "templates",
                            "anchor": "TemplateResult"
                          }
                        }
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "id": 5298,
                      "name": "Template",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Template"
                      }
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lib/shady-render.ts",
            "line": 26,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/shady-render.ts#L26",
            "moduleSpecifier": "lit-html/lib/shady-render.js"
          }
        ],
        "location": {
          "page": "shady",
          "anchor": "shadyTemplateFactory"
        }
      },
      {
        "id": 4899,
        "name": "ShadyRenderOptions",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 4902,
            "name": "eventContext",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/render-options.ts",
                "line": 19,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/render-options.ts#L19",
                "moduleSpecifier": "lit-html/lib/render-options.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "EventTarget"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "Partial.eventContext"
            },
            "entrypointSources": [
              {
                "fileName": "src/lib/shady-render.ts",
                "line": 26,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/shady-render.ts#L26",
                "moduleSpecifier": "lit-html/lib/shady-render.js"
              }
            ],
            "location": {
              "page": "shady",
              "anchor": "ShadyRenderOptions.eventContext"
            }
          },
          {
            "id": 4900,
            "name": "scopeName",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/shady-render.ts",
                "line": 199,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/shady-render.ts#L199",
                "moduleSpecifier": "lit-html/lib/shady-render.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "src/lib/shady-render.ts",
                "line": 26,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/shady-render.ts#L26",
                "moduleSpecifier": "lit-html/lib/shady-render.js"
              }
            ],
            "location": {
              "page": "shady",
              "anchor": "ShadyRenderOptions.scopeName"
            }
          },
          {
            "id": 4901,
            "name": "templateFactory",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/render-options.ts",
                "line": 18,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/render-options.ts#L18",
                "moduleSpecifier": "lit-html/lib/render-options.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "TemplateFactory"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "Partial.templateFactory"
            },
            "entrypointSources": [
              {
                "fileName": "src/lib/shady-render.ts",
                "line": 26,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/shady-render.ts#L26",
                "moduleSpecifier": "lit-html/lib/shady-render.js"
              }
            ],
            "location": {
              "page": "shady",
              "anchor": "ShadyRenderOptions.templateFactory"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              4902,
              4900,
              4901
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/shady-render.ts",
            "line": 198,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/shady-render.ts#L198",
            "moduleSpecifier": "lit-html/lib/shady-render.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 5225,
                "name": "RenderOptions",
                "location": {
                  "page": "templates",
                  "anchor": "RenderOptions"
                }
              }
            ],
            "name": "Partial"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lib/shady-render.ts",
            "line": 26,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit/blob/022f87d7d1f541738dfec130f3635a6962f53887/src/lib/shady-render.ts#L26",
            "moduleSpecifier": "lit-html/lib/shady-render.js"
          }
        ],
        "location": {
          "page": "shady",
          "anchor": "ShadyRenderOptions"
        },
        "heritage": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 5225,
                "name": "RenderOptions",
                "location": {
                  "page": "templates",
                  "anchor": "RenderOptions"
                }
              }
            ],
            "name": "Partial"
          }
        ]
      }
    ]
  }
]