[
  {
    "slug": "LitElement",
    "title": "LitElement",
    "versionLinks": {
      "v2": "api/LitElement/"
    },
    "items": [
      {
        "id": 252,
        "name": "LitElement",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "Base element class that manages element properties and attributes, and\nrenders a lit-html template.",
          "text": "To define a component, subclass `LitElement` and implement a\n`render` method to provide the component's template. Define properties\nusing the [`properties`](/docs/v1/api/lit-element/LitElement/#LitElement.properties) property or the [`property`](/docs/v1/api/lit-element/decorators/#property) decorator.\n"
        },
        "children": [
          {
            "id": 292,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "signatures": [
              {
                "id": 293,
                "name": "new LitElement",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 252,
                  "name": "LitElement",
                  "location": {
                    "page": "LitElement",
                    "anchor": "LitElement"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1200,
                  "name": "UpdatingElement.constructor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1199,
              "name": "UpdatingElement.constructor",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.constructor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.constructor"
            }
          },
          {
            "id": 295,
            "name": "renderRoot",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "comment": {
              "shortText": "Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 216,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L216",
                "moduleSpecifier": "lit-element"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "Element",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                  }
                },
                {
                  "type": "reference",
                  "name": "DocumentFragment",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"
                  }
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.renderRoot"
            }
          },
          {
            "id": 253,
            "name": "finalized",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Ensure this class is marked as `finalized` as an optimization ensuring\nit will not needlessly try to `finalize`.",
              "text": "Note this property name is a string to prevent breaking Closure JS Compiler\noptimizations. See updating-element.ts for more information.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 109,
                "character": 18,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L109",
                "moduleSpecifier": "lit-element"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "defaultValue": "true",
            "overwrites": {
              "type": "reference",
              "id": 1198,
              "name": "UpdatingElement.finalized",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.finalized"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.finalized"
            }
          },
          {
            "id": 267,
            "name": "properties",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "User-supplied object that maps property names to `PropertyDeclaration`\nobjects containing options for configuring the property."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 248,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L248",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 1137,
              "name": "PropertyDeclarations",
              "location": {
                "page": "UpdatingElement",
                "anchor": "PropertyDeclarations"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "id": 1154,
              "name": "UpdatingElement.properties",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.properties"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.properties"
            }
          },
          {
            "id": 254,
            "name": "render",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Reference to the underlying library method used to render the element's\nDOM. By default, points to the `render` method from lit-html's shady-render\nmodule.",
              "text": "**Most users will never need to touch this property.**\n\nThis  property should not be confused with the `render` instance method,\nwhich should be overridden to define a template for the element.\n\nAdvanced users creating a new base class based on LitElement can override\nthis property to point to a custom render method with a signature that\nmatches [shady-render's `render`\nmethod](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 128,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L128",
                "moduleSpecifier": "lit-element"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 255,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 256,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Reference to the underlying library method used to render the element's\nDOM. By default, points to the `render` method from lit-html's shady-render\nmodule.",
                      "text": "**Most users will never need to touch this property.**\n\nThis  property should not be confused with the `render` instance method,\nwhich should be overridden to define a template for the element.\n\nAdvanced users creating a new base class based on LitElement can override\nthis property to point to a custom render method with a signature that\nmatches [shady-render's `render`\nmethod](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n",
                      "tags": [
                        {
                          "tag": "nocollapse",
                          "text": "\n"
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 257,
                        "name": "result",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      },
                      {
                        "id": 258,
                        "name": "container",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Element",
                              "externalLocation": {
                                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "DocumentFragment",
                              "externalLocation": {
                                "url": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 259,
                        "name": "options",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "reference",
                          "name": "ShadyRenderOptions"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    }
                  }
                ]
              }
            },
            "defaultValue": "...",
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.render"
            }
          },
          {
            "id": 261,
            "name": "shadowRootOptions",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 139,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L139",
                "moduleSpecifier": "lit-element"
              }
            ],
            "type": {
              "type": "reference",
              "name": "ShadowRootInit",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#parameters"
              }
            },
            "defaultValue": "...",
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.shadowRootOptions"
            }
          },
          {
            "id": 260,
            "name": "styles",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true,
              "isOptional": true
            },
            "comment": {
              "shortText": "Array of styles to apply to the element. The styles should be defined\nusing the [`css`](/docs/v1/api/lit-element/styles/#css) tag function or via constructible stylesheets."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 136,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L136",
                "moduleSpecifier": "lit-element"
              }
            ],
            "type": {
              "type": "reference",
              "id": 251,
              "name": "CSSResultGroup",
              "location": {
                "page": "styles",
                "anchor": "CSSResultGroup"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.styles"
            }
          },
          {
            "id": 329,
            "name": "hasUpdated",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {
              "isProtected": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 739,
                "character": 16,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L739",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "getSignature": [
              {
                "id": 330,
                "name": "hasUpdated",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1249,
              "name": "UpdatingElement.hasUpdated",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.hasUpdated"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.hasUpdated"
            }
          },
          {
            "id": 333,
            "name": "updateComplete",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
              "text": "To await additional asynchronous work, override the `_getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super._getUpdateComplete()`, then any subsequent state.\n",
              "returns": "The Promise returns a boolean that indicates if the\nupdate resolved without triggering another update.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 816,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L816",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              ],
              "name": "Promise"
            },
            "getSignature": [
              {
                "id": 334,
                "name": "updateComplete",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                  "text": "To await additional asynchronous work, override the `_getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super._getUpdateComplete()`, then any subsequent state.\n",
                  "returns": "The Promise returns a boolean that indicates if the\nupdate resolved without triggering another update.\n"
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "Promise"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1255,
              "name": "UpdatingElement.updateComplete",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.updateComplete"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.updateComplete"
            }
          },
          {
            "id": 268,
            "name": "observedAttributes",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns a list of attributes corresponding to the registered properties.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 254,
                "character": 13,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L254",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            "getSignature": [
              {
                "id": 269,
                "name": "observedAttributes",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a list of attributes corresponding to the registered properties.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1155,
              "name": "UpdatingElement.observedAttributes",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.observedAttributes"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.observedAttributes"
            }
          },
          {
            "id": 300,
            "name": "adoptStyles",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Applies styling to the element shadowRoot using the [`styles`](/docs/v1/api/lit-element/LitElement/#LitElement.styles)\nproperty. Styling will apply using `shadowRoot.adoptedStyleSheets` where\navailable and will fallback otherwise. When Shadow DOM is polyfilled,\nShadyCSS scopes styles and adds them to the document. When Shadow DOM\nis available but `adoptedStyleSheets` is not, styles are appended to the\nend of the `shadowRoot` to [mimic spec\nbehavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets)."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 258,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L258",
                "moduleSpecifier": "lit-element"
              }
            ],
            "signatures": [
              {
                "id": 301,
                "name": "adoptStyles",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Applies styling to the element shadowRoot using the [`styles`](/docs/v1/api/lit-element/LitElement/#LitElement.styles)\nproperty. Styling will apply using `shadowRoot.adoptedStyleSheets` where\navailable and will fallback otherwise. When Shadow DOM is polyfilled,\nShadyCSS scopes styles and adds them to the document. When Shadow DOM\nis available but `adoptedStyleSheets` is not, styles are appended to the\nend of the `shadowRoot` to [mimic spec\nbehavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets)."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.adoptStyles"
            }
          },
          {
            "id": 313,
            "name": "attributeChangedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Synchronizes property values when attributes change."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 597,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L597",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 314,
                "name": "attributeChangedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Synchronizes property values when attributes change."
                },
                "parameters": [
                  {
                    "id": 315,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 316,
                    "name": "old",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  },
                  {
                    "id": 317,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1223,
                  "name": "UpdatingElement.attributeChangedCallback"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1222,
              "name": "UpdatingElement.attributeChangedCallback",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.attributeChangedCallback"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.attributeChangedCallback"
            }
          },
          {
            "id": 302,
            "name": "connectedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 281,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L281",
                "moduleSpecifier": "lit-element"
              }
            ],
            "signatures": [
              {
                "id": 303,
                "name": "connectedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 1217,
                  "name": "UpdatingElement.connectedCallback"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 1216,
              "name": "UpdatingElement.connectedCallback",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.connectedCallback"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.connectedCallback"
            }
          },
          {
            "id": 298,
            "name": "createRenderRoot",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
              "returns": "Returns a node into which to render.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 244,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L244",
                "moduleSpecifier": "lit-element"
              }
            ],
            "signatures": [
              {
                "id": 299,
                "name": "createRenderRoot",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
                  "returns": "Returns a node into which to render.\n"
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "Element",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "ShadowRoot",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                      }
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.createRenderRoot"
            }
          },
          {
            "id": 311,
            "name": "disconnectedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 591,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L591",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 312,
                "name": "disconnectedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1221,
                  "name": "UpdatingElement.disconnectedCallback"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1220,
              "name": "UpdatingElement.disconnectedCallback",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.disconnectedCallback"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.disconnectedCallback"
            }
          },
          {
            "id": 309,
            "name": "enableUpdating",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 579,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L579",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 310,
                "name": "enableUpdating",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1219,
                  "name": "UpdatingElement.enableUpdating"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1218,
              "name": "UpdatingElement.enableUpdating",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.enableUpdating"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.enableUpdating"
            }
          },
          {
            "id": 345,
            "name": "firstUpdated",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
              "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 914,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L914",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 346,
                "name": "firstUpdated",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "parameters": [
                  {
                    "id": 347,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values\n"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1271,
                  "name": "UpdatingElement.firstUpdated"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1270,
              "name": "UpdatingElement.firstUpdated",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.firstUpdated"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.firstUpdated"
            }
          },
          {
            "id": 337,
            "name": "getUpdateComplete",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Override point for the `updateComplete` promise.",
              "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n  class MyElement extends LitElement {\n    async getUpdateComplete() {\n      await super.getUpdateComplete();\n      await this._myChild.updateComplete;\n    }\n  }\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 858,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L858",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 338,
                "name": "getUpdateComplete",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Override point for the `updateComplete` promise.",
                  "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n  class MyElement extends LitElement {\n    async getUpdateComplete() {\n      await super.getUpdateComplete();\n      await this._myChild.updateComplete;\n    }\n  }\n"
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "Promise"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1260,
                  "name": "UpdatingElement.getUpdateComplete"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1259,
              "name": "UpdatingElement.getUpdateComplete",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.getUpdateComplete"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.getUpdateComplete"
            }
          },
          {
            "id": 296,
            "name": "initialize",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Performs element initialization. By default this calls\n[`createRenderRoot`](/docs/v1/api/lit-element/LitElement/#LitElement.createRenderRoot) to create the element [`renderRoot`](/docs/v1/api/lit-element/LitElement/#LitElement.renderRoot) node and\ncaptures any pre-set values for registered properties."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 223,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L223",
                "moduleSpecifier": "lit-element"
              }
            ],
            "signatures": [
              {
                "id": 297,
                "name": "initialize",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Performs element initialization. By default this calls\n[`createRenderRoot`](/docs/v1/api/lit-element/LitElement/#LitElement.createRenderRoot) to create the element [`renderRoot`](/docs/v1/api/lit-element/LitElement/#LitElement.renderRoot) node and\ncaptures any pre-set values for registered properties."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 1211,
                  "name": "UpdatingElement.initialize"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 1210,
              "name": "UpdatingElement.initialize",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.initialize"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.initialize"
            }
          },
          {
            "id": 331,
            "name": "performUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
              "text": "You can override this method to change the timing of updates. If this\nmethod is overridden, `super.performUpdate()` must be called.\n\nFor instance, to schedule updates to occur just before the next frame:\n\n```\nprotected async performUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.performUpdate();\n}\n```\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 759,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L759",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 332,
                "name": "performUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                  "text": "You can override this method to change the timing of updates. If this\nmethod is overridden, `super.performUpdate()` must be called.\n\nFor instance, to schedule updates to occur just before the next frame:\n\n```\nprotected async performUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.performUpdate();\n}\n```\n"
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Promise"
                    }
                  ]
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1252,
                  "name": "UpdatingElement.performUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1251,
              "name": "UpdatingElement.performUpdate",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.performUpdate"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.performUpdate"
            }
          },
          {
            "id": 307,
            "name": "render",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Invoked on each update to perform rendering tasks. This method may return\nany value renderable by lit-html's `NodePart` - typically a\n`TemplateResult`. Setting properties inside this method will *not* trigger\nthe element to update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 329,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L329",
                "moduleSpecifier": "lit-element"
              }
            ],
            "signatures": [
              {
                "id": 308,
                "name": "render",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Invoked on each update to perform rendering tasks. This method may return\nany value renderable by lit-html's `NodePart` - typically a\n`TemplateResult`. Setting properties inside this method will *not* trigger\nthe element to update."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.render"
            }
          },
          {
            "id": 323,
            "name": "requestUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Requests an update which is processed asynchronously. This should\nbe called when an element should update based on some state not triggered\nby setting a property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored. Returns the `updateComplete` Promise which is resolved\nwhen the update completes.",
              "returns": "A Promise that is resolved when the update completes.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 707,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L707",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 324,
                "name": "requestUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Requests an update which is processed asynchronously. This should\nbe called when an element should update based on some state not triggered\nby setting a property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored. Returns the `updateComplete` Promise which is resolved\nwhen the update completes.",
                  "returns": "A Promise that is resolved when the update completes.\n"
                },
                "parameters": [
                  {
                    "id": 325,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "(optional) name of requesting property"
                    },
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 326,
                    "name": "oldValue",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "(optional) old value of requesting property"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "Promise"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1242,
                  "name": "UpdatingElement.requestUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1241,
              "name": "UpdatingElement.requestUpdate",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.requestUpdate"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.requestUpdate"
            }
          },
          {
            "id": 318,
            "name": "requestUpdateInternal",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "This protected version of `requestUpdate` does not access or return the\n`updateComplete` promise. This promise can be overridden and is therefore\nnot free to access."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 661,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L661",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 319,
                "name": "requestUpdateInternal",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "This protected version of `requestUpdate` does not access or return the\n`updateComplete` promise. This promise can be overridden and is therefore\nnot free to access."
                },
                "parameters": [
                  {
                    "id": 320,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 321,
                    "name": "oldValue",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  },
                  {
                    "id": 322,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "id": 1125,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "UpdatingElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1237,
                  "name": "UpdatingElement.requestUpdateInternal"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1236,
              "name": "UpdatingElement.requestUpdateInternal",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.requestUpdateInternal"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.requestUpdateInternal"
            }
          },
          {
            "id": 339,
            "name": "shouldUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 869,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L869",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 340,
                "name": "shouldUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                },
                "parameters": [
                  {
                    "id": 341,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values\n"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1262,
                  "name": "UpdatingElement.shouldUpdate"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1261,
              "name": "UpdatingElement.shouldUpdate",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.shouldUpdate"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.shouldUpdate"
            }
          },
          {
            "id": 304,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 296,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L296",
                "moduleSpecifier": "lit-element"
              }
            ],
            "signatures": [
              {
                "id": 305,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update."
                },
                "parameters": [
                  {
                    "id": 306,
                    "name": "changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "id": 1265,
                  "name": "UpdatingElement.update"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "id": 1264,
              "name": "UpdatingElement.update",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.update"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.update"
            }
          },
          {
            "id": 342,
            "name": "updated",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
              "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 902,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L902",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 343,
                "name": "updated",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "parameters": [
                  {
                    "id": 344,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values\n"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1268,
                  "name": "UpdatingElement.updated"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1267,
              "name": "UpdatingElement.updated",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.updated"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.updated"
            }
          },
          {
            "id": 270,
            "name": "createProperty",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
              "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 314,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L314",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 271,
                "name": "createProperty",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
                  "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 272,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 273,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1125,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "UpdatingElement",
                        "anchor": "PropertyDeclaration"
                      }
                    },
                    "defaultValue": "..."
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1160,
                  "name": "UpdatingElement.createProperty"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1159,
              "name": "UpdatingElement.createProperty",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.createProperty"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.createProperty"
            }
          },
          {
            "id": 290,
            "name": "finalize",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Creates property accessors for registered properties and ensures\nany superclasses are also finalized.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 402,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L402",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 291,
                "name": "finalize",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Creates property accessors for registered properties and ensures\nany superclasses are also finalized.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1180,
                  "name": "UpdatingElement.finalize"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1179,
              "name": "UpdatingElement.finalize",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.finalize"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.finalize"
            }
          },
          {
            "id": 274,
            "name": "getPropertyDescriptor",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
              "text": "  class MyElement extends LitElement {\n    static getPropertyDescriptor(name, key, options) {\n      const defaultDescriptor =\n          super.getPropertyDescriptor(name, key, options);\n      const setter = defaultDescriptor.set;\n      return {\n        get: defaultDescriptor.get,\n        set(value) {\n          setter.call(this, value);\n          // custom action.\n        },\n        configurable: true,\n        enumerable: true\n      }\n    }\n  }\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 361,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L361",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 275,
                "name": "getPropertyDescriptor",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                  "text": "  class MyElement extends LitElement {\n    static getPropertyDescriptor(name, key, options) {\n      const defaultDescriptor =\n          super.getPropertyDescriptor(name, key, options);\n      const setter = defaultDescriptor.set;\n      return {\n        get: defaultDescriptor.get,\n        set(value) {\n          setter.call(this, value);\n          // custom action.\n        },\n        configurable: true,\n        enumerable: true\n      }\n    }\n  }\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 276,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 277,
                    "name": "key",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "symbol"
                        }
                      ]
                    }
                  },
                  {
                    "id": 278,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1125,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "UpdatingElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 279,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 285,
                        "name": "configurable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        },
                        "defaultValue": "true"
                      },
                      {
                        "id": 286,
                        "name": "enumerable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        },
                        "defaultValue": "true"
                      },
                      {
                        "id": 280,
                        "name": "get",
                        "kind": 2048,
                        "kindString": "Method",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "lit-dev-api/api-data/lit-element-2/repo/src/lib/updating-element.ts",
                            "line": 365,
                            "character": 6
                          }
                        ],
                        "signatures": [
                          {
                            "id": 281,
                            "name": "get",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        ]
                      },
                      {
                        "id": 282,
                        "name": "set",
                        "kind": 2048,
                        "kindString": "Method",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "lit-dev-api/api-data/lit-element-2/repo/src/lib/updating-element.ts",
                            "line": 368,
                            "character": 6
                          }
                        ],
                        "signatures": [
                          {
                            "id": 283,
                            "name": "set",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 284,
                                "name": "value",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                          285,
                          286
                        ]
                      },
                      {
                        "title": "Methods",
                        "kind": 2048,
                        "children": [
                          280,
                          282
                        ]
                      }
                    ]
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1164,
                  "name": "UpdatingElement.getPropertyDescriptor"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1163,
              "name": "UpdatingElement.getPropertyDescriptor",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.getPropertyDescriptor"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.getPropertyDescriptor"
            }
          },
          {
            "id": 287,
            "name": "getPropertyOptions",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
              "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                },
                {
                  "tag": "final",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 392,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L392",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 288,
                "name": "getPropertyOptions",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                  "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    },
                    {
                      "tag": "final",
                      "text": "\n"
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 289,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 1125,
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "PropertyDeclaration",
                  "location": {
                    "page": "UpdatingElement",
                    "anchor": "PropertyDeclaration"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "id": 1177,
                  "name": "UpdatingElement.getPropertyOptions"
                }
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "id": 1176,
              "name": "UpdatingElement.getPropertyOptions",
              "location": {
                "page": "UpdatingElement",
                "anchor": "UpdatingElement.getPropertyOptions"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.getPropertyOptions"
            }
          },
          {
            "id": 263,
            "name": "getStyles",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Return the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 149,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L149",
                "moduleSpecifier": "lit-element"
              }
            ],
            "signatures": [
              {
                "id": 264,
                "name": "getStyles",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Return the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "reference",
                      "id": 251,
                      "name": "CSSResultGroup",
                      "location": {
                        "page": "styles",
                        "anchor": "CSSResultGroup"
                      }
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "LitElement.getStyles"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              292
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              630,
              631,
              632,
              633,
              634,
              635,
              636,
              637,
              638,
              639,
              640,
              641,
              642,
              643,
              644,
              645,
              646,
              647,
              294,
              348,
              349,
              651,
              652,
              653,
              654,
              655,
              656,
              657,
              658,
              659,
              660,
              661,
              662,
              663,
              664,
              665,
              666,
              667,
              668,
              669,
              670,
              671,
              672,
              673,
              674,
              675,
              676,
              677,
              678,
              679,
              680,
              681,
              682,
              683,
              684,
              685,
              686,
              741,
              393,
              350,
              568,
              708,
              569,
              709,
              394,
              395,
              396,
              397,
              398,
              399,
              755,
              1104,
              351,
              352,
              756,
              570,
              710,
              353,
              400,
              705,
              354,
              757,
              571,
              758,
              355,
              572,
              711,
              401,
              402,
              706,
              573,
              574,
              575,
              576,
              1105,
              356,
              357,
              358,
              359,
              360,
              759,
              763,
              767,
              771,
              775,
              779,
              783,
              787,
              791,
              795,
              799,
              803,
              807,
              742,
              811,
              746,
              815,
              819,
              823,
              827,
              831,
              835,
              839,
              843,
              847,
              851,
              855,
              859,
              860,
              864,
              403,
              407,
              868,
              872,
              876,
              880,
              884,
              888,
              892,
              896,
              900,
              904,
              908,
              912,
              916,
              920,
              924,
              928,
              932,
              936,
              750,
              940,
              944,
              948,
              952,
              956,
              960,
              964,
              968,
              972,
              976,
              980,
              984,
              988,
              992,
              996,
              1000,
              1004,
              1008,
              1012,
              1016,
              1020,
              1024,
              1028,
              1032,
              1036,
              1040,
              1044,
              1048,
              1052,
              1056,
              1060,
              1064,
              1068,
              1072,
              1076,
              1080,
              1084,
              1088,
              1092,
              1096,
              1100,
              411,
              361,
              412,
              577,
              578,
              413,
              414,
              707,
              579,
              295,
              415,
              416,
              417,
              418,
              419,
              420,
              362,
              754,
              1106,
              421,
              580,
              363,
              364,
              262,
              253,
              267,
              254,
              261,
              260
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              327,
              329,
              333,
              268
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              335,
              367,
              300,
              694,
              687,
              712,
              581,
              422,
              313,
              697,
              1107,
              365,
              585,
              425,
              588,
              302,
              591,
              298,
              311,
              648,
              309,
              345,
              1109,
              691,
              435,
              438,
              442,
              444,
              447,
              451,
              453,
              455,
              458,
              467,
              594,
              337,
              477,
              480,
              484,
              597,
              486,
              296,
              489,
              493,
              497,
              599,
              604,
              607,
              610,
              613,
              616,
              501,
              619,
              331,
              715,
              718,
              728,
              504,
              700,
              507,
              510,
              514,
              621,
              380,
              307,
              625,
              738,
              702,
              517,
              520,
              323,
              318,
              522,
              528,
              534,
              537,
              543,
              547,
              552,
              555,
              558,
              339,
              561,
              304,
              342,
              565,
              265,
              270,
              290,
              274,
              287,
              263
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 101,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L101",
            "moduleSpecifier": "lit-element"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "id": 1151,
            "name": "UpdatingElement",
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "LitElement",
          "anchor": "LitElement"
        },
        "heritage": [
          {
            "type": "reference",
            "id": 1151,
            "name": "UpdatingElement",
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement"
            }
          },
          {
            "type": "reference",
            "name": "HTMLElement",
            "externalLocation": {
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
            }
          }
        ]
      }
    ]
  },
  {
    "slug": "UpdatingElement",
    "title": "UpdatingElement",
    "versionLinks": {
      "v2": "api/ReactiveElement/"
    },
    "items": [
      {
        "id": 1142,
        "name": "defaultConverter",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 145,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L145",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "type": {
          "type": "reference",
          "id": 1114,
          "name": "ComplexAttributeConverter",
          "location": {
            "page": "UpdatingElement",
            "anchor": "ComplexAttributeConverter"
          }
        },
        "defaultValue": "...",
        "entrypointSources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 27,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "location": {
          "page": "UpdatingElement",
          "anchor": "defaultConverter"
        }
      },
      {
        "id": 1147,
        "name": "notEqual",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Change function that returns true if `value` is different from `oldValue`.\nThis method is used as the default for a property's `hasChanged` function."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 184,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L184",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "signatures": [
          {
            "id": 1148,
            "name": "notEqual",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Change function that returns true if `value` is different from `oldValue`.\nThis method is used as the default for a property's `hasChanged` function."
            },
            "parameters": [
              {
                "id": 1149,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 1150,
                "name": "old",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 27,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "location": {
          "page": "UpdatingElement",
          "anchor": "notEqual"
        }
      },
      {
        "id": 1151,
        "name": "UpdatingElement",
        "kind": 128,
        "kindString": "Class",
        "flags": {
          "isAbstract": true
        },
        "comment": {
          "shortText": "Base element class which manages element properties and attributes. When\nproperties change, the `update` method is asynchronously called. This method\nshould be supplied by subclassers to render updates as desired.",
          "tags": [
            {
              "tag": "noinheritdoc",
              "text": "\n"
            }
          ]
        },
        "children": [
          {
            "id": 1199,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 514,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L514",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1200,
                "name": "new UpdatingElement",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "id": 1151,
                  "name": "UpdatingElement",
                  "location": {
                    "page": "UpdatingElement",
                    "anchor": "UpdatingElement"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "HTMLElement.constructor"
                }
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "HTMLElement.constructor"
            },
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.constructor"
            }
          },
          {
            "id": 1198,
            "name": "finalized",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Marks class as having finished creating properties."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 236,
                "character": 18,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L236",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "defaultValue": "true",
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.finalized"
            }
          },
          {
            "id": 1154,
            "name": "properties",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "User-supplied object that maps property names to `PropertyDeclaration`\nobjects containing options for configuring the property."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 248,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L248",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "id": 1137,
              "name": "PropertyDeclarations",
              "location": {
                "page": "UpdatingElement",
                "anchor": "PropertyDeclarations"
              }
            },
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.properties"
            }
          },
          {
            "id": 1249,
            "name": "hasUpdated",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {
              "isProtected": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 739,
                "character": 16,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L739",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "getSignature": [
              {
                "id": 1250,
                "name": "hasUpdated",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.hasUpdated"
            }
          },
          {
            "id": 1255,
            "name": "updateComplete",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "comment": {
              "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
              "text": "To await additional asynchronous work, override the `_getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super._getUpdateComplete()`, then any subsequent state.\n",
              "returns": "The Promise returns a boolean that indicates if the\nupdate resolved without triggering another update.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 816,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L816",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              ],
              "name": "Promise"
            },
            "getSignature": [
              {
                "id": 1256,
                "name": "updateComplete",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                  "text": "To await additional asynchronous work, override the `_getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super._getUpdateComplete()`, then any subsequent state.\n",
                  "returns": "The Promise returns a boolean that indicates if the\nupdate resolved without triggering another update.\n"
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "Promise"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.updateComplete"
            }
          },
          {
            "id": 1155,
            "name": "observedAttributes",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns a list of attributes corresponding to the registered properties.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 254,
                "character": 13,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L254",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            "getSignature": [
              {
                "id": 1156,
                "name": "observedAttributes",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a list of attributes corresponding to the registered properties.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.observedAttributes"
            }
          },
          {
            "id": 1222,
            "name": "attributeChangedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Synchronizes property values when attributes change."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 597,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L597",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1223,
                "name": "attributeChangedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Synchronizes property values when attributes change."
                },
                "parameters": [
                  {
                    "id": 1224,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 1225,
                    "name": "old",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  },
                  {
                    "id": 1226,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.attributeChangedCallback"
            }
          },
          {
            "id": 1216,
            "name": "connectedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 573,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L573",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1217,
                "name": "connectedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.connectedCallback"
            }
          },
          {
            "id": 1220,
            "name": "disconnectedCallback",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 591,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L591",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1221,
                "name": "disconnectedCallback",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.disconnectedCallback"
            }
          },
          {
            "id": 1218,
            "name": "enableUpdating",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 579,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L579",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1219,
                "name": "enableUpdating",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.enableUpdating"
            }
          },
          {
            "id": 1270,
            "name": "firstUpdated",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
              "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 914,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L914",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1271,
                "name": "firstUpdated",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "parameters": [
                  {
                    "id": 1272,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values\n"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.firstUpdated"
            }
          },
          {
            "id": 1259,
            "name": "getUpdateComplete",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Override point for the `updateComplete` promise.",
              "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n  class MyElement extends LitElement {\n    async getUpdateComplete() {\n      await super.getUpdateComplete();\n      await this._myChild.updateComplete;\n    }\n  }\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 858,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L858",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1260,
                "name": "getUpdateComplete",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Override point for the `updateComplete` promise.",
                  "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n  class MyElement extends LitElement {\n    async getUpdateComplete() {\n      await super.getUpdateComplete();\n      await this._myChild.updateComplete;\n    }\n  }\n"
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "Promise"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.getUpdateComplete"
            }
          },
          {
            "id": 1210,
            "name": "initialize",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Performs element initialization. By default captures any pre-set values for\nregistered properties."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 523,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L523",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1211,
                "name": "initialize",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Performs element initialization. By default captures any pre-set values for\nregistered properties."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.initialize"
            }
          },
          {
            "id": 1251,
            "name": "performUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
              "text": "You can override this method to change the timing of updates. If this\nmethod is overridden, `super.performUpdate()` must be called.\n\nFor instance, to schedule updates to occur just before the next frame:\n\n```\nprotected async performUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.performUpdate();\n}\n```\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 759,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L759",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1252,
                "name": "performUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                  "text": "You can override this method to change the timing of updates. If this\nmethod is overridden, `super.performUpdate()` must be called.\n\nFor instance, to schedule updates to occur just before the next frame:\n\n```\nprotected async performUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.performUpdate();\n}\n```\n"
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Promise"
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.performUpdate"
            }
          },
          {
            "id": 1241,
            "name": "requestUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "comment": {
              "shortText": "Requests an update which is processed asynchronously. This should\nbe called when an element should update based on some state not triggered\nby setting a property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored. Returns the `updateComplete` Promise which is resolved\nwhen the update completes.",
              "returns": "A Promise that is resolved when the update completes.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 707,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L707",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1242,
                "name": "requestUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Requests an update which is processed asynchronously. This should\nbe called when an element should update based on some state not triggered\nby setting a property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored. Returns the `updateComplete` Promise which is resolved\nwhen the update completes.",
                  "returns": "A Promise that is resolved when the update completes.\n"
                },
                "parameters": [
                  {
                    "id": 1243,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "(optional) name of requesting property"
                    },
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 1244,
                    "name": "oldValue",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "comment": {
                      "text": "(optional) old value of requesting property"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "Promise"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.requestUpdate"
            }
          },
          {
            "id": 1236,
            "name": "requestUpdateInternal",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "This protected version of `requestUpdate` does not access or return the\n`updateComplete` promise. This promise can be overridden and is therefore\nnot free to access."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 661,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L661",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1237,
                "name": "requestUpdateInternal",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "This protected version of `requestUpdate` does not access or return the\n`updateComplete` promise. This promise can be overridden and is therefore\nnot free to access."
                },
                "parameters": [
                  {
                    "id": 1238,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 1239,
                    "name": "oldValue",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  },
                  {
                    "id": 1240,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "id": 1125,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "UpdatingElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.requestUpdateInternal"
            }
          },
          {
            "id": 1261,
            "name": "shouldUpdate",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 869,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L869",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1262,
                "name": "shouldUpdate",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                },
                "parameters": [
                  {
                    "id": 1263,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values\n"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.shouldUpdate"
            }
          },
          {
            "id": 1264,
            "name": "update",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Updates the element. This method reflects property values to attributes.\nIt can be overridden to render and keep updated element DOM.\nSetting properties inside this method will *not* trigger\nanother update."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 881,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L881",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1265,
                "name": "update",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Updates the element. This method reflects property values to attributes.\nIt can be overridden to render and keep updated element DOM.\nSetting properties inside this method will *not* trigger\nanother update."
                },
                "parameters": [
                  {
                    "id": 1266,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values\n"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.update"
            }
          },
          {
            "id": 1267,
            "name": "updated",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
              "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 902,
                "character": 12,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L902",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1268,
                "name": "updated",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "parameters": [
                  {
                    "id": 1269,
                    "name": "_changedProperties",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "comment": {
                      "text": "Map of changed properties with old values\n"
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "Map"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.updated"
            }
          },
          {
            "id": 1159,
            "name": "createProperty",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isStatic": true
            },
            "comment": {
              "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
              "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 314,
                "character": 9,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L314",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1160,
                "name": "createProperty",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a PropertyDeclaration for the property with the given options.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
                  "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 1161,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 1162,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1125,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "UpdatingElement",
                        "anchor": "PropertyDeclaration"
                      }
                    },
                    "defaultValue": "..."
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.createProperty"
            }
          },
          {
            "id": 1179,
            "name": "finalize",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Creates property accessors for registered properties and ensures\nany superclasses are also finalized.",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 402,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L402",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1180,
                "name": "finalize",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Creates property accessors for registered properties and ensures\nany superclasses are also finalized.",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.finalize"
            }
          },
          {
            "id": 1163,
            "name": "getPropertyDescriptor",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
              "text": "  class MyElement extends LitElement {\n    static getPropertyDescriptor(name, key, options) {\n      const defaultDescriptor =\n          super.getPropertyDescriptor(name, key, options);\n      const setter = defaultDescriptor.set;\n      return {\n        get: defaultDescriptor.get,\n        set(value) {\n          setter.call(this, value);\n          // custom action.\n        },\n        configurable: true,\n        enumerable: true\n      }\n    }\n  }\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 361,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L361",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1164,
                "name": "getPropertyDescriptor",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                  "text": "  class MyElement extends LitElement {\n    static getPropertyDescriptor(name, key, options) {\n      const defaultDescriptor =\n          super.getPropertyDescriptor(name, key, options);\n      const setter = defaultDescriptor.set;\n      return {\n        get: defaultDescriptor.get,\n        set(value) {\n          setter.call(this, value);\n          // custom action.\n        },\n        configurable: true,\n        enumerable: true\n      }\n    }\n  }\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": "\n"
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 1165,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  },
                  {
                    "id": 1166,
                    "name": "key",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "symbol"
                        }
                      ]
                    }
                  },
                  {
                    "id": 1167,
                    "name": "options",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "id": 1125,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "location": {
                        "page": "UpdatingElement",
                        "anchor": "PropertyDeclaration"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 1168,
                    "name": "__type",
                    "kind": 65536,
                    "kindString": "Type literal",
                    "flags": {},
                    "children": [
                      {
                        "id": 1174,
                        "name": "configurable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        },
                        "defaultValue": "true"
                      },
                      {
                        "id": 1175,
                        "name": "enumerable",
                        "kind": 1024,
                        "kindString": "Property",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        },
                        "defaultValue": "true"
                      },
                      {
                        "id": 1169,
                        "name": "get",
                        "kind": 2048,
                        "kindString": "Method",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "lit-dev-api/api-data/lit-element-2/repo/src/lib/updating-element.ts",
                            "line": 365,
                            "character": 6
                          }
                        ],
                        "signatures": [
                          {
                            "id": 1170,
                            "name": "get",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        ]
                      },
                      {
                        "id": 1171,
                        "name": "set",
                        "kind": 2048,
                        "kindString": "Method",
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "lit-dev-api/api-data/lit-element-2/repo/src/lib/updating-element.ts",
                            "line": 368,
                            "character": 6
                          }
                        ],
                        "signatures": [
                          {
                            "id": 1172,
                            "name": "set",
                            "kind": 4096,
                            "kindString": "Call signature",
                            "flags": {},
                            "parameters": [
                              {
                                "id": 1173,
                                "name": "value",
                                "kind": 32768,
                                "kindString": "Parameter",
                                "flags": {},
                                "type": {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "void"
                            }
                          }
                        ]
                      }
                    ],
                    "groups": [
                      {
                        "title": "Properties",
                        "kind": 1024,
                        "children": [
                          1174,
                          1175
                        ]
                      },
                      {
                        "title": "Methods",
                        "kind": 2048,
                        "children": [
                          1169,
                          1171
                        ]
                      }
                    ]
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.getPropertyDescriptor"
            }
          },
          {
            "id": 1176,
            "name": "getPropertyOptions",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isProtected": true,
              "isStatic": true
            },
            "comment": {
              "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
              "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
              "tags": [
                {
                  "tag": "nocollapse",
                  "text": ""
                },
                {
                  "tag": "final",
                  "text": "\n"
                }
              ]
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 392,
                "character": 19,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L392",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "signatures": [
              {
                "id": 1177,
                "name": "getPropertyOptions",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Returns the property options associated with the given property.\nThese options are defined with a PropertyDeclaration via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                  "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override `createProperty`.\n",
                  "tags": [
                    {
                      "tag": "nocollapse",
                      "text": ""
                    },
                    {
                      "tag": "final",
                      "text": "\n"
                    }
                  ]
                },
                "parameters": [
                  {
                    "id": 1178,
                    "name": "name",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "PropertyKey"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 1125,
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "PropertyDeclaration",
                  "location": {
                    "page": "UpdatingElement",
                    "anchor": "PropertyDeclaration"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "UpdatingElement.getPropertyOptions"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              1199
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              1555,
              1556,
              1557,
              1558,
              1559,
              1560,
              1561,
              1562,
              1563,
              1564,
              1565,
              1566,
              1567,
              1568,
              1569,
              1570,
              1571,
              1572,
              1208,
              1204,
              1202,
              1209,
              1203,
              1201,
              1273,
              1274,
              1576,
              1577,
              1578,
              1579,
              1580,
              1581,
              1582,
              1583,
              1584,
              1585,
              1586,
              1587,
              1588,
              1589,
              1590,
              1591,
              1592,
              1593,
              1594,
              1595,
              1596,
              1597,
              1598,
              1599,
              1600,
              1601,
              1602,
              1603,
              1604,
              1605,
              1606,
              1607,
              1608,
              1609,
              1610,
              1611,
              1666,
              1318,
              1275,
              1493,
              1633,
              1494,
              1634,
              1319,
              1320,
              1321,
              1322,
              1323,
              1324,
              1680,
              2029,
              1276,
              1277,
              1681,
              1495,
              1635,
              1278,
              1325,
              1630,
              1279,
              1682,
              1496,
              1683,
              1280,
              1497,
              1636,
              1326,
              1327,
              1631,
              1498,
              1499,
              1500,
              1501,
              2030,
              1281,
              1282,
              1283,
              1284,
              1285,
              1684,
              1688,
              1692,
              1696,
              1700,
              1704,
              1708,
              1712,
              1716,
              1720,
              1724,
              1728,
              1732,
              1667,
              1736,
              1671,
              1740,
              1744,
              1748,
              1752,
              1756,
              1760,
              1764,
              1768,
              1772,
              1776,
              1780,
              1784,
              1785,
              1789,
              1328,
              1332,
              1793,
              1797,
              1801,
              1805,
              1809,
              1813,
              1817,
              1821,
              1825,
              1829,
              1833,
              1837,
              1841,
              1845,
              1849,
              1853,
              1857,
              1861,
              1675,
              1865,
              1869,
              1873,
              1877,
              1881,
              1885,
              1889,
              1893,
              1897,
              1901,
              1905,
              1909,
              1913,
              1917,
              1921,
              1925,
              1929,
              1933,
              1937,
              1941,
              1945,
              1949,
              1953,
              1957,
              1961,
              1965,
              1969,
              1973,
              1977,
              1981,
              1985,
              1989,
              1993,
              1997,
              2001,
              2005,
              2009,
              2013,
              2017,
              2021,
              2025,
              1336,
              1286,
              1337,
              1502,
              1503,
              1338,
              1339,
              1632,
              1504,
              1340,
              1341,
              1342,
              1343,
              1344,
              1345,
              1287,
              1679,
              2031,
              1346,
              1505,
              1288,
              1289,
              1152,
              1153,
              1198,
              1154
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              1247,
              1249,
              1255,
              1155
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              1214,
              1232,
              1245,
              1257,
              1253,
              1227,
              1212,
              1292,
              1619,
              1612,
              1637,
              1506,
              1347,
              1222,
              1622,
              2032,
              1290,
              1510,
              1350,
              1513,
              1216,
              1516,
              1220,
              1573,
              1218,
              1270,
              2034,
              1616,
              1360,
              1363,
              1367,
              1369,
              1372,
              1376,
              1378,
              1380,
              1383,
              1392,
              1519,
              1259,
              1402,
              1405,
              1409,
              1522,
              1411,
              1210,
              1414,
              1418,
              1422,
              1524,
              1529,
              1532,
              1535,
              1538,
              1541,
              1426,
              1544,
              1251,
              1640,
              1643,
              1653,
              1429,
              1625,
              1432,
              1435,
              1439,
              1546,
              1305,
              1550,
              1663,
              1627,
              1442,
              1445,
              1241,
              1236,
              1447,
              1453,
              1459,
              1462,
              1468,
              1472,
              1477,
              1480,
              1483,
              1261,
              1486,
              1264,
              1267,
              1490,
              1181,
              1157,
              1190,
              1194,
              1185,
              1159,
              1179,
              1163,
              1176
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 219,
            "character": 22,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L219",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "HTMLElement",
            "externalLocation": {
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
            }
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "id": 252,
            "name": "LitElement",
            "location": {
              "page": "LitElement",
              "anchor": "LitElement"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 27,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "location": {
          "page": "UpdatingElement",
          "anchor": "UpdatingElement"
        },
        "heritage": [
          {
            "type": "reference",
            "name": "HTMLElement",
            "externalLocation": {
              "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
            }
          }
        ]
      },
      {
        "id": 1114,
        "name": "ComplexAttributeConverter",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "Converts property values to and from attribute values."
        },
        "children": [
          {
            "id": 1115,
            "name": "fromAttribute",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Function called to convert an attribute value to a property\nvalue."
            },
            "children": [],
            "signatures": [
              {
                "id": 1116,
                "name": "fromAttribute",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Function called to convert an attribute value to a property\nvalue."
                },
                "parameters": [
                  {
                    "id": 1117,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  },
                  {
                    "id": 1118,
                    "name": "type",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "TypeHint"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "Type"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "ComplexAttributeConverter.fromAttribute"
            }
          },
          {
            "id": 1119,
            "name": "toAttribute",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Function called to convert a property value to an attribute\nvalue.",
              "text": "It returns unknown instead of string, to be compatible with\nhttps://github.com/WICG/trusted-types (and similar efforts).\n"
            },
            "children": [],
            "signatures": [
              {
                "id": 1120,
                "name": "toAttribute",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "Function called to convert a property value to an attribute\nvalue.",
                  "text": "It returns unknown instead of string, to be compatible with\nhttps://github.com/WICG/trusted-types (and similar efforts).\n"
                },
                "parameters": [
                  {
                    "id": 1121,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    }
                  },
                  {
                    "id": 1122,
                    "name": "type",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "TypeHint"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "ComplexAttributeConverter.toAttribute"
            }
          }
        ],
        "groups": [
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              1115,
              1119
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 42,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L42",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "typeParameter": [
          {
            "id": 1123,
            "name": "Type",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            }
          },
          {
            "id": 1124,
            "name": "TypeHint",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 27,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "location": {
          "page": "UpdatingElement",
          "anchor": "ComplexAttributeConverter"
        }
      },
      {
        "id": 1143,
        "name": "HasChanged",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 176,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L176",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "signatures": [
          {
            "id": 1144,
            "name": "HasChanged",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "parameters": [
              {
                "id": 1145,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              },
              {
                "id": 1146,
                "name": "old",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 27,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "location": {
          "page": "UpdatingElement",
          "anchor": "HasChanged"
        }
      },
      {
        "id": 1125,
        "name": "PropertyDeclaration",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "Defines options for a property accessor."
        },
        "children": [
          {
            "id": 1126,
            "name": "attribute",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates how and whether the property becomes an observed attribute.\nIf the value is `false`, the property is not added to `observedAttributes`.\nIf true or absent, the lowercased property name is observed (e.g. `fooBar`\nbecomes `foobar`). If a string, the string value is observed (e.g\n`attribute: 'foo-bar'`)."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 74,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L74",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              ]
            },
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "PropertyDeclaration.attribute"
            }
          },
          {
            "id": 1128,
            "name": "converter",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates how to convert the attribute to/from a property. If this value\nis a function, it is used to convert the attribute value a the property\nvalue. If it's an object, it can have keys for `fromAttribute` and\n`toAttribute`. If no `toAttribute` function is provided and\n`reflect` is set to `true`, the property value is set directly to the\nattribute. A default `converter` is used if none is provided; it supports\n`Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\nwhen a property changes and the converter is used to update the attribute,\nthe property is never updated again as a result of the attribute changing,\nand vice versa."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 95,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L95",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Type"
                },
                {
                  "type": "reference",
                  "name": "TypeHint"
                }
              ],
              "name": "AttributeConverter"
            },
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "PropertyDeclaration.converter"
            }
          },
          {
            "id": 1134,
            "name": "noAccessor",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates whether an accessor will be created for this property. By\ndefault, an accessor will be generated for this property that requests an\nupdate when set. If this flag is `true`, no accessor will be created, and\nit will be the user's responsibility to call\n`this.requestUpdate(propertyName, oldValue)` to request an update when\nthe property changes."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 121,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L121",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "PropertyDeclaration.noAccessor"
            }
          },
          {
            "id": 1129,
            "name": "reflect",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates if the property should reflect to an attribute.\nIf `true`, when the property is set, the attribute is set using the\nattribute name determined according to the rules for the `attribute`\nproperty option and the value of the property converted using the rules\nfrom the `converter` property option."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 104,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L104",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "PropertyDeclaration.reflect"
            }
          },
          {
            "id": 1127,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates the type of the property. This is used only as a hint for the\n`converter` to determine how to convert the attribute\nto/from a property."
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 81,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L81",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "TypeHint"
            },
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "PropertyDeclaration.type"
            }
          },
          {
            "id": 1130,
            "name": "hasChanged",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "A function that indicates if a property should be considered changed when\nit is set. The function should take the `newValue` and `oldValue` and\nreturn `true` if an update should be requested."
            },
            "children": [],
            "signatures": [
              {
                "id": 1131,
                "name": "hasChanged",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "A function that indicates if a property should be considered changed when\nit is set. The function should take the `newValue` and `oldValue` and\nreturn `true` if an update should be requested."
                },
                "parameters": [
                  {
                    "id": 1132,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    }
                  },
                  {
                    "id": 1133,
                    "name": "oldValue",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lib/updating-element.ts",
                "line": 27,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
                "moduleSpecifier": "lit-element/lib/updating-element.js"
              }
            ],
            "location": {
              "page": "UpdatingElement",
              "anchor": "PropertyDeclaration.hasChanged"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              1126,
              1128,
              1134,
              1129,
              1127
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              1130
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 66,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L66",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "typeParameter": [
          {
            "id": 1135,
            "name": "Type",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            }
          },
          {
            "id": 1136,
            "name": "TypeHint",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 27,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "location": {
          "page": "UpdatingElement",
          "anchor": "PropertyDeclaration"
        }
      },
      {
        "id": 1137,
        "name": "PropertyDeclarations",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "shortText": "Map of properties to PropertyDeclaration options. For each property an\naccessor is made, and the property is processed according to the\nPropertyDeclaration options."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 129,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L129",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "indexSignature": {
          "id": 1138,
          "name": "__index",
          "kind": 8192,
          "kindString": "Index signature",
          "flags": {},
          "parameters": [
            {
              "id": 1139,
              "name": "key",
              "kind": 32768,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "reference",
            "id": 1125,
            "name": "PropertyDeclaration",
            "location": {
              "page": "UpdatingElement",
              "anchor": "PropertyDeclaration"
            }
          }
        },
        "entrypointSources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 27,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "location": {
          "page": "UpdatingElement",
          "anchor": "PropertyDeclarations"
        }
      },
      {
        "id": 1140,
        "name": "PropertyValues",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "Map of changed properties with old values. Takes an optional generic\ninterface corresponding to the declared element properties."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 142,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L142",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "typeParameter": [
          {
            "id": 1141,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "type": {
          "type": "conditional",
          "checkType": {
            "type": "typeOperator",
            "operator": "keyof",
            "target": {
              "type": "reference",
              "name": "T"
            }
          },
          "extendsType": {
            "type": "reference",
            "name": "PropertyKey"
          },
          "trueType": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "typeOperator",
                "operator": "keyof",
                "target": {
                  "type": "reference",
                  "name": "T"
                }
              },
              {
                "type": "intrinsic",
                "name": "unknown"
              }
            ],
            "name": "Map"
          },
          "falseType": {
            "type": "intrinsic",
            "name": "never"
          }
        },
        "entrypointSources": [
          {
            "fileName": "src/lib/updating-element.ts",
            "line": 27,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/updating-element.ts#L27",
            "moduleSpecifier": "lit-element/lib/updating-element.js"
          }
        ],
        "location": {
          "page": "UpdatingElement",
          "anchor": "PropertyValues"
        }
      }
    ]
  },
  {
    "slug": "styles",
    "title": "Styles",
    "versionLinks": {
      "v2": "api/styles/"
    },
    "items": [
      {
        "id": 2169,
        "name": "css",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Template tag which which can be used with LitElement's [`styles`](/docs/v1/api/lit-element/LitElement/#LitElement.styles) property to set element styles. For security reasons, only literal\nstring values may be used. To incorporate non-literal values [`unsafeCSS`](/docs/v1/api/lit-element/styles/#unsafeCSS)\nmay be used inside a template string part."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/css-tag.ts",
            "line": 87,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/css-tag.ts#L87",
            "moduleSpecifier": "lit-element/lib/css-tag.js"
          }
        ],
        "signatures": [
          {
            "id": 2170,
            "name": "css",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Template tag which which can be used with LitElement's [`styles`](/docs/v1/api/lit-element/LitElement/#LitElement.styles) property to set element styles. For security reasons, only literal\nstring values may be used. To incorporate non-literal values [`unsafeCSS`](/docs/v1/api/lit-element/styles/#unsafeCSS)\nmay be used inside a template string part."
            },
            "parameters": [
              {
                "id": 2171,
                "name": "strings",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray"
                }
              },
              {
                "id": 2172,
                "name": "values",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      {
                        "type": "reference",
                        "id": 2155,
                        "name": "CSSResult",
                        "location": {
                          "page": "styles",
                          "anchor": "CSSResult"
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 2155,
              "name": "CSSResult",
              "location": {
                "page": "styles",
                "anchor": "CSSResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "css"
        }
      },
      {
        "id": 2155,
        "name": "CSSResult",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "children": [
          {
            "id": 2156,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/css-tag.ts",
                "line": 27,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/css-tag.ts#L27",
                "moduleSpecifier": "lit-element/lib/css-tag.js"
              }
            ],
            "signatures": [
              {
                "id": 2157,
                "name": "new CSSResult",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 2158,
                    "name": "cssText",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "id": 2159,
                    "name": "safeToken",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "symbol"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 2155,
                  "name": "CSSResult",
                  "location": {
                    "page": "styles",
                    "anchor": "CSSResult"
                  }
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "styles",
              "anchor": "CSSResult.constructor"
            }
          },
          {
            "id": 2161,
            "name": "cssText",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isReadonly": true
            },
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/css-tag.ts",
                "line": 25,
                "character": 11,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/css-tag.ts#L25",
                "moduleSpecifier": "lit-element/lib/css-tag.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "styles",
              "anchor": "CSSResult.cssText"
            }
          },
          {
            "id": 2162,
            "name": "styleSheet",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/css-tag.ts",
                "line": 38,
                "character": 6,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/css-tag.ts#L38",
                "moduleSpecifier": "lit-element/lib/css-tag.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "CSSStyleSheet",
                  "externalLocation": {
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet"
                  }
                }
              ]
            },
            "getSignature": [
              {
                "id": 2163,
                "name": "styleSheet",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "reference",
                      "name": "CSSStyleSheet",
                      "externalLocation": {
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet"
                      }
                    }
                  ]
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "styles",
              "anchor": "CSSResult.styleSheet"
            }
          },
          {
            "id": 2164,
            "name": "toString",
            "kind": 2048,
            "kindString": "Method",
            "flags": {},
            "children": [],
            "sources": [
              {
                "fileName": "src/lib/css-tag.ts",
                "line": 52,
                "character": 2,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/css-tag.ts#L52",
                "moduleSpecifier": "lit-element/lib/css-tag.js"
              }
            ],
            "signatures": [
              {
                "id": 2165,
                "name": "toString",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "styles",
              "anchor": "CSSResult.toString"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [
              2156
            ]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              2160,
              2161
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [
              2162
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              2164
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/css-tag.ts",
            "line": 22,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/css-tag.ts#L22",
            "moduleSpecifier": "lit-element/lib/css-tag.js"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResult"
        }
      },
      {
        "id": 2154,
        "name": "supportsAdoptingStyleSheets",
        "kind": 32,
        "kindString": "Variable",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Whether the current browser supports `adoptedStyleSheets`."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/css-tag.ts",
            "line": 15,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/css-tag.ts#L15",
            "moduleSpecifier": "lit-element/lib/css-tag.js"
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "defaultValue": "...",
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "supportsAdoptingStyleSheets"
        }
      },
      {
        "id": 2166,
        "name": "unsafeCSS",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Wrap a value for interpolation in a [`css`](/docs/v1/api/lit-element/styles/#css) tagged template literal.",
          "text": "This is unsafe because untrusted CSS text can be used to phone home\nor exfiltrate data to an attacker controlled site. Take care to only use\nthis with trusted input.\n"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/css-tag.ts",
            "line": 64,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/css-tag.ts#L64",
            "moduleSpecifier": "lit-element/lib/css-tag.js"
          }
        ],
        "signatures": [
          {
            "id": 2167,
            "name": "unsafeCSS",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Wrap a value for interpolation in a [`css`](/docs/v1/api/lit-element/styles/#css) tagged template literal.",
              "text": "This is unsafe because untrusted CSS text can be used to phone home\nor exfiltrate data to an attacker controlled site. Take care to only use\nthis with trusted input.\n"
            },
            "parameters": [
              {
                "id": 2168,
                "name": "value",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              }
            ],
            "type": {
              "type": "reference",
              "id": 2155,
              "name": "CSSResult",
              "location": {
                "page": "styles",
                "anchor": "CSSResult"
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "unsafeCSS"
        }
      },
      {
        "id": 3,
        "name": "CSSResultArray",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              4
            ]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              239,
              241,
              14,
              208,
              213,
              56,
              203,
              102,
              176,
              194,
              234,
              223,
              83,
              219,
              48,
              19,
              215,
              52,
              92,
              9,
              11,
              120,
              148,
              22,
              24,
              26,
              74,
              30,
              37,
              7,
              5,
              45,
              217
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 82,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L82",
            "moduleSpecifier": "lit-element"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 2,
                    "name": "CSSResultOrNative",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultOrNative"
                    }
                  },
                  {
                    "type": "reference",
                    "id": 3,
                    "name": "CSSResultArray",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultArray"
                    }
                  }
                ]
              }
            ],
            "name": "Array"
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResultArray"
        },
        "heritage": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 2,
                    "name": "CSSResultOrNative",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultOrNative"
                    }
                  },
                  {
                    "type": "reference",
                    "id": 3,
                    "name": "CSSResultArray",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultArray"
                    }
                  }
                ]
              }
            ],
            "name": "Array"
          }
        ]
      },
      {
        "id": 251,
        "name": "CSSResultGroup",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 85,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L85",
            "moduleSpecifier": "lit-element"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "id": 2,
              "name": "CSSResultOrNative",
              "location": {
                "page": "styles",
                "anchor": "CSSResultOrNative"
              }
            },
            {
              "type": "reference",
              "id": 3,
              "name": "CSSResultArray",
              "location": {
                "page": "styles",
                "anchor": "CSSResultArray"
              }
            }
          ]
        },
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResultGroup"
        }
      },
      {
        "id": 2,
        "name": "CSSResultOrNative",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 80,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L80",
            "moduleSpecifier": "lit-element"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "id": 2155,
              "name": "CSSResult",
              "location": {
                "page": "styles",
                "anchor": "CSSResult"
              }
            },
            {
              "type": "reference",
              "name": "CSSStyleSheet",
              "externalLocation": {
                "url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet"
              }
            }
          ]
        },
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResultOrNative"
        }
      }
    ]
  },
  {
    "slug": "decorators",
    "title": "Decorators",
    "versionLinks": {
      "v2": "api/decorators/"
    },
    "items": [
      {
        "id": 2135,
        "name": "customElement",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Class decorator factory that defines the decorated class as a custom element.",
          "text": "```\n@customElement('my-element')\nclass MyElement {\n  render() {\n    return html``;\n  }\n}\n```"
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/decorators.ts",
            "line": 88,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/decorators.ts#L88",
            "moduleSpecifier": "lit-element/lib/decorators.js"
          }
        ],
        "signatures": [
          {
            "id": 2136,
            "name": "customElement",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Class decorator factory that defines the decorated class as a custom element.",
              "text": "```\n@customElement('my-element')\nclass MyElement {\n  render() {\n    return html``;\n  }\n}\n```"
            },
            "parameters": [
              {
                "id": 2137,
                "name": "tagName",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "The name of the custom element to define.\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2138,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 2139,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 2140,
                        "name": "classOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "id": 2132,
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "HTMLElement",
                                  "externalLocation": {
                                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                                  }
                                }
                              ],
                              "name": "Constructor",
                              "location": {
                                "page": "decorators",
                                "anchor": "Constructor"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassDescriptor"
                            }
                          ]
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "customElement"
        }
      },
      {
        "id": 2120,
        "name": "eventOptions",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "Adds event listener options to a method used as an event listener in a\nlit-html template.",
          "tags": [
            {
              "tag": "example",
              "text": "\n```ts\nclass MyElement {\n  clicked = false;\n\n  render() {\n    return html`\n      <div @click=${this._onClick}`>\n        <button></button>\n      </div>\n    `;\n  }\n\n  @eventOptions({capture: true})\n  _onClick(e) {\n    this.clicked = true;\n  }\n}\n```"
            }
          ]
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/decorators.ts",
            "line": 422,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/decorators.ts#L422",
            "moduleSpecifier": "lit-element/lib/decorators.js"
          }
        ],
        "signatures": [
          {
            "id": 2121,
            "name": "eventOptions",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Adds event listener options to a method used as an event listener in a\nlit-html template.",
              "tags": [
                {
                  "tag": "example",
                  "text": "\n```ts\nclass MyElement {\n  clicked = false;\n\n  render() {\n    return html`\n      <div @click=${this._onClick}`>\n        <button></button>\n      </div>\n    `;\n  }\n\n  @eventOptions({capture: true})\n  _onClick(e) {\n    this.clicked = true;\n  }\n}\n```"
                }
              ]
            },
            "parameters": [
              {
                "id": 2122,
                "name": "options",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "An object that specifies event listener options as accepted by\n`EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n\nCurrent browsers support the `capture`, `passive`, and `once` options. See:\nhttps://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n"
                },
                "type": {
                  "type": "reference",
                  "name": "AddEventListenerOptions"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "eventOptions"
        }
      },
      {
        "id": 2091,
        "name": "internalProperty",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "Declares a private or protected property that still triggers updates to the\nelement when it changes.",
          "text": "Properties declared this way must not be used from HTML or HTML templating\nsystems, they're solely for properties internal to the element. These\nproperties may be renamed by optimization tools like the Closure Compiler.",
          "tags": [
            {
              "tag": "deprecated",
              "text": "`internalProperty` has been renamed to `state` in lit-element\n    3.0. Please update to `state` now to be compatible with 3.0.\n"
            }
          ]
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/decorators.ts",
            "line": 189,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/decorators.ts#L189",
            "moduleSpecifier": "lit-element/lib/decorators.js"
          }
        ],
        "signatures": [
          {
            "id": 2092,
            "name": "internalProperty",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Declares a private or protected property that still triggers updates to the\nelement when it changes.",
              "text": "Properties declared this way must not be used from HTML or HTML templating\nsystems, they're solely for properties internal to the element. These\nproperties may be renamed by optimization tools like the Closure Compiler.",
              "tags": [
                {
                  "tag": "deprecated",
                  "text": "`internalProperty` has been renamed to `state` in lit-element\n    3.0. Please update to `state` now to be compatible with 3.0.\n"
                }
              ]
            },
            "parameters": [
              {
                "id": 2093,
                "name": "options",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "id": 2141,
                  "name": "InternalPropertyDeclaration",
                  "location": {
                    "page": "decorators",
                    "anchor": "InternalPropertyDeclaration"
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2094,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 2095,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 2096,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Object"
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2097,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "internalProperty"
        }
      },
      {
        "id": 2084,
        "name": "property",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "A property decorator which creates a LitElement property which reflects a\ncorresponding attribute value. A [`PropertyDeclaration`](/docs/v1/api/lit-element/UpdatingElement/#PropertyDeclaration) may optionally be\nsupplied to configure property features.",
          "text": "This decorator should only be used for public fields. Private or protected\nfields should use the [`internalProperty`](/docs/v1/api/lit-element/decorators/#internalProperty) decorator.\n",
          "tags": [
            {
              "tag": "example",
              "text": "\n```ts\nclass MyElement {\n  @property({ type: Boolean })\n  clicked = false;\n}\n```"
            },
            {
              "tag": "exportdecorateditems",
              "text": "\n"
            }
          ]
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/decorators.ts",
            "line": 161,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/decorators.ts#L161",
            "moduleSpecifier": "lit-element/lib/decorators.js"
          }
        ],
        "signatures": [
          {
            "id": 2085,
            "name": "property",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A property decorator which creates a LitElement property which reflects a\ncorresponding attribute value. A [`PropertyDeclaration`](/docs/v1/api/lit-element/UpdatingElement/#PropertyDeclaration) may optionally be\nsupplied to configure property features.",
              "text": "This decorator should only be used for public fields. Private or protected\nfields should use the [`internalProperty`](/docs/v1/api/lit-element/decorators/#internalProperty) decorator.\n",
              "tags": [
                {
                  "tag": "example",
                  "text": "\n```ts\nclass MyElement {\n  @property({ type: Boolean })\n  clicked = false;\n}\n```"
                },
                {
                  "tag": "exportdecorateditems",
                  "text": "\n"
                }
              ]
            },
            "parameters": [
              {
                "id": 2086,
                "name": "options",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "id": 1125,
                  "name": "PropertyDeclaration",
                  "location": {
                    "page": "UpdatingElement",
                    "anchor": "PropertyDeclaration"
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2087,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 2088,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 2089,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Object"
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2090,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "property"
        }
      },
      {
        "id": 2098,
        "name": "query",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter that\nexecutes a querySelector on the element's renderRoot.",
          "tags": [
            {
              "tag": "example",
              "text": "\n\n```ts\nclass MyElement {\n  @query('#first')\n  first;\n\n  render() {\n    return html`\n      <div id=\"first\"></div>\n      <div id=\"second\"></div>\n    `;\n  }\n}\n```"
            }
          ]
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/decorators.ts",
            "line": 232,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/decorators.ts#L232",
            "moduleSpecifier": "lit-element/lib/decorators.js"
          }
        ],
        "signatures": [
          {
            "id": 2099,
            "name": "query",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A property decorator that converts a class property into a getter that\nexecutes a querySelector on the element's renderRoot.",
              "tags": [
                {
                  "tag": "example",
                  "text": "\n\n```ts\nclass MyElement {\n  @query('#first')\n  first;\n\n  render() {\n    return html`\n      <div id=\"first\"></div>\n      <div id=\"second\"></div>\n    `;\n  }\n}\n```"
                }
              ]
            },
            "parameters": [
              {
                "id": 2100,
                "name": "selector",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "A DOMString containing one or more selectors to match."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              {
                "id": 2101,
                "name": "cache",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "text": "An optional boolean which when true performs the DOM query only\nonce and caches the result.\n\nSee: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2102,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 2103,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 2104,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Object"
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2105,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "query"
        }
      },
      {
        "id": 2113,
        "name": "queryAll",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter\nthat executes a querySelectorAll on the element's renderRoot.",
          "tags": [
            {
              "tag": "example",
              "text": "\n```ts\nclass MyElement {\n  @queryAll('div')\n  divs;\n\n  render() {\n    return html`\n      <div id=\"first\"></div>\n      <div id=\"second\"></div>\n    `;\n  }\n}\n```"
            }
          ]
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/decorators.ts",
            "line": 344,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/decorators.ts#L344",
            "moduleSpecifier": "lit-element/lib/decorators.js"
          }
        ],
        "signatures": [
          {
            "id": 2114,
            "name": "queryAll",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A property decorator that converts a class property into a getter\nthat executes a querySelectorAll on the element's renderRoot.",
              "tags": [
                {
                  "tag": "example",
                  "text": "\n```ts\nclass MyElement {\n  @queryAll('div')\n  divs;\n\n  render() {\n    return html`\n      <div id=\"first\"></div>\n      <div id=\"second\"></div>\n    `;\n  }\n}\n```"
                }
              ]
            },
            "parameters": [
              {
                "id": 2115,
                "name": "selector",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "A DOMString containing one or more selectors to match.\n\nSee:\nhttps://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2116,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 2117,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 2118,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Object"
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2119,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "queryAll"
        }
      },
      {
        "id": 2123,
        "name": "queryAssignedNodes",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter that\nreturns the `assignedNodes` of the given named `slot`. Note, the type of\nthis property should be annotated as `NodeListOf<HTMLElement>`."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/decorators.ts",
            "line": 470,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/decorators.ts#L470",
            "moduleSpecifier": "lit-element/lib/decorators.js"
          }
        ],
        "signatures": [
          {
            "id": 2124,
            "name": "queryAssignedNodes",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A property decorator that converts a class property into a getter that\nreturns the `assignedNodes` of the given named `slot`. Note, the type of\nthis property should be annotated as `NodeListOf<HTMLElement>`."
            },
            "parameters": [
              {
                "id": 2125,
                "name": "slotName",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "A string name of the slot."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "defaultValue": "''"
              },
              {
                "id": 2126,
                "name": "flatten",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "A boolean which when true flattens the assigned nodes,\nmeaning any assigned nodes that are slot elements are replaced with their\nassigned nodes."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "defaultValue": "false"
              },
              {
                "id": 2127,
                "name": "selector",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "A string which filters the results to elements that match\nthe given css selector.\n\n* @example\n```ts\nclass MyElement {\n  @queryAssignedNodes('list', true, '.item')\n  listItems;\n\n  render() {\n    return html`\n      <slot name=\"list\"></slot>\n    `;\n  }\n}\n```"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "defaultValue": "''"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2128,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 2129,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 2130,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Object"
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2131,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "queryAssignedNodes"
        }
      },
      {
        "id": 2106,
        "name": "queryAsync",
        "kind": 64,
        "kindString": "Function",
        "flags": {},
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter that\nreturns a promise that resolves to the result of a querySelector on the\nelement's renderRoot done after the element's `updateComplete` promise\nresolves. When the queried property may change with element state, this\ndecorator can be used instead of requiring users to await the\n`updateComplete` before accessing the property.",
          "tags": [
            {
              "tag": "example",
              "text": "\n```ts\nclass MyElement {\n  @queryAsync('#first')\n  first;\n\n  render() {\n    return html`\n      <div id=\"first\"></div>\n      <div id=\"second\"></div>\n    `;\n  }\n}\n\n// external usage\nasync doSomethingWithFirst() {\n (await aMyElement.first).doSomething();\n}\n```"
            }
          ]
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/decorators.ts",
            "line": 301,
            "character": 16,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/decorators.ts#L301",
            "moduleSpecifier": "lit-element/lib/decorators.js"
          }
        ],
        "signatures": [
          {
            "id": 2107,
            "name": "queryAsync",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "A property decorator that converts a class property into a getter that\nreturns a promise that resolves to the result of a querySelector on the\nelement's renderRoot done after the element's `updateComplete` promise\nresolves. When the queried property may change with element state, this\ndecorator can be used instead of requiring users to await the\n`updateComplete` before accessing the property.",
              "tags": [
                {
                  "tag": "example",
                  "text": "\n```ts\nclass MyElement {\n  @queryAsync('#first')\n  first;\n\n  render() {\n    return html`\n      <div id=\"first\"></div>\n      <div id=\"second\"></div>\n    `;\n  }\n}\n\n// external usage\nasync doSomethingWithFirst() {\n (await aMyElement.first).doSomething();\n}\n```"
                }
              ]
            },
            "parameters": [
              {
                "id": 2108,
                "name": "selector",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {},
                "comment": {
                  "text": "A DOMString containing one or more selectors to match.\n\nSee: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2109,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 2110,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 2111,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Object"
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2112,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "queryAsync"
        }
      },
      {
        "id": 2147,
        "name": "state",
        "kind": 64,
        "kindString": "Function",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Declares a private or protected property that still triggers updates to the\nelement when it changes.",
          "text": "Properties declared this way must not be used from HTML or HTML templating\nsystems, they're solely for properties internal to the element. These\nproperties may be renamed by optimization tools like the Closure Compiler."
        },
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/decorators.ts",
            "line": 202,
            "character": 13,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/decorators.ts#L202",
            "moduleSpecifier": "lit-element/lib/decorators.js"
          }
        ],
        "signatures": [
          {
            "id": 2148,
            "name": "state",
            "kind": 4096,
            "kindString": "Call signature",
            "flags": {},
            "comment": {
              "shortText": "Declares a private or protected property that still triggers updates to the\nelement when it changes.",
              "text": "Properties declared this way must not be used from HTML or HTML templating\nsystems, they're solely for properties internal to the element. These\nproperties may be renamed by optimization tools like the Closure Compiler."
            },
            "parameters": [
              {
                "id": 2149,
                "name": "options",
                "kind": 32768,
                "kindString": "Parameter",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "id": 2141,
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "InternalPropertyDeclaration",
                  "location": {
                    "page": "decorators",
                    "anchor": "InternalPropertyDeclaration"
                  }
                }
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 2150,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 2151,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 2152,
                        "name": "protoOrDescriptor",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Object"
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement"
                            }
                          ]
                        }
                      },
                      {
                        "id": 2153,
                        "name": "name",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ]
              }
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "state"
        }
      },
      {
        "id": 2132,
        "name": "Constructor",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "children": [],
        "sources": [
          {
            "fileName": "src/lib/decorators.ts",
            "line": 26,
            "character": 12,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/decorators.ts#L26",
            "moduleSpecifier": "lit-element/lib/decorators.js"
          }
        ],
        "typeParameter": [
          {
            "id": 2134,
            "name": "T",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {}
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "id": 2133,
            "name": "__type",
            "kind": 65536,
            "kindString": "Type literal",
            "flags": {},
            "sources": [
              {
                "fileName": "lit-dev-api/api-data/lit-element-2/repo/src/lib/decorators.ts",
                "line": 26,
                "character": 29
              }
            ]
          }
        },
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "Constructor"
        }
      },
      {
        "id": 2141,
        "name": "InternalPropertyDeclaration",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "children": [
          {
            "id": 2142,
            "name": "hasChanged",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "A function that indicates if a property should be considered changed when\nit is set. The function should take the `newValue` and `oldValue` and\nreturn `true` if an update should be requested."
            },
            "children": [],
            "signatures": [
              {
                "id": 2143,
                "name": "hasChanged",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "comment": {
                  "shortText": "A function that indicates if a property should be considered changed when\nit is set. The function should take the `newValue` and `oldValue` and\nreturn `true` if an update should be requested."
                },
                "parameters": [
                  {
                    "id": 2144,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    }
                  },
                  {
                    "id": 2145,
                    "name": "oldValue",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ],
            "entrypointSources": [
              {
                "fileName": "src/lit-element.ts",
                "line": 57,
                "character": 0,
                "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
                "moduleSpecifier": "lit-element"
              }
            ],
            "location": {
              "page": "decorators",
              "anchor": "InternalPropertyDeclaration.hasChanged"
            }
          }
        ],
        "groups": [
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              2142
            ]
          }
        ],
        "sources": [
          {
            "fileName": "src/lib/decorators.ts",
            "line": 169,
            "character": 17,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lib/decorators.ts#L169",
            "moduleSpecifier": "lit-element/lib/decorators.js"
          }
        ],
        "typeParameter": [
          {
            "id": 2146,
            "name": "Type",
            "kind": 131072,
            "kindString": "Type parameter",
            "flags": {},
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        ],
        "entrypointSources": [
          {
            "fileName": "src/lit-element.ts",
            "line": 57,
            "character": 0,
            "gitHubUrl": "https://github.com/lit/lit-element/blob/c9b40e6b26dd7a9361e32421a4343949d242e0ca/src/lit-element.ts#L57",
            "moduleSpecifier": "lit-element"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "InternalPropertyDeclaration"
        }
      }
    ]
  }
]