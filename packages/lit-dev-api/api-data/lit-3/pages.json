[
  {
    "slug": "LitElement",
    "title": "LitElement",
    "versionLinks": {
      "v1": "api/lit-element/LitElement/"
    },
    "repo": "lit/lit",
    "commit": "12109c25997ef03180d7eefe05c64e0fb20dd2b0",
    "items": [
      {
        "name": "LitElement",
        "comment": {
          "shortText": "Base element class that manages element properties and attributes, and\nrenders a lit-html template.",
          "text": "To define a component, subclass `LitElement` and implement a\n`render` method to provide the component's template. Define properties\nusing the [`properties`](/docs/v3/api/LitElement/#LitElement.properties) property or the\n[`property`](/docs/v3/api/decorators/#property) decorator.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-element/src/lit-element.ts",
            "line": 111,
            "moduleSpecifier": "lit-element/lit-element.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "ReactiveElement",
            "package": "@lit/reactive-element",
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "LitElement",
          "anchor": "LitElement"
        },
        "heritage": [
          {
            "type": "reference",
            "name": "ReactiveElement",
            "package": "@lit/reactive-element",
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement"
            }
          }
        ],
        "expandedCategories": [
          {
            "anchor": "LitElement/attributes",
            "title": "Attributes",
            "children": [
              {
                "name": "attributeChangedCallback",
                "comment": {
                  "shortText": "Synchronizes property values when attributes change.",
                  "text": "Specifically, when an attribute is set, the corresponding property is set.\nYou should rarely need to implement this callback. If this method is\noverridden, `super.attributeChangedCallback(name, _old, value)` must be\ncalled.\nSee [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\non MDN for more information about the `attributeChangedCallback`.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1042,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "attributeChangedCallback",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 558
                      }
                    ],
                    "parameters": [
                      {
                        "name": "name",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "_old",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": null
                            },
                            {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "value",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": null
                            },
                            {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.attributeChangedCallback"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.attributeChangedCallback",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.attributeChangedCallback"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.attributeChangedCallback"
                }
              },
              {
                "name": "observedAttributes",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Returns a list of attributes corresponding to the registered properties."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 584,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                "getSignature": {
                  "name": "observedAttributes",
                  "comment": {
                    "blockTags": [
                      {
                        "tag": "@nocollapse"
                      }
                    ],
                    "shortText": "Returns a list of attributes corresponding to the registered properties."
                  },
                  "sources": [
                    {
                      "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                      "line": 347
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "ReactiveElement.observedAttributes"
                  },
                  "kindString": "Get signature"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.observedAttributes",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.observedAttributes"
                  }
                },
                "kindString": "Accessor",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.observedAttributes"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/controllers",
            "title": "Controllers",
            "children": [
              {
                "name": "addController",
                "comment": {
                  "shortText": "Registers a `ReactiveController` to participate in the element's reactive\nupdate cycle. The element automatically calls into any registered\ncontrollers during its lifecycle callbacks.",
                  "text": "If the element is connected when `addController()` is called, the\ncontroller's `hostConnected()` callback will be immediately called.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 928,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "addController",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 497
                      }
                    ],
                    "parameters": [
                      {
                        "name": "controller",
                        "type": {
                          "type": "reference",
                          "name": "ReactiveController",
                          "package": "@lit/reactive-element",
                          "location": {
                            "page": "controllers",
                            "anchor": "ReactiveController"
                          }
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.addController"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.addController",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.addController"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.addController"
                }
              },
              {
                "name": "removeController",
                "comment": {
                  "shortText": "Removes a `ReactiveController` from the element."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 943,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "removeController",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 502
                      }
                    ],
                    "parameters": [
                      {
                        "name": "controller",
                        "type": {
                          "type": "reference",
                          "name": "ReactiveController",
                          "package": "@lit/reactive-element",
                          "location": {
                            "page": "controllers",
                            "anchor": "ReactiveController"
                          }
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.removeController"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.removeController",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.removeController"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.removeController"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/dev-mode",
            "title": "Dev mode",
            "children": [
              {
                "name": "disableWarning",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Disable the given warning category for this class.",
                  "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n```ts\n// Disable for all ReactiveElement subclasses\nReactiveElement.disableWarning?.('migration');\n// Disable for only MyElement and subclasses\nMyElement.disableWarning?.('migration');\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 440,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 222
                      }
                    ],
                    "signatures": [
                      {
                        "name": "__type",
                        "comment": {
                          "blockTags": [
                            {
                              "tag": "@nocollapse"
                            }
                          ],
                          "shortText": "Disable the given warning category for this class.",
                          "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n```ts\n// Disable for all ReactiveElement subclasses\nReactiveElement.disableWarning?.('migration');\n// Disable for only MyElement and subclasses\nMyElement.disableWarning?.('migration');\n```\n"
                        },
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                            "line": 222
                          }
                        ],
                        "parameters": [
                          {
                            "name": "warningKind",
                            "type": {
                              "type": "reference",
                              "name": "WarningKind",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "misc",
                                "anchor": "WarningKind"
                              }
                            },
                            "kindString": "Parameter"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Type literal"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.disableWarning",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.disableWarning"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.disableWarning"
                }
              },
              {
                "name": "enabledWarnings",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Read or set all the enabled warning categories for this class.",
                  "text": "This property is only used in development builds.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 402,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "name": "WarningKind",
                    "package": "@lit/reactive-element",
                    "location": {
                      "page": "misc",
                      "anchor": "WarningKind"
                    }
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.enabledWarnings",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.enabledWarnings"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.enabledWarnings"
                }
              },
              {
                "name": "enableWarning",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Enable the given warning category for this class.",
                  "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n```ts\n// Enable for all ReactiveElement subclasses\nReactiveElement.enableWarning?.('migration');\n// Enable for only MyElement and subclasses\nMyElement.enableWarning?.('migration');\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 421,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 204
                      }
                    ],
                    "signatures": [
                      {
                        "name": "__type",
                        "comment": {
                          "blockTags": [
                            {
                              "tag": "@nocollapse"
                            }
                          ],
                          "shortText": "Enable the given warning category for this class.",
                          "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n```ts\n// Enable for all ReactiveElement subclasses\nReactiveElement.enableWarning?.('migration');\n// Enable for only MyElement and subclasses\nMyElement.enableWarning?.('migration');\n```\n"
                        },
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                            "line": 204
                          }
                        ],
                        "parameters": [
                          {
                            "name": "warningKind",
                            "type": {
                              "type": "reference",
                              "name": "WarningKind",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "misc",
                                "anchor": "WarningKind"
                              }
                            },
                            "kindString": "Parameter"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Type literal"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.enableWarning",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.enableWarning"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.enableWarning"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/lifecycle",
            "title": "Lifecycle",
            "children": [
              {
                "name": "connectedCallback",
                "comment": {
                  "shortText": "Invoked when the component is added to the document's DOM.",
                  "text": "In `connectedCallback()` you should setup tasks that should only occur when\nthe element is connected to the document. The most common of these is\nadding event listeners to nodes external to the element, like a keydown\nevent handler added to the window.\n```ts\nconnectedCallback() {\n  super.connectedCallback();\n  addEventListener('keydown', this._handleKeydown);\n}\n```\nTypically, anything done in `connectedCallback()` should be undone when the\nelement is disconnected, in `disconnectedCallback()`.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 184,
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "connectedCallback",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-element/development/lit-element.d.ts",
                        "line": 130
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "overwrites": {
                      "type": "reference",
                      "name": "ReactiveElement.connectedCallback"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "overwrites": {
                  "type": "reference",
                  "name": "ReactiveElement.connectedCallback",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.connectedCallback"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.connectedCallback"
                }
              },
              {
                "name": "disconnectedCallback",
                "comment": {
                  "shortText": "Invoked when the component is removed from the document's DOM.",
                  "text": "This callback is the main signal to the element that it may no longer be\nused. `disconnectedCallback()` should ensure that nothing is holding a\nreference to the element (such as event listeners added to nodes external\nto the element), so that it is free to be garbage collected.\n```ts\ndisconnectedCallback() {\n  super.disconnectedCallback();\n  window.removeEventListener('keydown', this._handleKeydown);\n}\n```\nAn element may be re-connected after being disconnected.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 208,
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "disconnectedCallback",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-element/development/lit-element.d.ts",
                        "line": 150
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "overwrites": {
                      "type": "reference",
                      "name": "ReactiveElement.disconnectedCallback"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "overwrites": {
                  "type": "reference",
                  "name": "ReactiveElement.disconnectedCallback",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.disconnectedCallback"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.disconnectedCallback"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/Other",
            "title": "Other",
            "children": [
              {
                "name": "addInitializer",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Adds an initializer function to the class that is called during instance\nconstruction.",
                  "text": "This is useful for code that runs against a `ReactiveElement`\nsubclass, such as a decorator, that needs to do work for each\ninstance, such as setting up a `ReactiveController`.\n```ts\nconst myDecorator = (target: typeof ReactiveElement, key: string) => {\n  target.addInitializer((instance: ReactiveElement) => {\n    // This is run during construction of the element\n    new MyController(instance);\n  });\n}\n```\nDecorating a field will then cause each instance to run an initializer\nthat adds a controller:\n```ts\nclass MyElement extends LitElement {\n  @myDecorator foo;\n}\n```\nInitializers are stored per-constructor. Adding an initializer to a\nsubclass does not add it to a superclass. Since initializers are run in\nconstructors, initializers will run in order of the class hierarchy,\nstarting with superclasses and progressing to the instance's class.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 475,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "addInitializer",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 256
                      }
                    ],
                    "parameters": [
                      {
                        "name": "initializer",
                        "type": {
                          "type": "reference",
                          "name": "Initializer",
                          "package": "@lit/reactive-element",
                          "location": {
                            "page": "misc",
                            "anchor": "Initializer"
                          }
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.addInitializer"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.addInitializer",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.addInitializer"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.addInitializer"
                }
              },
              {
                "name": "finalize",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 742,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "finalize",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 423
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.finalize"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.finalize",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.finalize"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.finalize"
                }
              },
              {
                "name": "finalized",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Ensure this class is marked as `finalized` as an optimization ensuring\nit will not needlessly try to `finalize`.",
                  "text": "Note this property name is a string to prevent breaking Closure JS Compiler\noptimizations. See @lit/reactive-element for more information.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 119,
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "ReactiveElement.finalized",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.finalized"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.finalized"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/properties",
            "title": "Properties",
            "children": [
              {
                "name": "createProperty",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a [`PropertyDeclaration`](/docs/v3/api/ReactiveElement/#PropertyDeclaration) for the property with the\ngiven options. The property setter calls the property's `hasChanged`\nproperty option or uses a strict identity check to determine whether or not\nto request an update.",
                  "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 623,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "createProperty",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 373
                      }
                    ],
                    "parameters": [
                      {
                        "name": "name",
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "options",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "package": "@lit/reactive-element",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.createProperty"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.createProperty",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.createProperty"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.createProperty"
                }
              },
              {
                "name": "elementProperties",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Memoized list of all element properties, including any superclass properties.\nCreated lazily on user subclasses when finalizing the class."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 507,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "PropertyDeclarationMap",
                  "package": "@lit/reactive-element"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.elementProperties",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.elementProperties"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.elementProperties"
                }
              },
              {
                "name": "getPropertyDescriptor",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                  "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 692,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "getPropertyDescriptor",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 401
                      }
                    ],
                    "parameters": [
                      {
                        "name": "name",
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "key",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "options",
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "package": "@lit/reactive-element",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "PropertyDescriptor",
                          "package": "typescript"
                        }
                      ]
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.getPropertyDescriptor"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.getPropertyDescriptor",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.getPropertyDescriptor"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.getPropertyDescriptor"
                }
              },
              {
                "name": "getPropertyOptions",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    },
                    {
                      "tag": "@final"
                    }
                  ],
                  "shortText": "Returns the property options associated with the given property.\nThese options are defined with a `PropertyDeclaration` via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                  "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override\n[`createProperty`](/docs/v3/api/LitElement/#LitElement.createProperty).\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 732,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "getPropertyOptions",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 416
                      }
                    ],
                    "parameters": [
                      {
                        "name": "name",
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "package": "@lit/reactive-element",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.getPropertyOptions"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.getPropertyOptions",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.getPropertyOptions"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.getPropertyOptions"
                }
              },
              {
                "name": "properties",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "User-supplied object that maps property names to `PropertyDeclaration`\nobjects containing options for configuring reactive properties. When\na reactive property is set the element will update and render.",
                  "text": "By default properties are public fields, and as such, they should be\nconsidered as primarily settable by element users, either via attribute or\nthe property itself.\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state: true` option. Properties\nmarked as `state` do not reflect from the corresponding attribute\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating\npublic properties should typically not be done for non-primitive (object or\narray) properties. In other cases when an element needs to manage state, a\nprivate property set with the `state: true` option should be used. When\nneeded, state properties can be initialized via public properties to\nfacilitate complex interactions.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 534,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "PropertyDeclarations",
                  "package": "@lit/reactive-element",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "PropertyDeclarations"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.properties",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.properties"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.properties"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/rendering",
            "title": "Rendering",
            "children": [
              {
                "name": "createRenderRoot",
                "flags": {
                  "isProtected": true
                },
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 134,
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "createRenderRoot",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-element/development/lit-element.d.ts",
                        "line": 101
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "Element",
                          "package": "typescript",
                          "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                        },
                        {
                          "type": "reference",
                          "name": "ShadowRoot",
                          "package": "typescript",
                          "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                        }
                      ]
                    },
                    "overwrites": {
                      "type": "reference",
                      "name": "ReactiveElement.createRenderRoot"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "overwrites": {
                  "type": "reference",
                  "name": "ReactiveElement.createRenderRoot",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.createRenderRoot"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.createRenderRoot"
                }
              },
              {
                "name": "render",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked on each update to perform rendering tasks. This method may return\nany value renderable by lit-html's `ChildPart` - typically a\n`TemplateResult`. Setting properties inside this method will *not* trigger\nthe element to update."
                },
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 220,
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "render",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-element/development/lit-element.d.ts",
                        "line": 158
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.render"
                }
              },
              {
                "name": "renderOptions",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 127,
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "RenderOptions",
                  "package": "lit-html",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.renderOptions"
                }
              },
              {
                "name": "renderRoot",
                "flags": {
                  "isReadonly": true
                },
                "comment": {
                  "shortText": "Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 832,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "HTMLElement",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                    },
                    {
                      "type": "reference",
                      "name": "ShadowRoot",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                    }
                  ]
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.renderRoot",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.renderRoot"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.renderRoot"
                }
              },
              {
                "name": "shadowRootOptions",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Options used when calling `attachShadow`. Set this property to customize\nthe options for the shadowRoot; for example, to create a closed\nshadowRoot: `{mode: 'closed'}`.",
                  "text": "Note, these options are used in `createRenderRoot`. If this method\nis customized, options should be respected if possible.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 792,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "ShadowRootInit",
                  "package": "typescript",
                  "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#parameters"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.shadowRootOptions",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.shadowRootOptions"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.shadowRootOptions"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/styles",
            "title": "Styles",
            "children": [
              {
                "name": "elementStyles",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Memoized list of all element styles.\nCreated lazily on user subclasses when finalizing the class."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 542,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "name": "CSSResultOrNative",
                    "package": "@lit/reactive-element",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultOrNative"
                    }
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.elementStyles",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.elementStyles"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.elementStyles"
                }
              },
              {
                "name": "finalizeStyles",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
                  "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 808,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "finalizeStyles",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 449
                      }
                    ],
                    "parameters": [
                      {
                        "name": "styles",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "CSSResultGroup",
                          "package": "@lit/reactive-element",
                          "location": {
                            "page": "styles",
                            "anchor": "CSSResultGroup"
                          }
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "name": "CSSResultOrNative",
                        "package": "@lit/reactive-element",
                        "location": {
                          "page": "styles",
                          "anchor": "CSSResultOrNative"
                        }
                      }
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.finalizeStyles"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.finalizeStyles",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.finalizeStyles"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.finalizeStyles"
                }
              },
              {
                "name": "styles",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Array of styles to apply to the element. The styles should be defined\nusing the [`css`](/docs/v3/api/styles/#css) tag function, via constructible stylesheets, or\nimported from native CSS module scripts.",
                  "text": "Note on Content Security Policy:\nElement styles are implemented with `<style>` tags when the browser doesn't\nsupport adopted StyleSheets. To use such `<style>` tags with the style-src\nCSP directive, the style-src value must either include 'unsafe-inline' or\n`nonce-<base64-value>` with `<base64-value>` replaced be a server-generated\nnonce.\nTo provide a nonce to use on generated `<style>` elements, set\n`window.litNonce` to a server-generated nonce in your page's HTML, before\nloading application code:\n```html\n<script>\n  // Generated and unique per request:\n  window.litNonce = 'a1b2c3d4';\n</script>\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 570,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "CSSResultGroup",
                  "package": "@lit/reactive-element",
                  "location": {
                    "page": "styles",
                    "anchor": "CSSResultGroup"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.styles",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.styles"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.styles"
                }
              }
            ]
          },
          {
            "anchor": "LitElement/updates",
            "title": "Updates",
            "children": [
              {
                "name": "enableUpdating",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1018,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "enableUpdating",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 538
                      }
                    ],
                    "parameters": [
                      {
                        "name": "_requestedUpdate",
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.enableUpdating"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.enableUpdating",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.enableUpdating"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.enableUpdating"
                }
              },
              {
                "name": "firstUpdated",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                  "text": "```ts\nfirstUpdated() {\n  this.renderRoot.getElementById('my-text-area').focus();\n}\n```\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1468,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "firstUpdated",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 725
                      }
                    ],
                    "parameters": [
                      {
                        "name": "_changedProperties",
                        "comment": {
                          "shortText": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "PropertyKey",
                                  "package": "typescript"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              ],
                              "name": "Map",
                              "package": "typescript"
                            },
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              ],
                              "name": "PropertyValueMap",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "misc",
                                "anchor": "PropertyValueMap"
                              }
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.firstUpdated"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.firstUpdated",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.firstUpdated"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.firstUpdated"
                }
              },
              {
                "name": "getUpdateComplete",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@returns",
                      "content": [
                        {
                          "text": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                        }
                      ]
                    }
                  ],
                  "shortText": "Override point for the `updateComplete` promise.",
                  "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1405,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "getUpdateComplete",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 678
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      ],
                      "name": "Promise",
                      "package": "typescript"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.getUpdateComplete"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.getUpdateComplete",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.getUpdateComplete"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.getUpdateComplete"
                }
              },
              {
                "name": "hasUpdated",
                "comment": {
                  "shortText": "Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 869,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.hasUpdated",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.hasUpdated"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.hasUpdated"
                }
              },
              {
                "name": "isUpdatePending",
                "comment": {
                  "shortText": "True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 862,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.isUpdatePending",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.isUpdatePending"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.isUpdatePending"
                }
              },
              {
                "name": "performUpdate",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                  "text": "Call `performUpdate()` to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1241,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "performUpdate",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 614
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Promise",
                          "package": "typescript"
                        }
                      ]
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.performUpdate"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.performUpdate",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.performUpdate"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.performUpdate"
                }
              },
              {
                "name": "requestUpdate",
                "comment": {
                  "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1141,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "requestUpdate",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 574
                      }
                    ],
                    "parameters": [
                      {
                        "name": "name",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "name of requesting property"
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "oldValue",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "old value of requesting property"
                        },
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "options",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "property options to use instead of the previously\n    configured options"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "package": "@lit/reactive-element",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.requestUpdate"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.requestUpdate",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.requestUpdate"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.requestUpdate"
                }
              },
              {
                "name": "scheduleUpdate",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
                  "text": "For instance, to schedule updates to occur just before the next frame:\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1220,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "scheduleUpdate",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 596
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Promise",
                          "package": "typescript"
                        }
                      ]
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.scheduleUpdate"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.scheduleUpdate",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.scheduleUpdate"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.scheduleUpdate"
                }
              },
              {
                "name": "shouldUpdate",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Controls whether or not `update()` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1417,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "shouldUpdate",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 687
                      }
                    ],
                    "parameters": [
                      {
                        "name": "_changedProperties",
                        "comment": {
                          "shortText": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "PropertyKey",
                                  "package": "typescript"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              ],
                              "name": "Map",
                              "package": "typescript"
                            },
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              ],
                              "name": "PropertyValueMap",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "misc",
                                "anchor": "PropertyValueMap"
                              }
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.shouldUpdate"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.shouldUpdate",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.shouldUpdate"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.shouldUpdate"
                }
              },
              {
                "name": "update",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update."
                },
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 152,
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "update",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-element/development/lit-element.d.ts",
                        "line": 109
                      }
                    ],
                    "parameters": [
                      {
                        "name": "changedProperties",
                        "comment": {
                          "shortText": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "PropertyKey",
                                  "package": "typescript"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              ],
                              "name": "Map",
                              "package": "typescript"
                            },
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              ],
                              "name": "PropertyValueMap",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "misc",
                                "anchor": "PropertyValueMap"
                              }
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "overwrites": {
                      "type": "reference",
                      "name": "ReactiveElement.update"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "overwrites": {
                  "type": "reference",
                  "name": "ReactiveElement.update",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.update"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.update"
                }
              },
              {
                "name": "updateComplete",
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@returns",
                      "content": [
                        {
                          "text": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                        }
                      ]
                    }
                  ],
                  "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                  "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1378,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ],
                  "name": "Promise",
                  "package": "typescript"
                },
                "getSignature": {
                  "name": "updateComplete",
                  "comment": {
                    "blockTags": [
                      {
                        "tag": "@returns",
                        "content": [
                          {
                            "text": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                          }
                        ]
                      }
                    ],
                    "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                    "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n"
                  },
                  "sources": [
                    {
                      "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                      "line": 654
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "ReactiveElement.updateComplete"
                  },
                  "kindString": "Get signature"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.updateComplete",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.updateComplete"
                  }
                },
                "kindString": "Accessor",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.updateComplete"
                }
              },
              {
                "name": "updated",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1450,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "updated",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 708
                      }
                    ],
                    "parameters": [
                      {
                        "name": "_changedProperties",
                        "comment": {
                          "shortText": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "PropertyKey",
                                  "package": "typescript"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              ],
                              "name": "Map",
                              "package": "typescript"
                            },
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              ],
                              "name": "PropertyValueMap",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "misc",
                                "anchor": "PropertyValueMap"
                              }
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.updated"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.updated",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.updated"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.updated"
                }
              },
              {
                "name": "willUpdate",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked before `update()` to compute values needed during the update.",
                  "text": "Implement `willUpdate` to compute property values that depend on other\nproperties and are used in the rest of the update process.\n```ts\nwillUpdate(changedProperties) {\n  // only need to check changed properties for an expensive computation.\n  if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n    this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n  }\n}\nrender() {\n  return html`SHA: ${this.sha}`;\n}\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1328,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "willUpdate",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 636
                      }
                    ],
                    "parameters": [
                      {
                        "name": "_changedProperties",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "PropertyKey",
                                  "package": "typescript"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              ],
                              "name": "Map",
                              "package": "typescript"
                            },
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              ],
                              "name": "PropertyValueMap",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "misc",
                                "anchor": "PropertyValueMap"
                              }
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "inheritedFrom": {
                      "type": "reference",
                      "name": "ReactiveElement.willUpdate"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "inheritedFrom": {
                  "type": "reference",
                  "name": "ReactiveElement.willUpdate",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "ReactiveElement.willUpdate"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "LitElement",
                  "anchor": "LitElement.willUpdate"
                }
              }
            ]
          }
        ]
      },
      {
        "name": "RenderOptions",
        "comment": {
          "shortText": "Object specifying options for controlling lit-html rendering. Note that\nwhile `render` may be called multiple times on the same `container` (and\n`renderBefore` reference node) to efficiently update the rendered content,\nonly the options passed in during the first render are respected during\nthe lifetime of renders to that unique `container` + `renderBefore`\ncombination."
        },
        "children": [
          {
            "name": "creationScope",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Node used for cloning the template (`importNode` will be called on this\nnode). This controls the `ownerDocument` of the rendered DOM, along with\nany inherited context. Defaults to the global `document`."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 619,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "name": "__type",
                "children": [
                  {
                    "name": "importNode",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                        "line": 300
                      }
                    ],
                    "signatures": [
                      {
                        "name": "importNode",
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                            "line": 300
                          }
                        ],
                        "parameters": [
                          {
                            "name": "node",
                            "type": {
                              "type": "reference",
                              "name": "Node",
                              "package": "typescript"
                            },
                            "kindString": "Parameter"
                          },
                          {
                            "name": "deep",
                            "flags": {
                              "isOptional": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "boolean"
                            },
                            "kindString": "Parameter"
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "Node",
                          "package": "typescript"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Method"
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                    "line": 299
                  }
                ],
                "kindString": "Type literal"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "RenderOptions.creationScope"
            }
          },
          {
            "name": "host",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "An object to use as the `this` value for event listeners. It's often\nuseful to set this to the host component rendering a template."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 609,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "object"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "RenderOptions.host"
            }
          },
          {
            "name": "isConnected",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "The initial connected state for the top-level part being rendered. If no\n`isConnected` option is set, `AsyncDirective`s will be connected by\ndefault. Set to `false` if the initial render occurs in a disconnected tree\nand `AsyncDirective`s should see `isConnected === false` for their initial\nrender. The `part.setConnected()` method must be used subsequent to initial\nrender to change the connected state of the part."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 628,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "RenderOptions.isConnected"
            }
          },
          {
            "name": "renderBefore",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "A DOM node before which to render content in the container."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 613,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "ChildNode",
                  "package": "typescript"
                }
              ]
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "LitElement",
              "anchor": "RenderOptions.renderBefore"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 604,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "LitElement",
          "anchor": "RenderOptions"
        }
      }
    ]
  },
  {
    "slug": "ReactiveElement",
    "title": "ReactiveElement",
    "versionLinks": {
      "v1": "api/lit-element/UpdatingElement/"
    },
    "repo": "lit/lit",
    "commit": "12109c25997ef03180d7eefe05c64e0fb20dd2b0",
    "items": [
      {
        "name": "ReactiveElement",
        "flags": {
          "isAbstract": true
        },
        "comment": {
          "blockTags": [
            {
              "tag": "@noInheritDoc"
            }
          ],
          "shortText": "Base element class which manages element properties and attributes. When\nproperties change, the `update` method is asynchronously called. This method\nshould be supplied by subclassers to render updates as desired."
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 381,
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "HTMLElement",
            "package": "typescript",
            "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "name": "LitElement",
            "location": {
              "page": "LitElement",
              "anchor": "LitElement"
            }
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "name": "ReactiveControllerHost",
            "package": "@lit/reactive-element",
            "location": {
              "page": "controllers",
              "anchor": "ReactiveControllerHost"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "ReactiveElement"
        },
        "heritage": [
          {
            "type": "reference",
            "name": "HTMLElement",
            "package": "typescript",
            "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
          }
        ],
        "expandedCategories": [
          {
            "anchor": "ReactiveElement/attributes",
            "title": "Attributes",
            "children": [
              {
                "name": "attributeChangedCallback",
                "comment": {
                  "shortText": "Synchronizes property values when attributes change.",
                  "text": "Specifically, when an attribute is set, the corresponding property is set.\nYou should rarely need to implement this callback. If this method is\noverridden, `super.attributeChangedCallback(name, _old, value)` must be\ncalled.\nSee [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\non MDN for more information about the `attributeChangedCallback`.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1042,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "attributeChangedCallback",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 558
                      }
                    ],
                    "parameters": [
                      {
                        "name": "name",
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "_old",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": null
                            },
                            {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "value",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "literal",
                              "value": null
                            },
                            {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.attributeChangedCallback"
                }
              },
              {
                "name": "observedAttributes",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Returns a list of attributes corresponding to the registered properties."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 584,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                "getSignature": {
                  "name": "observedAttributes",
                  "comment": {
                    "blockTags": [
                      {
                        "tag": "@nocollapse"
                      }
                    ],
                    "shortText": "Returns a list of attributes corresponding to the registered properties."
                  },
                  "sources": [
                    {
                      "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                      "line": 347
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  "kindString": "Get signature"
                },
                "kindString": "Accessor",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.observedAttributes"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/controllers",
            "title": "Controllers",
            "children": [
              {
                "name": "addController",
                "comment": {
                  "shortText": "Registers a `ReactiveController` to participate in the element's reactive\nupdate cycle. The element automatically calls into any registered\ncontrollers during its lifecycle callbacks.",
                  "text": "If the element is connected when `addController()` is called, the\ncontroller's `hostConnected()` callback will be immediately called.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 928,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "addController",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 497
                      }
                    ],
                    "parameters": [
                      {
                        "name": "controller",
                        "type": {
                          "type": "reference",
                          "name": "ReactiveController",
                          "package": "@lit/reactive-element",
                          "location": {
                            "page": "controllers",
                            "anchor": "ReactiveController"
                          }
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "implementationOf": {
                      "type": "reference",
                      "name": "ReactiveControllerHost.addController"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "implementationOf": {
                  "type": "reference",
                  "name": "ReactiveControllerHost.addController",
                  "location": {
                    "page": "controllers",
                    "anchor": "ReactiveControllerHost.addController"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.addController"
                }
              },
              {
                "name": "removeController",
                "comment": {
                  "shortText": "Removes a `ReactiveController` from the element."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 943,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "removeController",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 502
                      }
                    ],
                    "parameters": [
                      {
                        "name": "controller",
                        "type": {
                          "type": "reference",
                          "name": "ReactiveController",
                          "package": "@lit/reactive-element",
                          "location": {
                            "page": "controllers",
                            "anchor": "ReactiveController"
                          }
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "implementationOf": {
                      "type": "reference",
                      "name": "ReactiveControllerHost.removeController"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "implementationOf": {
                  "type": "reference",
                  "name": "ReactiveControllerHost.removeController",
                  "location": {
                    "page": "controllers",
                    "anchor": "ReactiveControllerHost.removeController"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.removeController"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/dev-mode",
            "title": "Dev mode",
            "children": [
              {
                "name": "disableWarning",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Disable the given warning category for this class.",
                  "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n```ts\n// Disable for all ReactiveElement subclasses\nReactiveElement.disableWarning?.('migration');\n// Disable for only MyElement and subclasses\nMyElement.disableWarning?.('migration');\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 440,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 222
                      }
                    ],
                    "signatures": [
                      {
                        "name": "__type",
                        "comment": {
                          "blockTags": [
                            {
                              "tag": "@nocollapse"
                            }
                          ],
                          "shortText": "Disable the given warning category for this class.",
                          "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n```ts\n// Disable for all ReactiveElement subclasses\nReactiveElement.disableWarning?.('migration');\n// Disable for only MyElement and subclasses\nMyElement.disableWarning?.('migration');\n```\n"
                        },
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                            "line": 222
                          }
                        ],
                        "parameters": [
                          {
                            "name": "warningKind",
                            "type": {
                              "type": "reference",
                              "name": "WarningKind",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "misc",
                                "anchor": "WarningKind"
                              }
                            },
                            "kindString": "Parameter"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Type literal"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.disableWarning"
                }
              },
              {
                "name": "enabledWarnings",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Read or set all the enabled warning categories for this class.",
                  "text": "This property is only used in development builds.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 402,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "name": "WarningKind",
                    "package": "@lit/reactive-element",
                    "location": {
                      "page": "misc",
                      "anchor": "WarningKind"
                    }
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.enabledWarnings"
                }
              },
              {
                "name": "enableWarning",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Enable the given warning category for this class.",
                  "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n```ts\n// Enable for all ReactiveElement subclasses\nReactiveElement.enableWarning?.('migration');\n// Enable for only MyElement and subclasses\nMyElement.enableWarning?.('migration');\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 421,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 204
                      }
                    ],
                    "signatures": [
                      {
                        "name": "__type",
                        "comment": {
                          "blockTags": [
                            {
                              "tag": "@nocollapse"
                            }
                          ],
                          "shortText": "Enable the given warning category for this class.",
                          "text": "This method only exists in development builds, so it should be accessed\nwith a guard like:\n```ts\n// Enable for all ReactiveElement subclasses\nReactiveElement.enableWarning?.('migration');\n// Enable for only MyElement and subclasses\nMyElement.enableWarning?.('migration');\n```\n"
                        },
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                            "line": 204
                          }
                        ],
                        "parameters": [
                          {
                            "name": "warningKind",
                            "type": {
                              "type": "reference",
                              "name": "WarningKind",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "misc",
                                "anchor": "WarningKind"
                              }
                            },
                            "kindString": "Parameter"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Type literal"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.enableWarning"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/lifecycle",
            "title": "Lifecycle",
            "children": [
              {
                "name": "connectedCallback",
                "comment": {
                  "shortText": "On first connection, creates the element's renderRoot, sets up\nelement styling, and enables updating."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 999,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "connectedCallback",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 531
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.connectedCallback"
                }
              },
              {
                "name": "disconnectedCallback",
                "comment": {
                  "shortText": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1026,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "disconnectedCallback",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 545
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.disconnectedCallback"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/Other",
            "title": "Other",
            "children": [
              {
                "name": "addInitializer",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Adds an initializer function to the class that is called during instance\nconstruction.",
                  "text": "This is useful for code that runs against a `ReactiveElement`\nsubclass, such as a decorator, that needs to do work for each\ninstance, such as setting up a `ReactiveController`.\n```ts\nconst myDecorator = (target: typeof ReactiveElement, key: string) => {\n  target.addInitializer((instance: ReactiveElement) => {\n    // This is run during construction of the element\n    new MyController(instance);\n  });\n}\n```\nDecorating a field will then cause each instance to run an initializer\nthat adds a controller:\n```ts\nclass MyElement extends LitElement {\n  @myDecorator foo;\n}\n```\nInitializers are stored per-constructor. Adding an initializer to a\nsubclass does not add it to a superclass. Since initializers are run in\nconstructors, initializers will run in order of the class hierarchy,\nstarting with superclasses and progressing to the instance's class.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 475,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "addInitializer",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 256
                      }
                    ],
                    "parameters": [
                      {
                        "name": "initializer",
                        "type": {
                          "type": "reference",
                          "name": "Initializer",
                          "package": "@lit/reactive-element",
                          "location": {
                            "page": "misc",
                            "anchor": "Initializer"
                          }
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.addInitializer"
                }
              },
              {
                "name": "finalize",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Creates property accessors for registered properties, sets up element\nstyling, and ensures any superclasses are also finalized. Returns true if\nthe element was finalized."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 742,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "finalize",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 423
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.finalize"
                }
              },
              {
                "name": "finalized",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "shortText": "Marks class as having finished creating properties."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 499,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.finalized"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/properties",
            "title": "Properties",
            "children": [
              {
                "name": "createProperty",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Creates a property accessor on the element prototype if one does not exist\nand stores a [`PropertyDeclaration`](/docs/v3/api/ReactiveElement/#PropertyDeclaration) for the property with the\ngiven options. The property setter calls the property's `hasChanged`\nproperty option or uses a strict identity check to determine whether or not\nto request an update.",
                  "text": "This method may be overridden to customize properties; however,\nwhen doing so, it's important to call `super.createProperty` to ensure\nthe property is setup correctly. This method calls\n`getPropertyDescriptor` internally to get a descriptor to install.\nTo customize what properties do when they are get or set, override\n`getPropertyDescriptor`. To customize the options for a property,\nimplement `createProperty` like this:\n```ts\nstatic createProperty(name, options) {\n  options = Object.assign(options, {myOption: true});\n  super.createProperty(name, options);\n}\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 623,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "createProperty",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 373
                      }
                    ],
                    "parameters": [
                      {
                        "name": "name",
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "options",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "package": "@lit/reactive-element",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.createProperty"
                }
              },
              {
                "name": "elementProperties",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Memoized list of all element properties, including any superclass properties.\nCreated lazily on user subclasses when finalizing the class."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 507,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "PropertyDeclarationMap",
                  "package": "@lit/reactive-element"
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.elementProperties"
                }
              },
              {
                "name": "getPropertyDescriptor",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Returns a property descriptor to be defined on the given named property.\nIf no descriptor is returned, the property will not become an accessor.\nFor example,",
                  "text": "```ts\nclass MyElement extends LitElement {\n  static getPropertyDescriptor(name, key, options) {\n    const defaultDescriptor =\n        super.getPropertyDescriptor(name, key, options);\n    const setter = defaultDescriptor.set;\n    return {\n      get: defaultDescriptor.get,\n      set(value) {\n        setter.call(this, value);\n        // custom action.\n      },\n      configurable: true,\n      enumerable: true\n    }\n  }\n}\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 692,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "getPropertyDescriptor",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 401
                      }
                    ],
                    "parameters": [
                      {
                        "name": "name",
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "key",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "options",
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "package": "@lit/reactive-element",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "PropertyDescriptor",
                          "package": "typescript"
                        }
                      ]
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.getPropertyDescriptor"
                }
              },
              {
                "name": "getPropertyOptions",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    },
                    {
                      "tag": "@final"
                    }
                  ],
                  "shortText": "Returns the property options associated with the given property.\nThese options are defined with a `PropertyDeclaration` via the `properties`\nobject or the `@property` decorator and are registered in\n`createProperty(...)`.",
                  "text": "Note, this method should be considered \"final\" and not overridden. To\ncustomize the options for a given property, override\n[`createProperty`](/docs/v3/api/ReactiveElement/#ReactiveElement.createProperty).\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 732,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "getPropertyOptions",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 416
                      }
                    ],
                    "parameters": [
                      {
                        "name": "name",
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "PropertyDeclaration",
                      "package": "@lit/reactive-element",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "PropertyDeclaration"
                      }
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.getPropertyOptions"
                }
              },
              {
                "name": "properties",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "User-supplied object that maps property names to `PropertyDeclaration`\nobjects containing options for configuring reactive properties. When\na reactive property is set the element will update and render.",
                  "text": "By default properties are public fields, and as such, they should be\nconsidered as primarily settable by element users, either via attribute or\nthe property itself.\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state: true` option. Properties\nmarked as `state` do not reflect from the corresponding attribute\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating\npublic properties should typically not be done for non-primitive (object or\narray) properties. In other cases when an element needs to manage state, a\nprivate property set with the `state: true` option should be used. When\nneeded, state properties can be initialized via public properties to\nfacilitate complex interactions.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 534,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "PropertyDeclarations",
                  "package": "@lit/reactive-element",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "PropertyDeclarations"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.properties"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/rendering",
            "title": "Rendering",
            "children": [
              {
                "name": "createRenderRoot",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@returns",
                      "content": [
                        {
                          "text": "Returns a node into which to render."
                        }
                      ]
                    }
                  ],
                  "shortText": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 981,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "createRenderRoot",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 525
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "Element",
                          "package": "typescript",
                          "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                        },
                        {
                          "type": "reference",
                          "name": "ShadowRoot",
                          "package": "typescript",
                          "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                        }
                      ]
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.createRenderRoot"
                }
              },
              {
                "name": "renderRoot",
                "flags": {
                  "isReadonly": true
                },
                "comment": {
                  "shortText": "Node or ShadowRoot into which element DOM should be rendered. Defaults\nto an open shadowRoot."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 832,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "HTMLElement",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                    },
                    {
                      "type": "reference",
                      "name": "ShadowRoot",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                    }
                  ]
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.renderRoot"
                }
              },
              {
                "name": "shadowRootOptions",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Options used when calling `attachShadow`. Set this property to customize\nthe options for the shadowRoot; for example, to create a closed\nshadowRoot: `{mode: 'closed'}`.",
                  "text": "Note, these options are used in `createRenderRoot`. If this method\nis customized, options should be respected if possible.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 792,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "ShadowRootInit",
                  "package": "typescript",
                  "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#parameters"
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.shadowRootOptions"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/styles",
            "title": "Styles",
            "children": [
              {
                "name": "elementStyles",
                "flags": {
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Memoized list of all element styles.\nCreated lazily on user subclasses when finalizing the class."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 542,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "name": "CSSResultOrNative",
                    "package": "@lit/reactive-element",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultOrNative"
                    }
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.elementStyles"
                }
              },
              {
                "name": "finalizeStyles",
                "flags": {
                  "isProtected": true,
                  "isStatic": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Takes the styles the user supplied via the `static styles` property and\nreturns the array of styles to apply to the element.\nOverride this method to integrate into a style management system.",
                  "text": "Styles are deduplicated preserving the _last_ instance in the list. This\nis a performance optimization to avoid duplicated styles that can occur\nespecially when composing via subclassing. The last item is kept to try\nto preserve the cascade order with the assumption that it's most important\nthat last added styles override previous styles.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 808,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "finalizeStyles",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 449
                      }
                    ],
                    "parameters": [
                      {
                        "name": "styles",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "CSSResultGroup",
                          "package": "@lit/reactive-element",
                          "location": {
                            "page": "styles",
                            "anchor": "CSSResultGroup"
                          }
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "name": "CSSResultOrNative",
                        "package": "@lit/reactive-element",
                        "location": {
                          "page": "styles",
                          "anchor": "CSSResultOrNative"
                        }
                      }
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.finalizeStyles"
                }
              },
              {
                "name": "styles",
                "flags": {
                  "isStatic": true,
                  "isOptional": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@nocollapse"
                    }
                  ],
                  "shortText": "Array of styles to apply to the element. The styles should be defined\nusing the [`css`](/docs/v3/api/styles/#css) tag function, via constructible stylesheets, or\nimported from native CSS module scripts.",
                  "text": "Note on Content Security Policy:\nElement styles are implemented with `<style>` tags when the browser doesn't\nsupport adopted StyleSheets. To use such `<style>` tags with the style-src\nCSP directive, the style-src value must either include 'unsafe-inline' or\n`nonce-<base64-value>` with `<base64-value>` replaced be a server-generated\nnonce.\nTo provide a nonce to use on generated `<style>` elements, set\n`window.litNonce` to a server-generated nonce in your page's HTML, before\nloading application code:\n```html\n<script>\n  // Generated and unique per request:\n  window.litNonce = 'a1b2c3d4';\n</script>\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 570,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "CSSResultGroup",
                  "package": "@lit/reactive-element",
                  "location": {
                    "page": "styles",
                    "anchor": "CSSResultGroup"
                  }
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.styles"
                }
              }
            ]
          },
          {
            "anchor": "ReactiveElement/updates",
            "title": "Updates",
            "children": [
              {
                "name": "enableUpdating",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Note, this method should be considered final and not overridden. It is\noverridden on the element instance with a function that triggers the first\nupdate."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1018,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "enableUpdating",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 538
                      }
                    ],
                    "parameters": [
                      {
                        "name": "_requestedUpdate",
                        "type": {
                          "type": "intrinsic",
                          "name": "boolean"
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.enableUpdating"
                }
              },
              {
                "name": "firstUpdated",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.",
                  "text": "```ts\nfirstUpdated() {\n  this.renderRoot.getElementById('my-text-area').focus();\n}\n```\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1468,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "firstUpdated",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 725
                      }
                    ],
                    "parameters": [
                      {
                        "name": "_changedProperties",
                        "comment": {
                          "shortText": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "PropertyKey",
                                  "package": "typescript"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              ],
                              "name": "Map",
                              "package": "typescript"
                            },
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              ],
                              "name": "PropertyValueMap",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "misc",
                                "anchor": "PropertyValueMap"
                              }
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.firstUpdated"
                }
              },
              {
                "name": "getUpdateComplete",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@returns",
                      "content": [
                        {
                          "text": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                        }
                      ]
                    }
                  ],
                  "shortText": "Override point for the `updateComplete` promise.",
                  "text": "It is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n```ts\nclass MyElement extends LitElement {\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._myChild.updateComplete;\n    return result;\n  }\n}\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1405,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "getUpdateComplete",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 678
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      ],
                      "name": "Promise",
                      "package": "typescript"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.getUpdateComplete"
                }
              },
              {
                "name": "hasUpdated",
                "comment": {
                  "shortText": "Is set to `true` after the first update. The element code cannot assume\nthat `renderRoot` exists before the element `hasUpdated`."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 869,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.hasUpdated"
                }
              },
              {
                "name": "isUpdatePending",
                "comment": {
                  "shortText": "True if there is a pending update as a result of calling `requestUpdate()`.\nShould only be read."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 862,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "kindString": "Property",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.isUpdatePending"
                }
              },
              {
                "name": "performUpdate",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.",
                  "text": "Call `performUpdate()` to immediately process a pending update. This should\ngenerally not be needed, but it can be done in rare cases when you need to\nupdate synchronously.\nNote: To ensure `performUpdate()` synchronously completes a pending update,\nit should not be overridden. In LitElement 2.x it was suggested to override\n`performUpdate()` to also customizing update scheduling. Instead, you should now\noverride `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\nscheduling updates via `performUpdate()` continues to work, but will make\nalso calling `performUpdate()` to synchronously process updates difficult.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1241,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "performUpdate",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 614
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Promise",
                          "package": "typescript"
                        }
                      ]
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.performUpdate"
                }
              },
              {
                "name": "requestUpdate",
                "comment": {
                  "shortText": "Requests an update which is processed asynchronously. This should be called\nwhen an element should update based on some state not triggered by setting\na reactive property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1141,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "requestUpdate",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 574
                      }
                    ],
                    "parameters": [
                      {
                        "name": "name",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "name of requesting property"
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "oldValue",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "old value of requesting property"
                        },
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "options",
                        "flags": {
                          "isOptional": true
                        },
                        "comment": {
                          "shortText": "property options to use instead of the previously\n    configured options"
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "PropertyDeclaration",
                          "package": "@lit/reactive-element",
                          "location": {
                            "page": "ReactiveElement",
                            "anchor": "PropertyDeclaration"
                          }
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "implementationOf": {
                      "type": "reference",
                      "name": "ReactiveControllerHost.requestUpdate"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "implementationOf": {
                  "type": "reference",
                  "name": "ReactiveControllerHost.requestUpdate",
                  "location": {
                    "page": "controllers",
                    "anchor": "ReactiveControllerHost.requestUpdate"
                  }
                },
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.requestUpdate"
                }
              },
              {
                "name": "scheduleUpdate",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Schedules an element update. You can override this method to change the\ntiming of updates by returning a Promise. The update will await the\nreturned Promise, and you should resolve the Promise to allow the update\nto proceed. If this method is overridden, `super.scheduleUpdate()`\nmust be called.",
                  "text": "For instance, to schedule updates to occur just before the next frame:\n```ts\noverride protected async scheduleUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.scheduleUpdate();\n}\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1220,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "scheduleUpdate",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 596
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "void"
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "unknown"
                            }
                          ],
                          "name": "Promise",
                          "package": "typescript"
                        }
                      ]
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.scheduleUpdate"
                }
              },
              {
                "name": "shouldUpdate",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Controls whether or not `update()` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1417,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "shouldUpdate",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 687
                      }
                    ],
                    "parameters": [
                      {
                        "name": "_changedProperties",
                        "comment": {
                          "shortText": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "PropertyKey",
                                  "package": "typescript"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              ],
                              "name": "Map",
                              "package": "typescript"
                            },
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              ],
                              "name": "PropertyValueMap",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "misc",
                                "anchor": "PropertyValueMap"
                              }
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.shouldUpdate"
                }
              },
              {
                "name": "update",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Updates the element. This method reflects property values to attributes.\nIt can be overridden to render and keep updated element DOM.\nSetting properties inside this method will *not* trigger\nanother update."
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1430,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "update",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 697
                      }
                    ],
                    "parameters": [
                      {
                        "name": "_changedProperties",
                        "comment": {
                          "shortText": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "PropertyKey",
                                  "package": "typescript"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              ],
                              "name": "Map",
                              "package": "typescript"
                            },
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              ],
                              "name": "PropertyValueMap",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "misc",
                                "anchor": "PropertyValueMap"
                              }
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.update"
                }
              },
              {
                "name": "updateComplete",
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@returns",
                      "content": [
                        {
                          "text": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                        }
                      ]
                    }
                  ],
                  "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                  "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1378,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ],
                  "name": "Promise",
                  "package": "typescript"
                },
                "getSignature": {
                  "name": "updateComplete",
                  "comment": {
                    "blockTags": [
                      {
                        "tag": "@returns",
                        "content": [
                          {
                            "text": "A promise of a boolean that resolves to true if the update completed\n    without triggering another update."
                          }
                        ]
                      }
                    ],
                    "shortText": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.",
                    "text": "To await additional asynchronous work, override the `getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super.getUpdateComplete()`, then any subsequent state.\n"
                  },
                  "sources": [
                    {
                      "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                      "line": 654
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "name": "ReactiveControllerHost.updateComplete",
                    "location": {
                      "page": "controllers",
                      "anchor": "ReactiveControllerHost.updateComplete"
                    }
                  },
                  "kindString": "Get signature"
                },
                "implementationOf": {
                  "type": "reference",
                  "name": "ReactiveControllerHost.updateComplete",
                  "location": {
                    "page": "controllers",
                    "anchor": "ReactiveControllerHost.updateComplete"
                  }
                },
                "kindString": "Accessor",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.updateComplete"
                }
              },
              {
                "name": "updated",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.",
                  "text": "Setting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1450,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "updated",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 708
                      }
                    ],
                    "parameters": [
                      {
                        "name": "_changedProperties",
                        "comment": {
                          "shortText": "Map of changed properties with old values"
                        },
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "PropertyKey",
                                  "package": "typescript"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              ],
                              "name": "Map",
                              "package": "typescript"
                            },
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              ],
                              "name": "PropertyValueMap",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "misc",
                                "anchor": "PropertyValueMap"
                              }
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.updated"
                }
              },
              {
                "name": "willUpdate",
                "flags": {
                  "isProtected": true
                },
                "comment": {
                  "shortText": "Invoked before `update()` to compute values needed during the update.",
                  "text": "Implement `willUpdate` to compute property values that depend on other\nproperties and are used in the rest of the update process.\n```ts\nwillUpdate(changedProperties) {\n  // only need to check changed properties for an expensive computation.\n  if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n    this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n  }\n}\nrender() {\n  return html`SHA: ${this.sha}`;\n}\n```\n"
                },
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 1328,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "signatures": [
                  {
                    "name": "willUpdate",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                        "line": 636
                      }
                    ],
                    "parameters": [
                      {
                        "name": "_changedProperties",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "PropertyKey",
                                  "package": "typescript"
                                },
                                {
                                  "type": "intrinsic",
                                  "name": "unknown"
                                }
                              ],
                              "name": "Map",
                              "package": "typescript"
                            },
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              ],
                              "name": "PropertyValueMap",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "misc",
                                "anchor": "PropertyValueMap"
                              }
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Method",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "ReactiveElement",
                  "anchor": "ReactiveElement.willUpdate"
                }
              }
            ]
          }
        ]
      },
      {
        "name": "ComplexAttributeConverter",
        "comment": {
          "shortText": "Converts property values to and from attribute values."
        },
        "children": [
          {
            "name": "fromAttribute",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Called to convert an attribute value to a property\nvalue."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 164,
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "name": "fromAttribute",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                    "line": 46
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "type",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "TypeHint"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "Type"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ComplexAttributeConverter.fromAttribute"
            }
          },
          {
            "name": "toAttribute",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Called to convert a property value to an attribute\nvalue.",
              "text": "It returns unknown instead of string, to be compatible with\nhttps://github.com/WICG/trusted-types (and similar efforts).\n"
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 173,
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "name": "toAttribute",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                    "line": 54
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "type",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "name": "TypeHint"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "ComplexAttributeConverter.toAttribute"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 159,
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "typeParameters": [
          {
            "name": "Type",
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "kindString": "Type parameter"
          },
          {
            "name": "TypeHint",
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "kindString": "Type parameter"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "ComplexAttributeConverter"
        }
      },
      {
        "name": "PropertyDeclaration",
        "comment": {
          "shortText": "Defines options for a property accessor."
        },
        "children": [
          {
            "name": "attribute",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates how and whether the property becomes an observed attribute.\nIf the value is `false`, the property is not added to `observedAttributes`.\nIf true or absent, the lowercased property name is observed (e.g. `fooBar`\nbecomes `foobar`). If a string, the string value is observed (e.g\n`attribute: 'foo-bar'`)."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 200,
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              ]
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.attribute"
            }
          },
          {
            "name": "converter",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates how to convert the attribute to/from a property. If this value\nis a function, it is used to convert the attribute value a the property\nvalue. If it's an object, it can have keys for `fromAttribute` and\n`toAttribute`. If no `toAttribute` function is provided and\n`reflect` is set to `true`, the property value is set directly to the\nattribute. A default `converter` is used if none is provided; it supports\n`Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\nwhen a property changes and the converter is used to update the attribute,\nthe property is never updated again as a result of the attribute changing,\nand vice versa."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 221,
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "Type"
                },
                {
                  "type": "reference",
                  "name": "TypeHint"
                }
              ],
              "name": "AttributeConverter",
              "package": "@lit/reactive-element"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.converter"
            }
          },
          {
            "name": "noAccessor",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates whether an accessor will be created for this property. By\ndefault, an accessor will be generated for this property that requests an\nupdate when set. If this flag is `true`, no accessor will be created, and\nit will be the user's responsibility to call\n`this.requestUpdate(propertyName, oldValue)` to request an update when\nthe property changes."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 247,
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.noAccessor"
            }
          },
          {
            "name": "reflect",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates if the property should reflect to an attribute.\nIf `true`, when the property is set, the attribute is set using the\nattribute name determined according to the rules for the `attribute`\nproperty option and the value of the property converted using the rules\nfrom the `converter` property option."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 230,
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.reflect"
            }
          },
          {
            "name": "state",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "When set to `true`, indicates the property is internal private state. The\nproperty should not be set by users. When using TypeScript, this property\nshould be marked as `private` or `protected`, and it is also a common\npractice to use a leading `_` in the name. The property is not added to\n`observedAttributes`."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 191,
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.state"
            }
          },
          {
            "name": "type",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "Indicates the type of the property. This is used only as a hint for the\n`converter` to determine how to convert the attribute\nto/from a property."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 207,
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "TypeHint"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.type"
            }
          },
          {
            "name": "hasChanged",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "A function that indicates if a property should be considered changed when\nit is set. The function should take the `newValue` and `oldValue` and\nreturn `true` if an update should be requested."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 237,
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "name": "hasChanged",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                    "line": 109
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "oldValue",
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration.hasChanged"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 183,
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "typeParameters": [
          {
            "name": "Type",
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "kindString": "Type parameter"
          },
          {
            "name": "TypeHint",
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "kindString": "Type parameter"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "PropertyDeclaration"
        }
      },
      {
        "name": "PropertyDeclarations",
        "comment": {
          "shortText": "Map of properties to PropertyDeclaration options. For each property an\naccessor is made, and the property is processed according to the\nPropertyDeclaration options."
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 255,
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "indexSignature": {
          "name": "__index",
          "sources": [
            {
              "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
              "line": 126
            }
          ],
          "parameters": [
            {
              "name": "key",
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "kindString": "Parameter"
            }
          ],
          "type": {
            "type": "reference",
            "name": "PropertyDeclaration",
            "package": "@lit/reactive-element",
            "location": {
              "page": "ReactiveElement",
              "anchor": "PropertyDeclaration"
            }
          },
          "kindString": "Index signature"
        },
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "PropertyDeclarations"
        }
      },
      {
        "name": "PropertyValues",
        "comment": {
          "shortText": "A Map of property keys to values.",
          "text": "Takes an optional type parameter T, which when specified as a non-any,\nnon-unknown type, will make the Map more strongly-typed, associating the map\nkeys with their corresponding value type on T.\nUse `PropertyValues<this>` when overriding ReactiveElement.update() and\nother lifecycle methods in order to get stronger type-checking on keys\nand values.\n"
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 281,
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "typeParameters": [
          {
            "name": "T",
            "default": {
              "type": "intrinsic",
              "name": "any"
            },
            "kindString": "Type parameter"
          }
        ],
        "type": {
          "type": "conditional",
          "checkType": {
            "type": "reference",
            "name": "T"
          },
          "extendsType": {
            "type": "intrinsic",
            "name": "object"
          },
          "trueType": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "T"
              }
            ],
            "name": "PropertyValueMap",
            "package": "@lit/reactive-element",
            "location": {
              "page": "misc",
              "anchor": "PropertyValueMap"
            }
          },
          "falseType": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "PropertyKey",
                "package": "typescript"
              },
              {
                "type": "intrinsic",
                "name": "unknown"
              }
            ],
            "name": "Map",
            "package": "typescript"
          }
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "ReactiveElement",
          "anchor": "PropertyValues"
        }
      }
    ]
  },
  {
    "slug": "templates",
    "title": "Templates",
    "versionLinks": {
      "v1": "api/lit-html/templates/"
    },
    "repo": "lit/lit",
    "commit": "12109c25997ef03180d7eefe05c64e0fb20dd2b0",
    "items": [
      {
        "name": "html",
        "comment": {
          "shortText": "Interprets a template literal as an HTML template that can efficiently\nrender to and update a container.",
          "text": "```ts\nconst header = (title: string) => html`<h1>${title}</h1>`;\n```\nThe `html` tag returns a description of the DOM to render as a value. It is\nlazy, meaning no work is done until the template is rendered. When rendering,\nif a template comes from the same expression as a previously rendered result,\nit's efficiently updated instead of replaced.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 533,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "signatures": [
          {
            "name": "html",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                "line": 226
              }
            ],
            "parameters": [
              {
                "name": "strings",
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              },
              {
                "name": "values",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "literal",
                  "value": 1
                }
              ],
              "name": "TemplateResult",
              "package": "lit-html",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "html"
        }
      },
      {
        "name": "nothing",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A sentinel value that signals a ChildPart to fully clear its content.",
          "text": "```ts\nconst button = html`${\n user.isAdmin\n   ? html`<button>DELETE</button>`\n   : nothing\n}`;\n```\nPrefer using `nothing` over other falsy values as it provides a consistent\nbehavior between various expression binding contexts.\nIn child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\nsame and render no nodes. In attribute expressions, `nothing` _removes_ the\nattribute, while `undefined` and `null` will render an empty string. In\nproperty expressions `nothing` becomes `undefined`.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 585,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "typeOperator",
          "operator": "unique",
          "target": {
            "type": "intrinsic",
            "name": "symbol"
          }
        },
        "kindString": "Variable",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "nothing"
        }
      },
      {
        "name": "render",
        "comment": {
          "blockTags": [
            {
              "tag": "@see",
              "content": [
                {
                  "tag": "@link",
                  "text": "Rendering Lit HTML Templates",
                  "target": "https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates|"
                }
              ]
            }
          ],
          "shortText": "Renders a value, usually a lit-html TemplateResult, to the container.",
          "text": "This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\nit to the container `document.body`.\n```js\nimport {html, render} from 'lit';\nconst name = \"Zoe\";\nrender(html`<p>Hello, ${name}!</p>`, document.body);\n```\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 2094,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "signatures": [
          {
            "name": "render",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                "line": 548
              }
            ],
            "parameters": [
              {
                "name": "value",
                "comment": {
                  "shortText": "Any [renderable\n  value](https://lit.dev/docs/templates/expressions/#child-expressions),\n  typically a {@linkcode TemplateResult} created by evaluating a template tag\n  like {@linkcode html} or {@linkcode svg}."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              },
              {
                "name": "container",
                "comment": {
                  "shortText": "A DOM container to render to. The first render will append\n  the rendered value to the container, and subsequent renders will\n  efficiently update the rendered value if the same result type was\n  previously rendered there."
                },
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "HTMLElement",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                    },
                    {
                      "type": "reference",
                      "name": "DocumentFragment",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"
                    }
                  ]
                },
                "kindString": "Parameter"
              },
              {
                "name": "options",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "shortText": "See {@linkcode RenderOptions} for options documentation."
                },
                "type": {
                  "type": "reference",
                  "name": "RenderOptions",
                  "package": "lit-html",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "name": "RootPart",
              "package": "lit-html",
              "location": {
                "page": "misc",
                "anchor": "RootPart"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "render"
        }
      },
      {
        "name": "svg",
        "comment": {
          "shortText": "Interprets a template literal as an SVG fragment that can efficiently\nrender to and update a container.",
          "text": "```ts\nconst rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\nconst myImage = html`\n  <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n    ${rect}\n  </svg>`;\n```\nThe `svg` *tag function* should only be used for SVG fragments, or elements\nthat would be contained **inside** an `<svg>` HTML element. A common error is\nplacing an `<svg>` *element* in a template tagged with the `svg` tag\nfunction. The `<svg>` element is an HTML element and should be used within a\ntemplate tagged with the `html` tag function.\nIn LitElement usage, it's invalid to return an SVG fragment from the\n`render()` method, as the SVG fragment will be contained within the element's\nshadow root and thus cannot be used within an `<svg>` HTML element.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 558,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "signatures": [
          {
            "name": "svg",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                "line": 250
              }
            ],
            "parameters": [
              {
                "name": "strings",
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              },
              {
                "name": "values",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "literal",
                  "value": 2
                }
              ],
              "name": "TemplateResult",
              "package": "lit-html",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "svg"
        }
      },
      {
        "name": "SanitizerFactory",
        "comment": {
          "blockTags": [
            {
              "tag": "@returns",
              "content": [
                {
                  "text": "A function that will sanitize this class of writes."
                }
              ]
            }
          ],
          "shortText": "Used to sanitize any value before it is written into the DOM. This can be\nused to implement a security policy of allowed and disallowed values in\norder to prevent XSS attacks.",
          "text": "One way of using this callback would be to check attributes and properties\nagainst a list of high risk fields, and require that values written to such\nfields be instances of a class which is safe by construction. Closure's Safe\nHTML Types is one implementation of this technique (\nhttps://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\nThe TrustedTypes polyfill in API-only mode could also be used as a basis\nfor this technique (https://github.com/WICG/trusted-types).\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 280,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "name": "__type",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                "line": 164
              }
            ],
            "signatures": [
              {
                "name": "__type",
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@returns",
                      "content": [
                        {
                          "text": "A function that will sanitize this class of writes."
                        }
                      ]
                    }
                  ],
                  "shortText": "Used to sanitize any value before it is written into the DOM. This can be\nused to implement a security policy of allowed and disallowed values in\norder to prevent XSS attacks.",
                  "text": "One way of using this callback would be to check attributes and properties\nagainst a list of high risk fields, and require that values written to such\nfields be instances of a class which is safe by construction. Closure's Safe\nHTML Types is one implementation of this technique (\nhttps://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\nThe TrustedTypes polyfill in API-only mode could also be used as a basis\nfor this technique (https://github.com/WICG/trusted-types).\n"
                },
                "parameters": [
                  {
                    "name": "node",
                    "comment": {
                      "shortText": "The HTML node (usually either a #text node or an Element) that\n    is being written to. Note that this is just an exemplar node, the write\n    may take place against another instance of the same class of node."
                    },
                    "type": {
                      "type": "reference",
                      "name": "Node",
                      "package": "typescript"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "name",
                    "comment": {
                      "shortText": "The name of an attribute or property (for example, 'href')."
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "type",
                    "comment": {
                      "shortText": "Indicates whether the write that's about to be performed will\n    be to a property or a node."
                    },
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": "property"
                        },
                        {
                          "type": "literal",
                          "value": "attribute"
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "ValueSanitizer",
                  "package": "lit-html",
                  "location": {
                    "page": "misc",
                    "anchor": "ValueSanitizer"
                  }
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Type literal"
          }
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "SanitizerFactory"
        }
      },
      {
        "name": "SVGTemplateResult",
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 478,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "query",
              "queryType": {
                "type": "reference",
                "name": "SVG_RESULT",
                "package": "lit-html"
              }
            }
          ],
          "name": "TemplateResult",
          "package": "lit-html",
          "location": {
            "page": "templates",
            "anchor": "TemplateResult"
          }
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "SVGTemplateResult"
        }
      },
      {
        "name": "TemplateResult",
        "comment": {
          "shortText": "The return type of the template tag functions, `html` and\n`svg`.",
          "text": "A `TemplateResult` object holds all the information about a template\nexpression required to render it: the template strings, expression values,\nand type of template (html or svg).\n`TemplateResult` objects do not create any DOM on their own. To create or\nupdate DOM you need to render the `TemplateResult`. See\n[Rendering](https://lit.dev/docs/components/rendering) for more information.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 469,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "typeParameters": [
          {
            "name": "T",
            "type": {
              "type": "reference",
              "name": "ResultType",
              "package": "lit-html"
            },
            "default": {
              "type": "reference",
              "name": "ResultType",
              "package": "lit-html"
            },
            "kindString": "Type parameter"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "name": "__type",
            "children": [
              {
                "name": "_$litType$",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                    "line": 199
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "T"
                },
                "kindString": "Property"
              },
              {
                "name": "strings",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                    "line": 200
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray",
                  "package": "typescript"
                },
                "kindString": "Property"
              },
              {
                "name": "values",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                    "line": 201
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "kindString": "Property"
              }
            ],
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                "line": 198
              }
            ],
            "kindString": "Type literal"
          }
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "templates",
          "anchor": "TemplateResult"
        }
      }
    ]
  },
  {
    "slug": "styles",
    "title": "Styles",
    "versionLinks": {
      "v1": "api/lit-element/styles/"
    },
    "repo": "lit/lit",
    "commit": "12109c25997ef03180d7eefe05c64e0fb20dd2b0",
    "items": [
      {
        "name": "adoptStyles",
        "comment": {
          "shortText": "Applies the given styles to a `shadowRoot`. When Shadow DOM is\navailable but `adoptedStyleSheets` is not, styles are appended to the\n`shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\nNote, when shimming is used, any styles that are subsequently placed into\nthe shadowRoot should be placed *before* any shimmed adopted styles. This\nwill match spec behavior that gives adopted sheets precedence over styles in\nshadowRoot."
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 170,
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "signatures": [
          {
            "name": "adoptStyles",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/css-tag.d.ts",
                "line": 65
              }
            ],
            "parameters": [
              {
                "name": "renderRoot",
                "type": {
                  "type": "reference",
                  "name": "ShadowRoot",
                  "package": "typescript",
                  "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot"
                },
                "kindString": "Parameter"
              },
              {
                "name": "styles",
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "name": "CSSResultOrNative",
                    "package": "@lit/reactive-element",
                    "location": {
                      "page": "styles",
                      "anchor": "CSSResultOrNative"
                    }
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "adoptStyles"
        }
      },
      {
        "name": "css",
        "comment": {
          "shortText": "A template literal tag which can be used with LitElement's\n`styles` property to set element styles.",
          "text": "For security reasons, only literal string values and number may be used in\nembedded expressions. To incorporate non-literal values [`unsafeCSS`](/docs/v3/api/styles/#unsafeCSS)\nmay be used inside an expression.\n"
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 143,
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "signatures": [
          {
            "name": "css",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/css-tag.d.ts",
                "line": 55
              }
            ],
            "parameters": [
              {
                "name": "strings",
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              },
              {
                "name": "values",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      {
                        "type": "reference",
                        "name": "CSSResultGroup",
                        "package": "@lit/reactive-element",
                        "location": {
                          "page": "styles",
                          "anchor": "CSSResultGroup"
                        }
                      }
                    ]
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "name": "CSSResult",
              "package": "@lit/reactive-element",
              "location": {
                "page": "styles",
                "anchor": "CSSResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "css"
        }
      },
      {
        "name": "CSSResult",
        "comment": {
          "shortText": "A container for a string of CSS text, that may be used to create a CSSStyleSheet.",
          "text": "CSSResult is the return value of `css`-tagged template literals and\n`unsafeCSS()`. In order to ensure that CSSResults are only created via the\n`css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n"
        },
        "children": [
          {
            "name": "cssText",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/css-tag.ts",
                "line": 51,
                "moduleSpecifier": "reactive-element/css-tag.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "styles",
              "anchor": "CSSResult.cssText"
            }
          },
          {
            "name": "styleSheet",
            "sources": [
              {
                "fileName": "packages/reactive-element/src/css-tag.ts",
                "line": 71,
                "moduleSpecifier": "reactive-element/css-tag.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "name": "CSSStyleSheet",
                  "package": "typescript",
                  "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet"
                }
              ]
            },
            "getSignature": {
              "name": "styleSheet",
              "sources": [
                {
                  "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/css-tag.d.ts",
                  "line": 36
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "reference",
                    "name": "CSSStyleSheet",
                    "package": "typescript",
                    "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet"
                  }
                ]
              },
              "kindString": "Get signature"
            },
            "kindString": "Accessor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "styles",
              "anchor": "CSSResult.styleSheet"
            }
          },
          {
            "name": "toString",
            "sources": [
              {
                "fileName": "packages/reactive-element/src/css-tag.ts",
                "line": 93,
                "moduleSpecifier": "reactive-element/css-tag.js"
              }
            ],
            "signatures": [
              {
                "name": "toString",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/css-tag.d.ts",
                    "line": 37
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "styles",
              "anchor": "CSSResult.toString"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 48,
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResult"
        }
      },
      {
        "name": "getCompatibleStyle",
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 200,
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "signatures": [
          {
            "name": "getCompatibleStyle",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/css-tag.d.ts",
                "line": 66
              }
            ],
            "parameters": [
              {
                "name": "s",
                "type": {
                  "type": "reference",
                  "name": "CSSResultOrNative",
                  "package": "@lit/reactive-element",
                  "location": {
                    "page": "styles",
                    "anchor": "CSSResultOrNative"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "name": "CSSResultOrNative",
              "package": "@lit/reactive-element",
              "location": {
                "page": "styles",
                "anchor": "CSSResultOrNative"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "getCompatibleStyle"
        }
      },
      {
        "name": "supportsAdoptingStyleSheets",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "Whether the current browser supports `adoptedStyleSheets`."
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 15,
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "boolean"
        },
        "kindString": "Variable",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "supportsAdoptingStyleSheets"
        }
      },
      {
        "name": "unsafeCSS",
        "comment": {
          "shortText": "Wrap a value for interpolation in a [`css`](/docs/v3/api/styles/#css) tagged template literal.",
          "text": "This is unsafe because untrusted CSS text can be used to phone home\nor exfiltrate data to an attacker controlled site. Take care to only use\nthis with trusted input.\n"
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 128,
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "signatures": [
          {
            "name": "unsafeCSS",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/css-tag.d.ts",
                "line": 46
              }
            ],
            "parameters": [
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "name": "CSSResult",
              "package": "@lit/reactive-element",
              "location": {
                "page": "styles",
                "anchor": "CSSResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "unsafeCSS"
        }
      },
      {
        "name": "CSSResultArray",
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 30,
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "type": {
          "type": "array",
          "elementType": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "CSSResultOrNative",
                "package": "@lit/reactive-element",
                "location": {
                  "page": "styles",
                  "anchor": "CSSResultOrNative"
                }
              },
              {
                "type": "reference",
                "name": "CSSResultArray",
                "package": "@lit/reactive-element",
                "location": {
                  "page": "styles",
                  "anchor": "CSSResultArray"
                }
              }
            ]
          }
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResultArray"
        }
      },
      {
        "name": "CSSResultGroup",
        "comment": {
          "shortText": "A single CSSResult, CSSStyleSheet, or an array or nested arrays of those."
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 35,
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "CSSResultOrNative",
              "package": "@lit/reactive-element",
              "location": {
                "page": "styles",
                "anchor": "CSSResultOrNative"
              }
            },
            {
              "type": "reference",
              "name": "CSSResultArray",
              "package": "@lit/reactive-element",
              "location": {
                "page": "styles",
                "anchor": "CSSResultArray"
              }
            }
          ]
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResultGroup"
        }
      },
      {
        "name": "CSSResultOrNative",
        "comment": {
          "shortText": "A CSSResult or native CSSStyleSheet.",
          "text": "In browsers that support constructible CSS style sheets, CSSStyleSheet\nobject can be used for styling along side CSSResult from the `css`\ntemplate tag.\n"
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/css-tag.ts",
            "line": 28,
            "moduleSpecifier": "reactive-element/css-tag.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "CSSResult",
              "package": "@lit/reactive-element",
              "location": {
                "page": "styles",
                "anchor": "CSSResult"
              }
            },
            {
              "type": "reference",
              "name": "CSSStyleSheet",
              "package": "typescript",
              "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet"
            }
          ]
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "styles",
          "anchor": "CSSResultOrNative"
        }
      }
    ]
  },
  {
    "slug": "decorators",
    "title": "Decorators",
    "versionLinks": {
      "v1": "api/lit-element/decorators/"
    },
    "repo": "lit/lit",
    "commit": "12109c25997ef03180d7eefe05c64e0fb20dd2b0",
    "items": [
      {
        "name": "customElement",
        "comment": {
          "shortText": "Class decorator factory that defines the decorated class as a custom element.",
          "text": "```js\n@customElement('my-element')\nclass MyElement extends LitElement {\n  render() {\n    return html``;\n  }\n}\n```\n"
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/custom-element.ts",
            "line": 60,
            "moduleSpecifier": "reactive-element/decorators/custom-element.js"
          }
        ],
        "signatures": [
          {
            "name": "customElement",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/custom-element.d.ts",
                "line": 25
              }
            ],
            "parameters": [
              {
                "name": "tagName",
                "comment": {
                  "shortText": "The tag name of the custom element to define."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "name": "__type",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/custom-element.d.ts",
                    "line": 25
                  }
                ],
                "signatures": [
                  {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/custom-element.d.ts",
                        "line": 25
                      }
                    ],
                    "parameters": [
                      {
                        "name": "classOrDescriptor",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "ClassDescriptor",
                              "package": "@lit/reactive-element"
                            },
                            {
                              "type": "reference",
                              "name": "CustomElementClass",
                              "package": "@lit/reactive-element"
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Type literal"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 1,
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "customElement"
        }
      },
      {
        "name": "eventOptions",
        "comment": {
          "shortText": "Adds event listener options to a method used as an event listener in a\nlit-html template."
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/event-options.ts",
            "line": 47,
            "moduleSpecifier": "reactive-element/decorators/event-options.js"
          }
        ],
        "signatures": [
          {
            "name": "eventOptions",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/event-options.d.ts",
                "line": 37
              }
            ],
            "parameters": [
              {
                "name": "options",
                "comment": {
                  "shortText": "An object that specifies event listener options as accepted by\n`EventTarget#addEventListener` and `EventTarget#removeEventListener`.",
                  "text": "Current browsers support the `capture`, `passive`, and `once` options. See:\nhttps://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n```ts\nclass MyElement {\n  clicked = false;\n  render() {\n    return html`\n      <div @click=${this._onClick}>\n        <button></button>\n      </div>\n    `;\n  }\n  @eventOptions({capture: true})\n  _onClick(e) {\n    this.clicked = true;\n  }\n}\n```\n"
                },
                "type": {
                  "type": "reference",
                  "name": "AddEventListenerOptions",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "name": "__type",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/event-options.d.ts",
                    "line": 37
                  }
                ],
                "signatures": [
                  {
                    "name": "__type",
                    "parameters": [
                      {
                        "name": "protoOrDescriptor",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "ReactiveElement",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "ReactiveElement",
                                "anchor": "ReactiveElement"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement",
                              "package": "@lit/reactive-element"
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "name",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Type literal"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 1,
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "eventOptions"
        }
      },
      {
        "name": "property",
        "comment": {
          "blockTags": [
            {
              "tag": "@ExportDecoratedItems"
            }
          ],
          "shortText": "A property decorator which creates a reactive property that reflects a\ncorresponding attribute value. When a decorated property is set\nthe element will update and render. A [`PropertyDeclaration`](/docs/v3/api/ReactiveElement/#PropertyDeclaration) may\noptionally be supplied to configure property features.",
          "text": "This decorator should only be used for public fields. As public fields,\nproperties should be considered as primarily settable by element users,\neither via attribute or the property itself.\nGenerally, properties that are changed by the element should be private or\nprotected fields and should use the `state` decorator.\nHowever, sometimes element code does need to set a public property. This\nshould typically only be done in response to user interaction, and an event\nshould be fired informing the user; for example, a checkbox sets its\n`checked` property when clicked and fires a `changed` event. Mutating public\nproperties should typically not be done for non-primitive (object or array)\nproperties. In other cases when an element needs to manage state, a private\nproperty decorated via the `state` decorator should be used. When\nneeded, state properties can be initialized via public properties to\nfacilitate complex interactions.\n```ts\nclass MyElement {\n  @property({ type: Boolean })\n  clicked = false;\n}\n```\n"
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/property.ts",
            "line": 106,
            "moduleSpecifier": "reactive-element/decorators/property.js"
          }
        ],
        "signatures": [
          {
            "name": "property",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/property.d.ts",
                "line": 40
              }
            ],
            "parameters": [
              {
                "name": "options",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "PropertyDeclaration",
                  "package": "@lit/reactive-element",
                  "location": {
                    "page": "ReactiveElement",
                    "anchor": "PropertyDeclaration"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "name": "__type",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/property.d.ts",
                    "line": 40
                  }
                ],
                "signatures": [
                  {
                    "name": "__type",
                    "parameters": [
                      {
                        "name": "protoOrDescriptor",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Object",
                              "package": "typescript"
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement",
                              "package": "@lit/reactive-element"
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "name",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Type literal"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 1,
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "property"
        }
      },
      {
        "name": "query",
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter that\nexecutes a querySelector on the element's renderRoot."
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/query.ts",
            "line": 44,
            "moduleSpecifier": "reactive-element/decorators/query.js"
          }
        ],
        "signatures": [
          {
            "name": "query",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/query.d.ts",
                "line": 32
              }
            ],
            "parameters": [
              {
                "name": "selector",
                "comment": {
                  "shortText": "A DOMString containing one or more selectors to match."
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "kindString": "Parameter"
              },
              {
                "name": "cache",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "shortText": "An optional boolean which when true performs the DOM query only\n    once and caches the result.",
                  "text": "See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n```ts\nclass MyElement {\n  @query('#first')\n  first: HTMLDivElement;\n  render() {\n    return html`\n      <div id=\"first\"></div>\n      <div id=\"second\"></div>\n    `;\n  }\n}\n```\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "name": "__type",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/query.d.ts",
                    "line": 32
                  }
                ],
                "signatures": [
                  {
                    "name": "__type",
                    "parameters": [
                      {
                        "name": "protoOrDescriptor",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "ReactiveElement",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "ReactiveElement",
                                "anchor": "ReactiveElement"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement",
                              "package": "@lit/reactive-element"
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "name",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Type literal"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 1,
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "query"
        }
      },
      {
        "name": "queryAll",
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter\nthat executes a querySelectorAll on the element's renderRoot."
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/query-all.ts",
            "line": 41,
            "moduleSpecifier": "reactive-element/decorators/query-all.js"
          }
        ],
        "signatures": [
          {
            "name": "queryAll",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/query-all.d.ts",
                "line": 31
              }
            ],
            "parameters": [
              {
                "name": "selector",
                "comment": {
                  "shortText": "A DOMString containing one or more selectors to match.",
                  "text": "See:\nhttps://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n```ts\nclass MyElement {\n  @queryAll('div')\n  divs: NodeListOf<HTMLDivElement>;\n  render() {\n    return html`\n      <div id=\"first\"></div>\n      <div id=\"second\"></div>\n    `;\n  }\n}\n```\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "name": "__type",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/query-all.d.ts",
                    "line": 31
                  }
                ],
                "signatures": [
                  {
                    "name": "__type",
                    "parameters": [
                      {
                        "name": "protoOrDescriptor",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "ReactiveElement",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "ReactiveElement",
                                "anchor": "ReactiveElement"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement",
                              "package": "@lit/reactive-element"
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "name",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Type literal"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 1,
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "queryAll"
        }
      },
      {
        "name": "queryAssignedElements",
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter that\nreturns the `assignedElements` of the given `slot`. Provides a declarative\nway to use\n[`HTMLSlotElement.assignedElements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).",
          "text": "Can be passed an optional [`QueryAssignedElementsOptions`](/docs/v3/api/decorators/#QueryAssignedElementsOptions) object.\nExample usage:\n```ts\nclass MyElement {\n  @queryAssignedElements({ slot: 'list' })\n  listItems!: Array<HTMLElement>;\n  @queryAssignedElements()\n  unnamedSlotEls!: Array<HTMLElement>;\n  render() {\n    return html`\n      <slot name=\"list\"></slot>\n      <slot></slot>\n    `;\n  }\n}\n```\nNote, the type of this property should be annotated as `Array<HTMLElement>`.\n"
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/query-assigned-elements.ts",
            "line": 76,
            "moduleSpecifier": "reactive-element/decorators/query-assigned-elements.js"
          }
        ],
        "signatures": [
          {
            "name": "queryAssignedElements",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/query-assigned-elements.d.ts",
                "line": 49
              }
            ],
            "parameters": [
              {
                "name": "options",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "name": "QueryAssignedElementsOptions",
                  "package": "@lit/reactive-element",
                  "location": {
                    "page": "decorators",
                    "anchor": "QueryAssignedElementsOptions"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "name": "__type",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/query-assigned-elements.d.ts",
                    "line": 49
                  }
                ],
                "signatures": [
                  {
                    "name": "__type",
                    "parameters": [
                      {
                        "name": "protoOrDescriptor",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "ReactiveElement",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "ReactiveElement",
                                "anchor": "ReactiveElement"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement",
                              "package": "@lit/reactive-element"
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "name",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Type literal"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 1,
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "queryAssignedElements"
        }
      },
      {
        "name": "queryAssignedNodes",
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter that\nreturns the `assignedNodes` of the given `slot`.",
          "text": "Can be passed an optional [`QueryAssignedNodesOptions`](/docs/v3/api/decorators/#QueryAssignedNodesOptions) object.\nExample usage:\n```ts\nclass MyElement {\n  @queryAssignedNodes({slot: 'list', flatten: true})\n  listItems!: Array<Node>;\n  render() {\n    return html`\n      <slot name=\"list\"></slot>\n    `;\n  }\n}\n```\nNote the type of this property should be annotated as `Array<Node>`. Use the\nqueryAssignedElements decorator to list only elements, and optionally filter\nthe element list using a CSS selector.\n"
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/query-assigned-nodes.ts",
            "line": 59,
            "moduleSpecifier": "reactive-element/decorators/query-assigned-nodes.js"
          }
        ],
        "signatures": [
          {
            "name": "queryAssignedNodes",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/query-assigned-nodes.d.ts",
                "line": 43
              }
            ],
            "parameters": [
              {
                "name": "options",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "name": "QueryAssignedNodesOptions",
                  "package": "@lit/reactive-element",
                  "location": {
                    "page": "decorators",
                    "anchor": "QueryAssignedNodesOptions"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "name": "TSDecoratorReturnType",
              "package": "@lit/reactive-element"
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 1,
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "queryAssignedNodes"
        }
      },
      {
        "name": "queryAsync",
        "comment": {
          "shortText": "A property decorator that converts a class property into a getter that\nreturns a promise that resolves to the result of a querySelector on the\nelement's renderRoot done after the element's `updateComplete` promise\nresolves. When the queried property may change with element state, this\ndecorator can be used instead of requiring users to await the\n`updateComplete` before accessing the property."
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/query-async.ts",
            "line": 54,
            "moduleSpecifier": "reactive-element/decorators/query-async.js"
          }
        ],
        "signatures": [
          {
            "name": "queryAsync",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/query-async.d.ts",
                "line": 39
              }
            ],
            "parameters": [
              {
                "name": "selector",
                "comment": {
                  "shortText": "A DOMString containing one or more selectors to match.",
                  "text": "See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n```ts\nclass MyElement {\n  @queryAsync('#first')\n  first: Promise<HTMLDivElement>;\n  render() {\n    return html`\n      <div id=\"first\"></div>\n      <div id=\"second\"></div>\n    `;\n  }\n}\n// external usage\nasync doSomethingWithFirst() {\n (await aMyElement.first).doSomething();\n}\n```\n"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "name": "__type",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/query-async.d.ts",
                    "line": 39
                  }
                ],
                "signatures": [
                  {
                    "name": "__type",
                    "parameters": [
                      {
                        "name": "protoOrDescriptor",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "ReactiveElement",
                              "package": "@lit/reactive-element",
                              "location": {
                                "page": "ReactiveElement",
                                "anchor": "ReactiveElement"
                              }
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement",
                              "package": "@lit/reactive-element"
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "name",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Type literal"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 1,
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "queryAsync"
        }
      },
      {
        "name": "state",
        "comment": {
          "shortText": "Declares a private or protected reactive property that still triggers\nupdates to the element when it changes. It does not reflect from the\ncorresponding attribute.",
          "text": "Properties declared this way must not be used from HTML or HTML templating\nsystems, they're solely for properties internal to the element. These\nproperties may be renamed by optimization tools like closure compiler.\n"
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/state.ts",
            "line": 35,
            "moduleSpecifier": "reactive-element/decorators/state.js"
          }
        ],
        "signatures": [
          {
            "name": "state",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/state.d.ts",
                "line": 24
              }
            ],
            "parameters": [
              {
                "name": "options",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "InternalPropertyDeclaration",
                  "package": "@lit/reactive-element",
                  "location": {
                    "page": "decorators",
                    "anchor": "InternalPropertyDeclaration"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "name": "__type",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/state.d.ts",
                    "line": 24
                  }
                ],
                "signatures": [
                  {
                    "name": "__type",
                    "parameters": [
                      {
                        "name": "protoOrDescriptor",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Object",
                              "package": "typescript"
                            },
                            {
                              "type": "reference",
                              "name": "ClassElement",
                              "package": "@lit/reactive-element"
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "name",
                        "flags": {
                          "isOptional": true
                        },
                        "type": {
                          "type": "reference",
                          "name": "PropertyKey",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Type literal"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 1,
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "state"
        }
      },
      {
        "name": "InternalPropertyDeclaration",
        "comment": {
          "blockTags": [
            {
              "tag": "@license",
              "content": [
                {
                  "text": "Copyright 2017 Google LLC\nSPDX-License-Identifier: BSD-3-Clause"
                }
              ]
            }
          ]
        },
        "children": [
          {
            "name": "hasChanged",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "A function that indicates if a property should be considered changed when\nit is set. The function should take the `newValue` and `oldValue` and\nreturn `true` if an update should be requested."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/decorators/state.ts",
                "line": 22,
                "moduleSpecifier": "reactive-element/decorators/state.js"
              }
            ],
            "signatures": [
              {
                "name": "hasChanged",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/decorators/state.d.ts",
                    "line": 12
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "oldValue",
                    "type": {
                      "type": "reference",
                      "name": "Type"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/decorators.ts",
                "line": 1,
                "moduleSpecifier": "lit/decorators.js"
              }
            ],
            "location": {
              "page": "decorators",
              "anchor": "InternalPropertyDeclaration.hasChanged"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/state.ts",
            "line": 16,
            "moduleSpecifier": "reactive-element/decorators/state.js"
          }
        ],
        "typeParameters": [
          {
            "name": "Type",
            "default": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "kindString": "Type parameter"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 1,
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "InternalPropertyDeclaration"
        }
      },
      {
        "name": "QueryAssignedElementsOptions",
        "comment": {
          "shortText": "Options for the [`queryAssignedElements`](/docs/v3/api/decorators/#queryAssignedElements) decorator. Extends the\noptions that can be passed into\n[HTMLSlotElement.assignedElements](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements)."
        },
        "children": [
          {
            "name": "selector",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "CSS selector used to filter the elements returned. For example, a selector\nof `\".item\"` will only include elements with the `item` class."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/decorators/query-assigned-elements.ts",
                "line": 44,
                "moduleSpecifier": "reactive-element/decorators/query-assigned-elements.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/decorators.ts",
                "line": 1,
                "moduleSpecifier": "lit/decorators.js"
              }
            ],
            "location": {
              "page": "decorators",
              "anchor": "QueryAssignedElementsOptions.selector"
            }
          },
          {
            "name": "slot",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Name of the slot to query. Leave empty for the default slot."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/decorators/query-assigned-nodes.ts",
                "line": 26,
                "moduleSpecifier": "reactive-element/decorators/query-assigned-nodes.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "QueryAssignedNodesOptions.slot",
              "location": {
                "page": "decorators",
                "anchor": "QueryAssignedNodesOptions.slot"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/decorators.ts",
                "line": 1,
                "moduleSpecifier": "lit/decorators.js"
              }
            ],
            "location": {
              "page": "decorators",
              "anchor": "QueryAssignedElementsOptions.slot"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/query-assigned-elements.ts",
            "line": 38,
            "moduleSpecifier": "reactive-element/decorators/query-assigned-elements.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "QueryAssignedNodesOptions",
            "package": "@lit/reactive-element",
            "location": {
              "page": "decorators",
              "anchor": "QueryAssignedNodesOptions"
            }
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 1,
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "QueryAssignedElementsOptions"
        },
        "heritage": [
          {
            "type": "reference",
            "name": "QueryAssignedNodesOptions",
            "package": "@lit/reactive-element",
            "location": {
              "page": "decorators",
              "anchor": "QueryAssignedNodesOptions"
            }
          }
        ]
      },
      {
        "name": "QueryAssignedNodesOptions",
        "comment": {
          "shortText": "Options for the [`queryAssignedNodes`](/docs/v3/api/decorators/#queryAssignedNodes) decorator. Extends the options\nthat can be passed into [HTMLSlotElement.assignedNodes](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedNodes)."
        },
        "children": [
          {
            "name": "slot",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Name of the slot to query. Leave empty for the default slot."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/decorators/query-assigned-nodes.ts",
                "line": 26,
                "moduleSpecifier": "reactive-element/decorators/query-assigned-nodes.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/decorators.ts",
                "line": 1,
                "moduleSpecifier": "lit/decorators.js"
              }
            ],
            "location": {
              "page": "decorators",
              "anchor": "QueryAssignedNodesOptions.slot"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/decorators/query-assigned-nodes.ts",
            "line": 22,
            "moduleSpecifier": "reactive-element/decorators/query-assigned-nodes.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "AssignedNodesOptions",
            "package": "typescript"
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "name": "QueryAssignedElementsOptions",
            "location": {
              "page": "decorators",
              "anchor": "QueryAssignedElementsOptions"
            }
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/decorators.ts",
            "line": 1,
            "moduleSpecifier": "lit/decorators.js"
          }
        ],
        "location": {
          "page": "decorators",
          "anchor": "QueryAssignedNodesOptions"
        },
        "heritage": [
          {
            "type": "reference",
            "name": "AssignedNodesOptions",
            "package": "typescript"
          }
        ]
      }
    ]
  },
  {
    "slug": "directives",
    "title": "Directives",
    "versionLinks": {
      "v1": "api/lit-html/directives/"
    },
    "repo": "lit/lit",
    "commit": "12109c25997ef03180d7eefe05c64e0fb20dd2b0",
    "items": [
      {
        "name": "asyncAppend",
        "comment": {
          "shortText": "A directive that renders the items of an async iterable[1], appending new\nvalues after previous values, similar to the built-in support for iterables.\nThis directive is usable only in child expressions.",
          "text": "Async iterables are objects with a [Symbol.asyncIterator] method, which\nreturns an iterator who's `next()` method returns a Promise. When a new\nvalue is available, the Promise resolves and the value is appended to the\nPart controlled by the directive. If another value other than this\ndirective has been set on the Part, the iterable will no longer be listened\nto and new values won't be written to the Part.\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/async-append.ts",
            "line": 69,
            "moduleSpecifier": "lit-html/directives/async-append.js"
          }
        ],
        "signatures": [
          {
            "name": "asyncAppend",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/async-append.d.ts",
                "line": 33
              }
            ],
            "parameters": [
              {
                "name": "value",
                "comment": {
                  "shortText": "An async iterable"
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "AsyncIterable",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              },
              {
                "name": "_mapper",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/async-append.d.ts",
                        "line": 33
                      }
                    ],
                    "signatures": [
                      {
                        "name": "__type",
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/async-append.d.ts",
                            "line": 33
                          }
                        ],
                        "parameters": [
                          {
                            "name": "v",
                            "type": {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            "kindString": "Parameter"
                          },
                          {
                            "name": "index",
                            "flags": {
                              "isOptional": true
                            },
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            "kindString": "Parameter"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Type literal"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "name": "AsyncAppendDirective",
                    "package": "lit-html",
                    "location": {
                      "page": "directives",
                      "anchor": "AsyncAppendDirective",
                      "excludeFromTOC": true
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/async-append.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/async-append.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "asyncAppend"
        }
      },
      {
        "name": "AsyncAppendDirective",
        "comment": {
          "shortText": "An abstract `Directive` base class whose `disconnected` method will be\ncalled when the part containing the directive is cleared as a result of\nre-rendering, or when the user calls `part.setConnected(false)` on\na part that was previously rendered containing the directive (as happens\nwhen e.g. a LitElement disconnects from the DOM).",
          "text": "If `part.setConnected(true)` is subsequently called on a\ncontaining part, the directive's `reconnected` method will be called prior\nto its next `update`/`render` callbacks. When implementing `disconnected`,\n`reconnected` should also be implemented to be compatible with reconnection.\nNote that updates may occur while the directive is disconnected. As such,\ndirectives should generally check the `this.isConnected` flag during\nrender/update to determine whether it is safe to subscribe to resources\nthat may prevent garbage collection.\n"
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directives/async-append.d.ts",
                "line": 11
              }
            ],
            "signatures": [
              {
                "name": "new AsyncAppendDirective",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/async-append.d.ts",
                    "line": 11
                  }
                ],
                "parameters": [
                  {
                    "name": "partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "AsyncAppendDirective",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "AsyncAppendDirective",
                    "excludeFromTOC": true
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AsyncReplaceDirective.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AsyncReplaceDirective.constructor",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.constructor"
            }
          },
          {
            "name": "isConnected",
            "comment": {
              "shortText": "The connection state for this Directive."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 304,
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AsyncReplaceDirective.isConnected",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.isConnected"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.isConnected"
            }
          },
          {
            "name": "commitValue",
            "flags": {
              "isProtected": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-append.ts",
                "line": 39,
                "moduleSpecifier": "lit-html/directives/async-append.js"
              }
            ],
            "signatures": [
              {
                "name": "commitValue",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/async-append.d.ts",
                    "line": 13
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "index",
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AsyncReplaceDirective.commitValue"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AsyncReplaceDirective.commitValue",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.commitValue"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.commitValue"
            }
          },
          {
            "name": "disconnected",
            "comment": {
              "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 87,
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "name": "disconnected",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/async-replace.d.ts",
                    "line": 16
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "AsyncReplaceDirective.disconnected"
                },
                "kindString": "Call signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "AsyncReplaceDirective.disconnected",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.disconnected"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.disconnected"
            }
          },
          {
            "name": "reconnected",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 92,
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "name": "reconnected",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/async-replace.d.ts",
                    "line": 17
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "AsyncReplaceDirective.reconnected"
                },
                "kindString": "Call signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "AsyncReplaceDirective.reconnected",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.reconnected"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.reconnected"
            }
          },
          {
            "name": "render",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 24,
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/async-replace.d.ts",
                    "line": 13
                  }
                ],
                "typeParameter": [
                  {
                    "name": "T",
                    "kindString": "Type parameter"
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "AsyncIterable",
                      "package": "typescript"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "_mapper",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "Mapper",
                      "package": "lit-html"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "symbol"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "AsyncReplaceDirective.render"
                },
                "kindString": "Call signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "AsyncReplaceDirective.render",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.render"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.render"
            }
          },
          {
            "name": "setValue",
            "comment": {
              "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
              "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 364,
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "name": "setValue",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/async-directive.d.ts",
                    "line": 161
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "comment": {
                      "shortText": "The value to set"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "AsyncReplaceDirective.setValue"
                },
                "kindString": "Call signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "AsyncReplaceDirective.setValue",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.setValue"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.setValue"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-append.ts",
                "line": 33,
                "moduleSpecifier": "lit-html/directives/async-append.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/async-append.d.ts",
                    "line": 12
                  }
                ],
                "parameters": [
                  {
                    "name": "part",
                    "type": {
                      "type": "reference",
                      "name": "ChildPart",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ChildPart"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "params",
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "namedTupleMember",
                          "name": "value",
                          "isOptional": false,
                          "element": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "AsyncIterable",
                            "package": "typescript"
                          }
                        },
                        {
                          "type": "namedTupleMember",
                          "name": "_mapper",
                          "isOptional": true,
                          "element": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Mapper",
                            "package": "lit-html"
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "name": "noChange",
                        "package": "lit-html",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AsyncReplaceDirective.update"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AsyncReplaceDirective.update",
              "location": {
                "page": "directives",
                "anchor": "AsyncReplaceDirective.update"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-append.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-append.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/async-append.ts",
            "line": 21,
            "moduleSpecifier": "lit-html/directives/async-append.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "AsyncReplaceDirective",
            "package": "lit-html",
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective",
              "excludeFromTOC": true
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/async-append.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/async-append.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "AsyncAppendDirective",
          "excludeFromTOC": true
        },
        "heritage": [
          {
            "type": "reference",
            "name": "AsyncReplaceDirective",
            "package": "lit-html",
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective",
              "excludeFromTOC": true
            }
          }
        ]
      },
      {
        "name": "asyncReplace",
        "comment": {
          "shortText": "A directive that renders the items of an async iterable[1], replacing\nprevious values with new values, so that only one value is ever rendered\nat a time. This directive may be used in any expression type.",
          "text": "Async iterables are objects with a `[Symbol.asyncIterator]` method, which\nreturns an iterator who's `next()` method returns a Promise. When a new\nvalue is available, the Promise resolves and the value is rendered to the\nPart controlled by the directive. If another value other than this\ndirective has been set on the Part, the iterable will no longer be listened\nto and new values won't be written to the Part.\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/async-replace.ts",
            "line": 116,
            "moduleSpecifier": "lit-html/directives/async-replace.js"
          }
        ],
        "signatures": [
          {
            "name": "asyncReplace",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/async-replace.d.ts",
                "line": 37
              }
            ],
            "parameters": [
              {
                "name": "value",
                "comment": {
                  "shortText": "An async iterable"
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "AsyncIterable",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              },
              {
                "name": "_mapper",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  ],
                  "name": "Mapper",
                  "package": "lit-html"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "name": "AsyncReplaceDirective",
                    "package": "lit-html",
                    "location": {
                      "page": "directives",
                      "anchor": "AsyncReplaceDirective",
                      "excludeFromTOC": true
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/async-replace.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/async-replace.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "asyncReplace"
        }
      },
      {
        "name": "AsyncReplaceDirective",
        "comment": {
          "shortText": "An abstract `Directive` base class whose `disconnected` method will be\ncalled when the part containing the directive is cleared as a result of\nre-rendering, or when the user calls `part.setConnected(false)` on\na part that was previously rendered containing the directive (as happens\nwhen e.g. a LitElement disconnects from the DOM).",
          "text": "If `part.setConnected(true)` is subsequently called on a\ncontaining part, the directive's `reconnected` method will be called prior\nto its next `update`/`render` callbacks. When implementing `disconnected`,\n`reconnected` should also be implemented to be compatible with reconnection.\nNote that updates may occur while the directive is disconnected. As such,\ndirectives should generally check the `this.isConnected` flag during\nrender/update to determine whether it is safe to subscribe to resources\nthat may prevent garbage collection.\n"
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directive.d.ts",
                "line": 61
              }
            ],
            "signatures": [
              {
                "name": "new AsyncReplaceDirective",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 61
                  }
                ],
                "parameters": [
                  {
                    "name": "_partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "AsyncReplaceDirective",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "AsyncReplaceDirective",
                    "excludeFromTOC": true
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "AsyncDirective.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "AsyncDirective.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.constructor"
            }
          },
          {
            "name": "isConnected",
            "comment": {
              "shortText": "The connection state for this Directive."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 304,
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AsyncDirective.isConnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.isConnected"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.isConnected"
            }
          },
          {
            "name": "commitValue",
            "flags": {
              "isProtected": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 83,
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "name": "commitValue",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/async-replace.d.ts",
                    "line": 15
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "_index",
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.commitValue"
            }
          },
          {
            "name": "disconnected",
            "comment": {
              "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 87,
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "name": "disconnected",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/async-replace.d.ts",
                    "line": 16
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AsyncDirective.disconnected"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AsyncDirective.disconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.disconnected"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.disconnected"
            }
          },
          {
            "name": "reconnected",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 92,
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "name": "reconnected",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/async-replace.d.ts",
                    "line": 17
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AsyncDirective.reconnected"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AsyncDirective.reconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.reconnected"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.reconnected"
            }
          },
          {
            "name": "render",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 24,
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/async-replace.d.ts",
                    "line": 13
                  }
                ],
                "typeParameter": [
                  {
                    "name": "T",
                    "kindString": "Type parameter"
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "AsyncIterable",
                      "package": "typescript"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "_mapper",
                    "flags": {
                      "isOptional": true
                    },
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "Mapper",
                      "package": "lit-html"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "symbol"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AsyncDirective.render"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AsyncDirective.render",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.render"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.render"
            }
          },
          {
            "name": "setValue",
            "comment": {
              "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
              "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 364,
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "name": "setValue",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/async-directive.d.ts",
                    "line": 161
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "comment": {
                      "shortText": "The value to set"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "AsyncDirective.setValue"
                },
                "kindString": "Call signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "AsyncDirective.setValue",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.setValue"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.setValue"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/async-replace.ts",
                "line": 28,
                "moduleSpecifier": "lit-html/directives/async-replace.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/async-replace.d.ts",
                    "line": 14
                  }
                ],
                "parameters": [
                  {
                    "name": "_part",
                    "type": {
                      "type": "reference",
                      "name": "ChildPart",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ChildPart"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "__namedParameters",
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "namedTupleMember",
                          "name": "value",
                          "isOptional": false,
                          "element": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "AsyncIterable",
                            "package": "typescript"
                          }
                        },
                        {
                          "type": "namedTupleMember",
                          "name": "_mapper",
                          "isOptional": true,
                          "element": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            ],
                            "name": "Mapper",
                            "package": "lit-html"
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "name": "noChange",
                        "package": "lit-html",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AsyncDirective.update"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AsyncDirective.update",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.update"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/async-replace.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/async-replace.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/async-replace.ts",
            "line": 17,
            "moduleSpecifier": "lit-html/directives/async-replace.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "AsyncDirective",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "name": "AsyncAppendDirective",
            "location": {
              "page": "directives",
              "anchor": "AsyncAppendDirective",
              "excludeFromTOC": true
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/async-replace.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/async-replace.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "AsyncReplaceDirective",
          "excludeFromTOC": true
        },
        "heritage": [
          {
            "type": "reference",
            "name": "AsyncDirective",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          }
        ]
      },
      {
        "name": "cache",
        "comment": {
          "shortText": "Enables fast switching between multiple templates by caching the DOM nodes\nand TemplateInstances produced by the templates.",
          "text": "Example:\n```js\nlet checked = false;\nhtml`\n  ${cache(checked ? html`input is checked` : html`input is not checked`)}\n`\n```\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/cache.ts",
            "line": 104,
            "moduleSpecifier": "lit-html/directives/cache.js"
          }
        ],
        "signatures": [
          {
            "name": "cache",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/cache.d.ts",
                "line": 29
              }
            ],
            "parameters": [
              {
                "name": "v",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "name": "CacheDirective",
                    "package": "lit-html",
                    "location": {
                      "page": "directives",
                      "anchor": "CacheDirective",
                      "excludeFromTOC": true
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/cache.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/cache.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "cache"
        }
      },
      {
        "name": "CacheDirective",
        "comment": {
          "shortText": "Base class for creating custom directives. Users should extend this class,\nimplement `render` and/or `update`, and then pass their subclass to\n`directive`."
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directives/cache.d.ts",
                "line": 11
              }
            ],
            "signatures": [
              {
                "name": "new CacheDirective",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/cache.d.ts",
                    "line": 11
                  }
                ],
                "parameters": [
                  {
                    "name": "partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "CacheDirective",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "CacheDirective",
                    "excludeFromTOC": true
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/cache.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/cache.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "CacheDirective.constructor"
            }
          },
          {
            "name": "render",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/cache.ts",
                "line": 36,
                "moduleSpecifier": "lit-html/directives/cache.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/cache.d.ts",
                    "line": 12
                  }
                ],
                "parameters": [
                  {
                    "name": "v",
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.render"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/cache.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/cache.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "CacheDirective.render"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/cache.ts",
                "line": 42,
                "moduleSpecifier": "lit-html/directives/cache.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/cache.d.ts",
                    "line": 13
                  }
                ],
                "parameters": [
                  {
                    "name": "containerPart",
                    "type": {
                      "type": "reference",
                      "name": "ChildPart",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ChildPart"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "__namedParameters",
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "namedTupleMember",
                          "name": "v",
                          "isOptional": false,
                          "element": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.update"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/cache.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/cache.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "CacheDirective.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/cache.ts",
            "line": 28,
            "moduleSpecifier": "lit-html/directives/cache.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/cache.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/cache.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "CacheDirective",
          "excludeFromTOC": true
        },
        "heritage": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "name": "choose",
        "comment": {
          "blockTags": [
            {
              "tag": "@example",
              "content": [
                {
                  "text": "```ts\nrender() {\n  return html`\n    ${choose(this.section, [\n      ['home', () => html`<h1>Home</h1>`],\n      ['about', () => html`<h1>About</h1>`]\n    ],\n    () => html`<h1>Error</h1>`)}\n  `;\n}\n```"
                }
              ]
            }
          ],
          "shortText": "Chooses and evaluates a template function from a list based on matching\nthe given `value` to a case.",
          "text": "Cases are structured as `[caseValue, func]`. `value` is matched to\n`caseValue` by strict equality. The first match is selected. Case values\ncan be of any type including primitives, objects, and symbols.\nThis is similar to a switch statement, but as an expression and without\nfallthrough.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/choose.ts",
            "line": 32,
            "moduleSpecifier": "lit-html/directives/choose.js"
          }
        ],
        "signatures": [
          {
            "name": "choose",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/choose.d.ts",
                "line": 31
              }
            ],
            "typeParameter": [
              {
                "name": "T",
                "kindString": "Type parameter"
              },
              {
                "name": "V",
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "value",
                "type": {
                  "type": "reference",
                  "name": "T"
                },
                "kindString": "Parameter"
              },
              {
                "name": "cases",
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "tuple",
                    "elements": [
                      {
                        "type": "reference",
                        "name": "T"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "name": "__type",
                          "sources": [
                            {
                              "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/choose.d.ts",
                              "line": 31
                            }
                          ],
                          "signatures": [
                            {
                              "name": "__type",
                              "sources": [
                                {
                                  "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/choose.d.ts",
                                  "line": 31
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "V"
                              },
                              "kindString": "Call signature"
                            }
                          ],
                          "kindString": "Type literal"
                        }
                      }
                    ]
                  }
                },
                "kindString": "Parameter"
              },
              {
                "name": "defaultCase",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/choose.d.ts",
                        "line": 31
                      }
                    ],
                    "signatures": [
                      {
                        "name": "__type",
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/choose.d.ts",
                            "line": 31
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "V"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Type literal"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "name": "V"
                }
              ]
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/choose.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/choose.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "choose"
        }
      },
      {
        "name": "classMap",
        "comment": {
          "shortText": "A directive that applies dynamic CSS classes.",
          "text": "This must be used in the `class` attribute and must be the only part used in\nthe attribute. It takes each property in the `classInfo` argument and adds\nthe property name to the element's `classList` if the property value is\ntruthy; if the property value is falsey, the property name is removed from\nthe element's `class`.\nFor example `{foo: bar}` applies the class `foo` if the value of `bar` is\ntruthy.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/class-map.ts",
            "line": 122,
            "moduleSpecifier": "lit-html/directives/class-map.js"
          }
        ],
        "signatures": [
          {
            "name": "classMap",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/class-map.d.ts",
                "line": 39
              }
            ],
            "parameters": [
              {
                "name": "classInfo",
                "type": {
                  "type": "reference",
                  "name": "ClassInfo",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "ClassInfo",
                    "excludeFromTOC": true
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "name": "ClassMapDirective",
                    "package": "lit-html",
                    "location": {
                      "page": "directives",
                      "anchor": "ClassMapDirective",
                      "excludeFromTOC": true
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/class-map.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/class-map.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "classMap"
        }
      },
      {
        "name": "ClassMapDirective",
        "comment": {
          "shortText": "Base class for creating custom directives. Users should extend this class,\nimplement `render` and/or `update`, and then pass their subclass to\n`directive`."
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directives/class-map.d.ts",
                "line": 21
              }
            ],
            "signatures": [
              {
                "name": "new ClassMapDirective",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/class-map.d.ts",
                    "line": 21
                  }
                ],
                "parameters": [
                  {
                    "name": "partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "ClassMapDirective",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "ClassMapDirective",
                    "excludeFromTOC": true
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/class-map.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/class-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "ClassMapDirective.constructor"
            }
          },
          {
            "name": "render",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/class-map.ts",
                "line": 45,
                "moduleSpecifier": "lit-html/directives/class-map.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/class-map.d.ts",
                    "line": 22
                  }
                ],
                "parameters": [
                  {
                    "name": "classInfo",
                    "type": {
                      "type": "reference",
                      "name": "ClassInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "directives",
                        "anchor": "ClassInfo",
                        "excludeFromTOC": true
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.render"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/class-map.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/class-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "ClassMapDirective.render"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/class-map.ts",
                "line": 56,
                "moduleSpecifier": "lit-html/directives/class-map.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/class-map.d.ts",
                    "line": 23
                  }
                ],
                "parameters": [
                  {
                    "name": "part",
                    "type": {
                      "type": "reference",
                      "name": "AttributePart",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "AttributePart"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "__namedParameters",
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "namedTupleMember",
                          "name": "classInfo",
                          "isOptional": false,
                          "element": {
                            "type": "reference",
                            "name": "ClassInfo",
                            "package": "lit-html",
                            "location": {
                              "page": "directives",
                              "anchor": "ClassInfo",
                              "excludeFromTOC": true
                            }
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "name": "noChange",
                        "package": "lit-html",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.update"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/class-map.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/class-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "ClassMapDirective.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/class-map.ts",
            "line": 23,
            "moduleSpecifier": "lit-html/directives/class-map.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/class-map.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/class-map.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "ClassMapDirective",
          "excludeFromTOC": true
        },
        "heritage": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "name": "ClassInfo",
        "comment": {
          "shortText": "A key-value set of class names to truthy values."
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/class-map.ts",
            "line": 19,
            "moduleSpecifier": "lit-html/directives/class-map.js"
          }
        ],
        "indexSignature": {
          "name": "__index",
          "sources": [
            {
              "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/class-map.d.ts",
              "line": 12
            }
          ],
          "parameters": [
            {
              "name": "name",
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "kindString": "Parameter"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "kindString": "Index signature"
        },
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/class-map.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/class-map.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "ClassInfo",
          "excludeFromTOC": true
        }
      },
      {
        "name": "guard",
        "comment": {
          "shortText": "Prevents re-render of a template function until a single value or an array of\nvalues changes.",
          "text": "Values are checked against previous values with strict equality (`===`), and\nso the check won't detect nested property changes inside objects or arrays.\nArrays values have each item checked against the previous value at the same\nindex with strict equality. Nested arrays are also checked only by strict\nequality.\nExample:\n```js\nhtml`\n  <div>\n    ${guard([user.id, company.id], () => html`...`)}\n  </div>\n`\n```\nIn this case, the template only rerenders if either `user.id` or `company.id`\nchanges.\nguard() is useful with immutable data patterns, by preventing expensive work\nuntil data updates.\nExample:\n```js\nhtml`\n  <div>\n    ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n  </div>\n`\n```\nIn this case, items are mapped over only when the array reference changes.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/guard.ts",
            "line": 84,
            "moduleSpecifier": "lit-html/directives/guard.js"
          }
        ],
        "signatures": [
          {
            "name": "guard",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/guard.d.ts",
                "line": 54
              }
            ],
            "parameters": [
              {
                "name": "_value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              },
              {
                "name": "f",
                "comment": {
                  "shortText": "the template function"
                },
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/guard.d.ts",
                        "line": 54
                      }
                    ],
                    "signatures": [
                      {
                        "name": "__type",
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/guard.d.ts",
                            "line": 54
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Type literal"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "name": "GuardDirective",
                    "package": "lit-html",
                    "location": {
                      "page": "directives",
                      "anchor": "GuardDirective",
                      "excludeFromTOC": true
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/guard.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/guard.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "guard"
        }
      },
      {
        "name": "GuardDirective",
        "comment": {
          "shortText": "Base class for creating custom directives. Users should extend this class,\nimplement `render` and/or `update`, and then pass their subclass to\n`directive`."
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directive.d.ts",
                "line": 61
              }
            ],
            "signatures": [
              {
                "name": "new GuardDirective",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 61
                  }
                ],
                "parameters": [
                  {
                    "name": "_partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "GuardDirective",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "GuardDirective",
                    "excludeFromTOC": true
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "Directive.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/guard.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/guard.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "GuardDirective.constructor"
            }
          },
          {
            "name": "render",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/guard.ts",
                "line": 16,
                "moduleSpecifier": "lit-html/directives/guard.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/guard.d.ts",
                    "line": 10
                  }
                ],
                "parameters": [
                  {
                    "name": "_value",
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "f",
                    "type": {
                      "type": "reflection",
                      "declaration": {
                        "name": "__type",
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/guard.d.ts",
                            "line": 10
                          }
                        ],
                        "signatures": [
                          {
                            "name": "__type",
                            "sources": [
                              {
                                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/guard.d.ts",
                                "line": 10
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "unknown"
                            },
                            "kindString": "Call signature"
                          }
                        ],
                        "kindString": "Type literal"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.render"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/guard.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/guard.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "GuardDirective.render"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/guard.ts",
                "line": 20,
                "moduleSpecifier": "lit-html/directives/guard.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/guard.d.ts",
                    "line": 11
                  }
                ],
                "parameters": [
                  {
                    "name": "_part",
                    "type": {
                      "type": "reference",
                      "name": "Part",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "__namedParameters",
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "namedTupleMember",
                          "name": "_value",
                          "isOptional": false,
                          "element": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        },
                        {
                          "type": "namedTupleMember",
                          "name": "f",
                          "isOptional": false,
                          "element": {
                            "type": "reflection",
                            "declaration": {
                              "name": "__type",
                              "sources": [
                                {
                                  "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/guard.d.ts",
                                  "line": 10
                                }
                              ],
                              "signatures": [
                                {
                                  "name": "__type",
                                  "sources": [
                                    {
                                      "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/guard.d.ts",
                                      "line": 10
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "unknown"
                                  },
                                  "kindString": "Call signature"
                                }
                              ],
                              "kindString": "Type literal"
                            }
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.update"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/guard.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/guard.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "GuardDirective.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/guard.ts",
            "line": 13,
            "moduleSpecifier": "lit-html/directives/guard.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/guard.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/guard.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "GuardDirective",
          "excludeFromTOC": true
        },
        "heritage": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "name": "ifDefined",
        "comment": {
          "shortText": "For AttributeParts, sets the attribute if the value is defined and removes\nthe attribute if the value is undefined.",
          "text": "For other part types, this directive is a no-op.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/if-defined.ts",
            "line": 15,
            "moduleSpecifier": "lit-html/directives/if-defined.js"
          }
        ],
        "signatures": [
          {
            "name": "ifDefined",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/if-defined.d.ts",
                "line": 13
              }
            ],
            "typeParameter": [
              {
                "name": "T",
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "value",
                "type": {
                  "type": "reference",
                  "name": "T"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "name": "nothing",
                    "package": "lit-html",
                    "location": {
                      "page": "templates",
                      "anchor": "nothing"
                    }
                  }
                },
                {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "NonNullable",
                  "package": "typescript"
                }
              ]
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/if-defined.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/if-defined.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "ifDefined"
        }
      },
      {
        "name": "join",
        "comment": {
          "blockTags": [
            {
              "tag": "@example",
              "content": [
                {
                  "text": "```ts\nrender() {\n  return html`\n    ${join(items, html`<span class=\"separator\">|</span>`)}\n  `;\n}"
                }
              ]
            }
          ],
          "shortText": "Returns an iterable containing the values in `items` interleaved with the\n`joiner` value."
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/join.ts",
            "line": 20,
            "moduleSpecifier": "lit-html/directives/join.js"
          },
          {
            "fileName": "packages/lit-html/src/directives/join.ts",
            "line": 24,
            "moduleSpecifier": "lit-html/directives/join.js"
          }
        ],
        "signatures": [
          {
            "name": "join",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/join.d.ts",
                "line": 19
              }
            ],
            "typeParameter": [
              {
                "name": "I",
                "kindString": "Type parameter"
              },
              {
                "name": "J",
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "items",
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "I"
                        }
                      ],
                      "name": "Iterable",
                      "package": "typescript"
                    }
                  ]
                },
                "kindString": "Parameter"
              },
              {
                "name": "joiner",
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/join.d.ts",
                        "line": 19
                      }
                    ],
                    "signatures": [
                      {
                        "name": "__type",
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/join.d.ts",
                            "line": 19
                          }
                        ],
                        "parameters": [
                          {
                            "name": "index",
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            "kindString": "Parameter"
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "J"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Type literal"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "I"
                    },
                    {
                      "type": "reference",
                      "name": "J"
                    }
                  ]
                }
              ],
              "name": "Iterable",
              "package": "typescript"
            },
            "kindString": "Call signature"
          },
          {
            "name": "join",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/join.d.ts",
                "line": 20
              }
            ],
            "typeParameter": [
              {
                "name": "I",
                "kindString": "Type parameter"
              },
              {
                "name": "J",
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "items",
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "I"
                        }
                      ],
                      "name": "Iterable",
                      "package": "typescript"
                    }
                  ]
                },
                "kindString": "Parameter"
              },
              {
                "name": "joiner",
                "type": {
                  "type": "reference",
                  "name": "J"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "I"
                    },
                    {
                      "type": "reference",
                      "name": "J"
                    }
                  ]
                }
              ],
              "name": "Iterable",
              "package": "typescript"
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/join.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/join.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "join"
        }
      },
      {
        "name": "keyed",
        "comment": {
          "shortText": "Associates a renderable value with a unique key. When the key changes, the\nprevious DOM is removed and disposed before rendering the next value, even\nif the value - such as a template - is the same.",
          "text": "This is useful for forcing re-renders of stateful components, or working\nwith code that expects new data to generate new HTML elements, such as some\nanimation techniques.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/keyed.ts",
            "line": 45,
            "moduleSpecifier": "lit-html/directives/keyed.js"
          }
        ],
        "signatures": [
          {
            "name": "keyed",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/keyed.d.ts",
                "line": 21
              }
            ],
            "parameters": [
              {
                "name": "k",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              },
              {
                "name": "v",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "name": "Keyed",
                    "package": "lit-html",
                    "location": {
                      "page": "directives",
                      "anchor": "Keyed",
                      "excludeFromTOC": true
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/keyed.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/keyed.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "keyed"
        }
      },
      {
        "name": "Keyed",
        "comment": {
          "shortText": "Base class for creating custom directives. Users should extend this class,\nimplement `render` and/or `update`, and then pass their subclass to\n`directive`."
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directive.d.ts",
                "line": 61
              }
            ],
            "signatures": [
              {
                "name": "new Keyed",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 61
                  }
                ],
                "parameters": [
                  {
                    "name": "_partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "Keyed",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "Keyed",
                    "excludeFromTOC": true
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "Directive.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/keyed.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/keyed.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "Keyed.constructor"
            }
          },
          {
            "name": "key",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/keyed.ts",
                "line": 17,
                "moduleSpecifier": "lit-html/directives/keyed.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/keyed.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/keyed.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "Keyed.key"
            }
          },
          {
            "name": "render",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/keyed.ts",
                "line": 19,
                "moduleSpecifier": "lit-html/directives/keyed.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/keyed.d.ts",
                    "line": 9
                  }
                ],
                "parameters": [
                  {
                    "name": "k",
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "v",
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.render"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/keyed.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/keyed.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "Keyed.render"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/keyed.ts",
                "line": 24,
                "moduleSpecifier": "lit-html/directives/keyed.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/keyed.d.ts",
                    "line": 10
                  }
                ],
                "parameters": [
                  {
                    "name": "part",
                    "type": {
                      "type": "reference",
                      "name": "ChildPart",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ChildPart"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "__namedParameters",
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "namedTupleMember",
                          "name": "k",
                          "isOptional": false,
                          "element": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        },
                        {
                          "type": "namedTupleMember",
                          "name": "v",
                          "isOptional": false,
                          "element": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.update"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/keyed.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/keyed.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "Keyed.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/keyed.ts",
            "line": 16,
            "moduleSpecifier": "lit-html/directives/keyed.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/keyed.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/keyed.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "Keyed",
          "excludeFromTOC": true
        },
        "heritage": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "name": "live",
        "comment": {
          "shortText": "Checks binding values against live DOM values, instead of previously bound\nvalues, when determining whether to update the value.",
          "text": "This is useful for cases where the DOM value may change from outside of\nlit-html, such as with a binding to an `<input>` element's `value` property,\na content editable elements text, or to a custom element that changes it's\nown properties or attributes.\nIn these cases if the DOM value changes, but the value set through lit-html\nbindings hasn't, lit-html won't know to update the DOM value and will leave\nit alone. If this is not what you want--if you want to overwrite the DOM\nvalue with the bound value no matter what--use the `live()` directive:\n```js\nhtml`<input .value=${live(x)}>`\n```\n`live()` performs a strict equality check against the live DOM value, and if\nthe new value is equal to the live value, does nothing. This means that\n`live()` should not be used when the binding will cause a type conversion. If\nyou use `live()` with an attribute binding, make sure that only strings are\npassed in, or the binding will update every render.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/live.ts",
            "line": 92,
            "moduleSpecifier": "lit-html/directives/live.js"
          }
        ],
        "signatures": [
          {
            "name": "live",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/live.d.ts",
                "line": 37
              }
            ],
            "parameters": [
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "name": "LiveDirective",
                    "package": "lit-html",
                    "location": {
                      "page": "directives",
                      "anchor": "LiveDirective",
                      "excludeFromTOC": true
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/live.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/live.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "live"
        }
      },
      {
        "name": "LiveDirective",
        "comment": {
          "shortText": "Base class for creating custom directives. Users should extend this class,\nimplement `render` and/or `update`, and then pass their subclass to\n`directive`."
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directives/live.d.ts",
                "line": 9
              }
            ],
            "signatures": [
              {
                "name": "new LiveDirective",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/live.d.ts",
                    "line": 9
                  }
                ],
                "parameters": [
                  {
                    "name": "partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "LiveDirective",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "LiveDirective",
                    "excludeFromTOC": true
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/live.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/live.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "LiveDirective.constructor"
            }
          },
          {
            "name": "render",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/live.ts",
                "line": 36,
                "moduleSpecifier": "lit-html/directives/live.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/live.d.ts",
                    "line": 10
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.render"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/live.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/live.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "LiveDirective.render"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/live.ts",
                "line": 40,
                "moduleSpecifier": "lit-html/directives/live.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/live.d.ts",
                    "line": 11
                  }
                ],
                "parameters": [
                  {
                    "name": "part",
                    "type": {
                      "type": "reference",
                      "name": "AttributePart",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "AttributePart"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "__namedParameters",
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "namedTupleMember",
                          "name": "value",
                          "isOptional": false,
                          "element": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.update"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/live.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/live.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "LiveDirective.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/live.ts",
            "line": 17,
            "moduleSpecifier": "lit-html/directives/live.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/live.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/live.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "LiveDirective",
          "excludeFromTOC": true
        },
        "heritage": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "name": "map",
        "comment": {
          "blockTags": [
            {
              "tag": "@example",
              "content": [
                {
                  "text": "```ts\nrender() {\n  return html`\n    <ul>\n      ${map(items, (i) => html`<li>${i}</li>`)}\n    </ul>\n  `;\n}\n```"
                }
              ]
            }
          ],
          "shortText": "Returns an iterable containing the result of calling `f(value)` on each\nvalue in `items`."
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/map.ts",
            "line": 23,
            "moduleSpecifier": "lit-html/directives/map.js"
          }
        ],
        "signatures": [
          {
            "name": "map",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/map.d.ts",
                "line": 22
              }
            ],
            "typeParameter": [
              {
                "name": "T",
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "items",
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "Iterable",
                      "package": "typescript"
                    }
                  ]
                },
                "kindString": "Parameter"
              },
              {
                "name": "f",
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/map.d.ts",
                        "line": 22
                      }
                    ],
                    "signatures": [
                      {
                        "name": "__type",
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/map.d.ts",
                            "line": 22
                          }
                        ],
                        "parameters": [
                          {
                            "name": "value",
                            "type": {
                              "type": "reference",
                              "name": "T"
                            },
                            "kindString": "Parameter"
                          },
                          {
                            "name": "index",
                            "type": {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            "kindString": "Parameter"
                          }
                        ],
                        "type": {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Type literal"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                {
                  "type": "intrinsic",
                  "name": "void"
                },
                {
                  "type": "intrinsic",
                  "name": "unknown"
                }
              ],
              "name": "Generator",
              "package": "typescript"
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/map.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/map.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "map"
        }
      },
      {
        "name": "range",
        "comment": {
          "blockTags": [
            {
              "tag": "@example",
              "content": [
                {
                  "text": "```ts\nrender() {\n  return html`\n    ${map(range(8), () => html`<div class=\"cell\"></div>`)}\n  `;\n}\n```"
                }
              ]
            }
          ],
          "shortText": "Returns an iterable of integers from `start` to `end` (exclusive)\nincrementing by `step`.",
          "text": "If `start` is omitted, the range starts at `0`. `step` defaults to `1`.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/range.ts",
            "line": 23,
            "moduleSpecifier": "lit-html/directives/range.js"
          },
          {
            "fileName": "packages/lit-html/src/directives/range.ts",
            "line": 24,
            "moduleSpecifier": "lit-html/directives/range.js"
          }
        ],
        "signatures": [
          {
            "name": "range",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/range.d.ts",
                "line": 22
              }
            ],
            "parameters": [
              {
                "name": "end",
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ],
              "name": "Iterable",
              "package": "typescript"
            },
            "kindString": "Call signature"
          },
          {
            "name": "range",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/range.d.ts",
                "line": 23
              }
            ],
            "parameters": [
              {
                "name": "start",
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                },
                "kindString": "Parameter"
              },
              {
                "name": "end",
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                },
                "kindString": "Parameter"
              },
              {
                "name": "step",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "number"
                }
              ],
              "name": "Iterable",
              "package": "typescript"
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/range.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/range.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "range"
        }
      },
      {
        "name": "createRef",
        "comment": {
          "shortText": "Creates a new Ref object, which is container for a reference to an element."
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/ref.ts",
            "line": 12,
            "moduleSpecifier": "lit-html/directives/ref.js"
          }
        ],
        "signatures": [
          {
            "name": "createRef",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/ref.d.ts",
                "line": 11
              }
            ],
            "typeParameter": [
              {
                "name": "T",
                "default": {
                  "type": "reference",
                  "name": "Element",
                  "package": "typescript",
                  "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                },
                "kindString": "Type parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "T"
                }
              ],
              "name": "Ref",
              "package": "lit-html",
              "location": {
                "page": "directives",
                "anchor": "Ref",
                "excludeFromTOC": true
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/ref.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/ref.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "createRef"
        }
      },
      {
        "name": "ref",
        "comment": {
          "shortText": "Sets the value of a Ref object or calls a ref callback with the element it's\nbound to.",
          "text": "A Ref object acts as a container for a reference to an element. A ref\ncallback is a function that takes an element as its only argument.\nThe ref directive sets the value of the Ref object or calls the ref callback\nduring rendering, if the referenced element changed.\nNote: If a ref callback is rendered to a different element position or is\nremoved in a subsequent render, it will first be called with `undefined`,\nfollowed by another call with the new element it was rendered to (if any).\n```js\n// Using Ref object\nconst inputRef = createRef();\nrender(html`<input ${ref(inputRef)}>`, container);\ninputRef.value.focus();\n// Using callback\nconst callback = (inputElement) => inputElement.focus();\nrender(html`<input ${ref(callback)}>`, container);\n```\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/ref.ts",
            "line": 150,
            "moduleSpecifier": "lit-html/directives/ref.js"
          }
        ],
        "signatures": [
          {
            "name": "ref",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/ref.d.ts",
                "line": 60
              }
            ],
            "parameters": [
              {
                "name": "_ref",
                "type": {
                  "type": "reference",
                  "name": "RefOrCallback",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "RefOrCallback",
                    "excludeFromTOC": true
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "name": "RefDirective",
                    "package": "lit-html",
                    "location": {
                      "page": "directives",
                      "anchor": "RefDirective",
                      "excludeFromTOC": true
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/ref.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/ref.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "ref"
        }
      },
      {
        "name": "Ref",
        "comment": {
          "shortText": "An object that holds a ref value."
        },
        "children": [
          {
            "name": "constructor",
            "signatures": [
              {
                "name": "new Ref",
                "typeParameter": [
                  {
                    "name": "T",
                    "default": {
                      "type": "reference",
                      "name": "Element",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                    },
                    "kindString": "Type parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Ref",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "Ref",
                    "excludeFromTOC": true
                  }
                },
                "kindString": "Constructor signature"
              }
            ],
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "Ref.constructor"
            }
          },
          {
            "name": "value",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "The current Element value of the ref, or else `undefined` if the ref is no\nlonger rendered."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/ref.ts",
                "line": 22,
                "moduleSpecifier": "lit-html/directives/ref.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "T"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "Ref.value"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/ref.ts",
            "line": 17,
            "moduleSpecifier": "lit-html/directives/ref.js"
          }
        ],
        "typeParameters": [
          {
            "name": "T",
            "default": {
              "type": "reference",
              "name": "Element",
              "package": "typescript",
              "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
            },
            "kindString": "Type parameter"
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/ref.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/ref.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "Ref",
          "excludeFromTOC": true
        }
      },
      {
        "name": "RefDirective",
        "comment": {
          "shortText": "An abstract `Directive` base class whose `disconnected` method will be\ncalled when the part containing the directive is cleared as a result of\nre-rendering, or when the user calls `part.setConnected(false)` on\na part that was previously rendered containing the directive (as happens\nwhen e.g. a LitElement disconnects from the DOM).",
          "text": "If `part.setConnected(true)` is subsequently called on a\ncontaining part, the directive's `reconnected` method will be called prior\nto its next `update`/`render` callbacks. When implementing `disconnected`,\n`reconnected` should also be implemented to be compatible with reconnection.\nNote that updates may occur while the directive is disconnected. As such,\ndirectives should generally check the `this.isConnected` flag during\nrender/update to determine whether it is safe to subscribe to resources\nthat may prevent garbage collection.\n"
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directive.d.ts",
                "line": 61
              }
            ],
            "signatures": [
              {
                "name": "new RefDirective",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 61
                  }
                ],
                "parameters": [
                  {
                    "name": "_partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "RefDirective",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "RefDirective",
                    "excludeFromTOC": true
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "AsyncDirective.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "AsyncDirective.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.constructor"
            }
          },
          {
            "name": "isConnected",
            "comment": {
              "shortText": "The connection state for this Directive."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 304,
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AsyncDirective.isConnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.isConnected"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.isConnected"
            }
          },
          {
            "name": "disconnected",
            "comment": {
              "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/ref.ts",
                "line": 108,
                "moduleSpecifier": "lit-html/directives/ref.js"
              }
            ],
            "signatures": [
              {
                "name": "disconnected",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/ref.d.ts",
                    "line": 32
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AsyncDirective.disconnected"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AsyncDirective.disconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.disconnected"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.disconnected"
            }
          },
          {
            "name": "reconnected",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/ref.ts",
                "line": 118,
                "moduleSpecifier": "lit-html/directives/ref.js"
              }
            ],
            "signatures": [
              {
                "name": "reconnected",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/ref.d.ts",
                    "line": 33
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AsyncDirective.reconnected"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AsyncDirective.reconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.reconnected"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.reconnected"
            }
          },
          {
            "name": "render",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/ref.ts",
                "line": 48,
                "moduleSpecifier": "lit-html/directives/ref.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/ref.d.ts",
                    "line": 28
                  }
                ],
                "parameters": [
                  {
                    "name": "_ref",
                    "type": {
                      "type": "reference",
                      "name": "RefOrCallback",
                      "package": "lit-html",
                      "location": {
                        "page": "directives",
                        "anchor": "RefOrCallback",
                        "excludeFromTOC": true
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "symbol"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AsyncDirective.render"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AsyncDirective.render",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.render"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.render"
            }
          },
          {
            "name": "setValue",
            "comment": {
              "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
              "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 364,
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "name": "setValue",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/async-directive.d.ts",
                    "line": 161
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "comment": {
                      "shortText": "The value to set"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "AsyncDirective.setValue"
                },
                "kindString": "Call signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "AsyncDirective.setValue",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.setValue"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.setValue"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/ref.ts",
                "line": 52,
                "moduleSpecifier": "lit-html/directives/ref.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/ref.d.ts",
                    "line": 29
                  }
                ],
                "parameters": [
                  {
                    "name": "part",
                    "type": {
                      "type": "reference",
                      "name": "ElementPart",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ElementPart"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "__namedParameters",
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "namedTupleMember",
                          "name": "_ref",
                          "isOptional": false,
                          "element": {
                            "type": "reference",
                            "name": "RefOrCallback",
                            "package": "lit-html",
                            "location": {
                              "page": "directives",
                              "anchor": "RefOrCallback",
                              "excludeFromTOC": true
                            }
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "symbol"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AsyncDirective.update"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AsyncDirective.update",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.update"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/ref.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/ref.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RefDirective.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/ref.ts",
            "line": 43,
            "moduleSpecifier": "lit-html/directives/ref.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "AsyncDirective",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/ref.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/ref.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "RefDirective",
          "excludeFromTOC": true
        },
        "heritage": [
          {
            "type": "reference",
            "name": "AsyncDirective",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          }
        ]
      },
      {
        "name": "RefOrCallback",
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/ref.ts",
            "line": 41,
            "moduleSpecifier": "lit-html/directives/ref.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "Ref",
              "package": "lit-html",
              "location": {
                "page": "directives",
                "anchor": "Ref",
                "excludeFromTOC": true
              }
            },
            {
              "type": "reflection",
              "declaration": {
                "name": "__type",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/ref.d.ts",
                    "line": 23
                  }
                ],
                "signatures": [
                  {
                    "name": "__type",
                    "parameters": [
                      {
                        "name": "el",
                        "type": {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "name": "Element",
                              "package": "typescript",
                              "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                            },
                            {
                              "type": "intrinsic",
                              "name": "undefined"
                            }
                          ]
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "void"
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Type literal"
              }
            }
          ]
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/ref.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/ref.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "RefOrCallback",
          "excludeFromTOC": true
        }
      },
      {
        "name": "repeat",
        "comment": {
          "shortText": "A directive that repeats a series of values (usually `TemplateResults`)\ngenerated from an iterable, and updates those items efficiently when the\niterable changes based on user-provided `keys` associated with each item.",
          "text": "Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\nmeaning previous DOM for a given key is moved into the new position if\nneeded, and DOM will never be reused with values for different keys (new DOM\nwill always be created for new keys). This is generally the most efficient\nway to use `repeat` since it performs minimum unnecessary work for insertions\nand removals.\nThe `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n```js\nhtml`\n  <ol>\n    ${repeat(this.items, (item) => item.id, (item, index) => {\n      return html`<li>${index}: ${item.name}</li>`;\n    })}\n  </ol>\n`\n```\n**Important**: If providing a `keyFn`, keys *must* be unique for all items in a\ngiven call to `repeat`. The behavior when two or more items have the same key\nis undefined.\nIf no `keyFn` is provided, this directive will perform similar to mapping\nitems to values, and DOM will be reused against potentially different items.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/repeat.ts",
            "line": 481,
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "signatures": [
          {
            "name": "repeat",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/repeat.d.ts",
                "line": 23
              }
            ],
            "typeParameter": [
              {
                "name": "T",
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "items",
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              },
              {
                "name": "keyFnOrTemplate",
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "KeyFn",
                      "package": "lit-html",
                      "location": {
                        "page": "directives",
                        "anchor": "KeyFn",
                        "excludeFromTOC": true
                      }
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "package": "lit-html",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate",
                        "excludeFromTOC": true
                      }
                    }
                  ]
                },
                "kindString": "Parameter"
              },
              {
                "name": "template",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate",
                    "excludeFromTOC": true
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "kindString": "Call signature"
          },
          {
            "name": "repeat",
            "comment": {
              "shortText": "A directive that repeats a series of values (usually `TemplateResults`)\ngenerated from an iterable, and updates those items efficiently when the\niterable changes based on user-provided `keys` associated with each item.",
              "text": "Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\nmeaning previous DOM for a given key is moved into the new position if\nneeded, and DOM will never be reused with values for different keys (new DOM\nwill always be created for new keys). This is generally the most efficient\nway to use `repeat` since it performs minimum unnecessary work for insertions\nand removals.\nThe `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n```js\nhtml`\n  <ol>\n    ${repeat(this.items, (item) => item.id, (item, index) => {\n      return html`<li>${index}: ${item.name}</li>`;\n    })}\n  </ol>\n`\n```\n**Important**: If providing a `keyFn`, keys *must* be unique for all items in a\ngiven call to `repeat`. The behavior when two or more items have the same key\nis undefined.\nIf no `keyFn` is provided, this directive will perform similar to mapping\nitems to values, and DOM will be reused against potentially different items.\n"
            },
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/repeat.d.ts",
                "line": 24
              }
            ],
            "typeParameter": [
              {
                "name": "T",
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "items",
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              },
              {
                "name": "template",
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate",
                    "excludeFromTOC": true
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "kindString": "Call signature"
          },
          {
            "name": "repeat",
            "comment": {
              "shortText": "A directive that repeats a series of values (usually `TemplateResults`)\ngenerated from an iterable, and updates those items efficiently when the\niterable changes based on user-provided `keys` associated with each item.",
              "text": "Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\nmeaning previous DOM for a given key is moved into the new position if\nneeded, and DOM will never be reused with values for different keys (new DOM\nwill always be created for new keys). This is generally the most efficient\nway to use `repeat` since it performs minimum unnecessary work for insertions\nand removals.\nThe `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n```js\nhtml`\n  <ol>\n    ${repeat(this.items, (item) => item.id, (item, index) => {\n      return html`<li>${index}: ${item.name}</li>`;\n    })}\n  </ol>\n`\n```\n**Important**: If providing a `keyFn`, keys *must* be unique for all items in a\ngiven call to `repeat`. The behavior when two or more items have the same key\nis undefined.\nIf no `keyFn` is provided, this directive will perform similar to mapping\nitems to values, and DOM will be reused against potentially different items.\n"
            },
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/repeat.d.ts",
                "line": 25
              }
            ],
            "typeParameter": [
              {
                "name": "T",
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "items",
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              },
              {
                "name": "keyFn",
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "KeyFn",
                      "package": "lit-html",
                      "location": {
                        "page": "directives",
                        "anchor": "KeyFn",
                        "excludeFromTOC": true
                      }
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "package": "lit-html",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate",
                        "excludeFromTOC": true
                      }
                    }
                  ]
                },
                "kindString": "Parameter"
              },
              {
                "name": "template",
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate",
                    "excludeFromTOC": true
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/repeat.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/repeat.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "repeat"
        }
      },
      {
        "name": "RepeatDirective",
        "comment": {
          "shortText": "Base class for creating custom directives. Users should extend this class,\nimplement `render` and/or `update`, and then pass their subclass to\n`directive`."
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directives/repeat.d.ts",
                "line": 12
              }
            ],
            "signatures": [
              {
                "name": "new RepeatDirective",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/repeat.d.ts",
                    "line": 12
                  }
                ],
                "parameters": [
                  {
                    "name": "partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "RepeatDirective",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "RepeatDirective",
                    "excludeFromTOC": true
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/repeat.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/repeat.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RepeatDirective.constructor"
            }
          },
          {
            "name": "render",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/repeat.ts",
                "line": 66,
                "moduleSpecifier": "lit-html/directives/repeat.js"
              },
              {
                "fileName": "packages/lit-html/src/directives/repeat.ts",
                "line": 67,
                "moduleSpecifier": "lit-html/directives/repeat.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/repeat.d.ts",
                    "line": 14
                  }
                ],
                "typeParameter": [
                  {
                    "name": "T",
                    "kindString": "Type parameter"
                  }
                ],
                "parameters": [
                  {
                    "name": "items",
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "Iterable",
                      "package": "typescript"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "template",
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "package": "lit-html",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate",
                        "excludeFromTOC": true
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.render"
                },
                "kindString": "Call signature"
              },
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/repeat.d.ts",
                    "line": 15
                  }
                ],
                "typeParameter": [
                  {
                    "name": "T",
                    "kindString": "Type parameter"
                  }
                ],
                "parameters": [
                  {
                    "name": "items",
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "Iterable",
                      "package": "typescript"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "keyFn",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "T"
                            }
                          ],
                          "name": "KeyFn",
                          "package": "lit-html",
                          "location": {
                            "page": "directives",
                            "anchor": "KeyFn",
                            "excludeFromTOC": true
                          }
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "T"
                            }
                          ],
                          "name": "ItemTemplate",
                          "package": "lit-html",
                          "location": {
                            "page": "directives",
                            "anchor": "ItemTemplate",
                            "excludeFromTOC": true
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "template",
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "package": "lit-html",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate",
                        "excludeFromTOC": true
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.render"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/repeat.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/repeat.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RepeatDirective.render"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/repeat.ts",
                "line": 80,
                "moduleSpecifier": "lit-html/directives/repeat.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/repeat.d.ts",
                    "line": 16
                  }
                ],
                "typeParameter": [
                  {
                    "name": "T",
                    "kindString": "Type parameter"
                  }
                ],
                "parameters": [
                  {
                    "name": "containerPart",
                    "type": {
                      "type": "reference",
                      "name": "ChildPart",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ChildPart"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "__namedParameters",
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "T"
                            }
                          ],
                          "name": "Iterable",
                          "package": "typescript"
                        },
                        {
                          "type": "union",
                          "types": [
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "T"
                                }
                              ],
                              "name": "KeyFn",
                              "package": "lit-html",
                              "location": {
                                "page": "directives",
                                "anchor": "KeyFn",
                                "excludeFromTOC": true
                              }
                            },
                            {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "reference",
                                  "name": "T"
                                }
                              ],
                              "name": "ItemTemplate",
                              "package": "lit-html",
                              "location": {
                                "page": "directives",
                                "anchor": "ItemTemplate",
                                "excludeFromTOC": true
                              }
                            }
                          ]
                        },
                        {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "reference",
                              "name": "T"
                            }
                          ],
                          "name": "ItemTemplate",
                          "package": "lit-html",
                          "location": {
                            "page": "directives",
                            "anchor": "ItemTemplate",
                            "excludeFromTOC": true
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "name": "noChange",
                        "package": "lit-html",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.update"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/repeat.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/repeat.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "RepeatDirective.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/repeat.ts",
            "line": 31,
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/repeat.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/repeat.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "RepeatDirective",
          "excludeFromTOC": true
        },
        "heritage": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "name": "ItemTemplate",
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/repeat.ts",
            "line": 18,
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "typeParameters": [
          {
            "name": "T",
            "kindString": "Type parameter"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "name": "__type",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/repeat.d.ts",
                "line": 9
              }
            ],
            "signatures": [
              {
                "name": "__type",
                "parameters": [
                  {
                    "name": "item",
                    "type": {
                      "type": "reference",
                      "name": "T"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "index",
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Type literal"
          }
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/repeat.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/repeat.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "ItemTemplate",
          "excludeFromTOC": true
        }
      },
      {
        "name": "KeyFn",
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/repeat.ts",
            "line": 17,
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "typeParameters": [
          {
            "name": "T",
            "kindString": "Type parameter"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "name": "__type",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/repeat.d.ts",
                "line": 8
              }
            ],
            "signatures": [
              {
                "name": "__type",
                "parameters": [
                  {
                    "name": "item",
                    "type": {
                      "type": "reference",
                      "name": "T"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "index",
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Type literal"
          }
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/repeat.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/repeat.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "KeyFn",
          "excludeFromTOC": true
        }
      },
      {
        "name": "RepeatDirectiveFn",
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/repeat.ts",
            "line": 436,
            "moduleSpecifier": "lit-html/directives/repeat.js"
          }
        ],
        "signatures": [
          {
            "name": "RepeatDirectiveFn",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/repeat.d.ts",
                "line": 23
              }
            ],
            "typeParameter": [
              {
                "name": "T",
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "items",
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              },
              {
                "name": "keyFnOrTemplate",
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "KeyFn",
                      "package": "lit-html",
                      "location": {
                        "page": "directives",
                        "anchor": "KeyFn",
                        "excludeFromTOC": true
                      }
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "package": "lit-html",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate",
                        "excludeFromTOC": true
                      }
                    }
                  ]
                },
                "kindString": "Parameter"
              },
              {
                "name": "template",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate",
                    "excludeFromTOC": true
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "kindString": "Call signature"
          },
          {
            "name": "RepeatDirectiveFn",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/repeat.d.ts",
                "line": 24
              }
            ],
            "typeParameter": [
              {
                "name": "T",
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "items",
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              },
              {
                "name": "template",
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate",
                    "excludeFromTOC": true
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "kindString": "Call signature"
          },
          {
            "name": "RepeatDirectiveFn",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/repeat.d.ts",
                "line": 25
              }
            ],
            "typeParameter": [
              {
                "name": "T",
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "items",
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "Iterable",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              },
              {
                "name": "keyFn",
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "KeyFn",
                      "package": "lit-html",
                      "location": {
                        "page": "directives",
                        "anchor": "KeyFn",
                        "excludeFromTOC": true
                      }
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "T"
                        }
                      ],
                      "name": "ItemTemplate",
                      "package": "lit-html",
                      "location": {
                        "page": "directives",
                        "anchor": "ItemTemplate",
                        "excludeFromTOC": true
                      }
                    }
                  ]
                },
                "kindString": "Parameter"
              },
              {
                "name": "template",
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ItemTemplate",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "ItemTemplate",
                    "excludeFromTOC": true
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/repeat.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/repeat.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "RepeatDirectiveFn",
          "excludeFromTOC": true
        }
      },
      {
        "name": "styleMap",
        "comment": {
          "blockTags": [
            {
              "tag": "@see",
              "content": [
                {
                  "tag": "@link",
                  "text": "styleMap code samples on Lit.dev",
                  "target": "https://lit.dev/docs/templates/directives/#stylemap"
                }
              ]
            }
          ],
          "shortText": "A directive that applies CSS properties to an element.",
          "text": "`styleMap` can only be used in the `style` attribute and must be the only\nexpression in the attribute. It takes the property names in the\nstyleInfo object and adds the properties to the inline\nstyle of the element.\nProperty names with dashes (`-`) are assumed to be valid CSS\nproperty names and set on the element's style object using `setProperty()`.\nNames without dashes are assumed to be camelCased JavaScript property names\nand set on the element's style object using property assignment, allowing the\nstyle object to translate JavaScript-style names to CSS property names.\nFor example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n'0'})` sets the `background-color`, `border-top` and `--size` properties.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/style-map.ts",
            "line": 139,
            "moduleSpecifier": "lit-html/directives/style-map.js"
          }
        ],
        "signatures": [
          {
            "name": "styleMap",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/style-map.d.ts",
                "line": 44
              }
            ],
            "parameters": [
              {
                "name": "styleInfo",
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "StyleInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "directives",
                        "anchor": "StyleInfo",
                        "excludeFromTOC": true
                      }
                    }
                  ],
                  "name": "Readonly",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "name": "StyleMapDirective",
                    "package": "lit-html",
                    "location": {
                      "page": "directives",
                      "anchor": "StyleMapDirective",
                      "excludeFromTOC": true
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/style-map.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/style-map.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "styleMap"
        }
      },
      {
        "name": "StyleMapDirective",
        "comment": {
          "shortText": "Base class for creating custom directives. Users should extend this class,\nimplement `render` and/or `update`, and then pass their subclass to\n`directive`."
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directives/style-map.d.ts",
                "line": 20
              }
            ],
            "signatures": [
              {
                "name": "new StyleMapDirective",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/style-map.d.ts",
                    "line": 20
                  }
                ],
                "parameters": [
                  {
                    "name": "partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "StyleMapDirective",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "StyleMapDirective",
                    "excludeFromTOC": true
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/style-map.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/style-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "StyleMapDirective.constructor"
            }
          },
          {
            "name": "render",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/style-map.ts",
                "line": 50,
                "moduleSpecifier": "lit-html/directives/style-map.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/style-map.d.ts",
                    "line": 21
                  }
                ],
                "parameters": [
                  {
                    "name": "styleInfo",
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "StyleInfo",
                          "package": "lit-html",
                          "location": {
                            "page": "directives",
                            "anchor": "StyleInfo",
                            "excludeFromTOC": true
                          }
                        }
                      ],
                      "name": "Readonly",
                      "package": "typescript"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.render"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/style-map.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/style-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "StyleMapDirective.render"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/style-map.ts",
                "line": 72,
                "moduleSpecifier": "lit-html/directives/style-map.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/style-map.d.ts",
                    "line": 22
                  }
                ],
                "parameters": [
                  {
                    "name": "part",
                    "type": {
                      "type": "reference",
                      "name": "AttributePart",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "AttributePart"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "__namedParameters",
                    "type": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "namedTupleMember",
                          "name": "styleInfo",
                          "isOptional": false,
                          "element": {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "name": "StyleInfo",
                                "package": "lit-html",
                                "location": {
                                  "page": "directives",
                                  "anchor": "StyleInfo",
                                  "excludeFromTOC": true
                                }
                              }
                            ],
                            "name": "Readonly",
                            "package": "typescript"
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "name": "noChange",
                        "package": "lit-html",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.update"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/style-map.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/style-map.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "StyleMapDirective.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/style-map.ts",
            "line": 33,
            "moduleSpecifier": "lit-html/directives/style-map.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/style-map.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/style-map.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "StyleMapDirective",
          "excludeFromTOC": true
        },
        "heritage": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "name": "StyleInfo",
        "comment": {
          "shortText": "A key-value set of CSS properties and values.",
          "text": "The key should be either a valid CSS property name string, like\n`'background-color'`, or a valid JavaScript camel case property name\nfor CSSStyleDeclaration like `backgroundColor`.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/style-map.ts",
            "line": 23,
            "moduleSpecifier": "lit-html/directives/style-map.js"
          }
        ],
        "indexSignature": {
          "name": "__index",
          "sources": [
            {
              "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/style-map.d.ts",
              "line": 16
            }
          ],
          "parameters": [
            {
              "name": "name",
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "kindString": "Parameter"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              },
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "literal",
                "value": null
              }
            ]
          },
          "kindString": "Index signature"
        },
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/style-map.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/style-map.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "StyleInfo",
          "excludeFromTOC": true
        }
      },
      {
        "name": "templateContent",
        "comment": {
          "shortText": "Renders the content of a template element as HTML.",
          "text": "Note, the template should be developer controlled and not user controlled.\nRendering a user-controlled template with this directive\ncould lead to cross-site-scripting vulnerabilities.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/template-content.ts",
            "line": 36,
            "moduleSpecifier": "lit-html/directives/template-content.js"
          }
        ],
        "signatures": [
          {
            "name": "templateContent",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/template-content.d.ts",
                "line": 20
              }
            ],
            "parameters": [
              {
                "name": "template",
                "type": {
                  "type": "reference",
                  "name": "HTMLTemplateElement",
                  "package": "typescript",
                  "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "name": "TemplateContentDirective",
                    "package": "lit-html",
                    "location": {
                      "page": "directives",
                      "anchor": "TemplateContentDirective",
                      "excludeFromTOC": true
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/template-content.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/template-content.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "templateContent"
        }
      },
      {
        "name": "TemplateContentDirective",
        "comment": {
          "shortText": "Base class for creating custom directives. Users should extend this class,\nimplement `render` and/or `update`, and then pass their subclass to\n`directive`."
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directives/template-content.d.ts",
                "line": 10
              }
            ],
            "signatures": [
              {
                "name": "new TemplateContentDirective",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/template-content.d.ts",
                    "line": 10
                  }
                ],
                "parameters": [
                  {
                    "name": "partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "TemplateContentDirective",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "TemplateContentDirective",
                    "excludeFromTOC": true
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/template-content.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/template-content.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "TemplateContentDirective.constructor"
            }
          },
          {
            "name": "render",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/template-content.ts",
                "line": 20,
                "moduleSpecifier": "lit-html/directives/template-content.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/template-content.d.ts",
                    "line": 11
                  }
                ],
                "parameters": [
                  {
                    "name": "template",
                    "type": {
                      "type": "reference",
                      "name": "HTMLTemplateElement",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "DocumentFragment",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "name": "noChange",
                        "package": "lit-html",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.render"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/template-content.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/template-content.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "TemplateContentDirective.render"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 139,
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 64
                  }
                ],
                "parameters": [
                  {
                    "name": "_part",
                    "type": {
                      "type": "reference",
                      "name": "Part",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "props",
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "Directive.update"
                },
                "kindString": "Call signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/template-content.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/template-content.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "TemplateContentDirective.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/template-content.ts",
            "line": 10,
            "moduleSpecifier": "lit-html/directives/template-content.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/template-content.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/template-content.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "TemplateContentDirective",
          "excludeFromTOC": true
        },
        "heritage": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "name": "unsafeHTML",
        "comment": {
          "shortText": "Renders the result as HTML, rather than text.",
          "text": "The values `undefined`, `null`, and `nothing`, will all result in no content\n(empty string) being rendered.\nNote, this is unsafe to use with any user-provided input that hasn't been\nsanitized or escaped, as it may lead to cross-site-scripting\nvulnerabilities.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
            "line": 76,
            "moduleSpecifier": "lit-html/directives/unsafe-html.js"
          }
        ],
        "signatures": [
          {
            "name": "unsafeHTML",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/unsafe-html.d.ts",
                "line": 26
              }
            ],
            "parameters": [
              {
                "name": "value",
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "name": "noChange",
                        "package": "lit-html",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "name": "nothing",
                        "package": "lit-html",
                        "location": {
                          "page": "templates",
                          "anchor": "nothing"
                        }
                      }
                    }
                  ]
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "name": "UnsafeHTMLDirective",
                    "package": "lit-html",
                    "location": {
                      "page": "directives",
                      "anchor": "UnsafeHTMLDirective",
                      "excludeFromTOC": true
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/unsafe-html.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/unsafe-html.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "unsafeHTML"
        }
      },
      {
        "name": "UnsafeHTMLDirective",
        "comment": {
          "shortText": "Base class for creating custom directives. Users should extend this class,\nimplement `render` and/or `update`, and then pass their subclass to\n`directive`."
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directives/unsafe-html.d.ts",
                "line": 13
              }
            ],
            "signatures": [
              {
                "name": "new UnsafeHTMLDirective",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/unsafe-html.d.ts",
                    "line": 13
                  }
                ],
                "parameters": [
                  {
                    "name": "partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "UnsafeHTMLDirective",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "UnsafeHTMLDirective",
                    "excludeFromTOC": true
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-html.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/unsafe-html.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective.constructor"
            }
          },
          {
            "name": "directiveName",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
                "line": 13,
                "moduleSpecifier": "lit-html/directives/unsafe-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-html.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/unsafe-html.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective.directiveName"
            }
          },
          {
            "name": "resultType",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
                "line": 14,
                "moduleSpecifier": "lit-html/directives/unsafe-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-html.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/unsafe-html.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective.resultType"
            }
          },
          {
            "name": "render",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
                "line": 30,
                "moduleSpecifier": "lit-html/directives/unsafe-html.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/unsafe-html.d.ts",
                    "line": 14
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "query",
                          "queryType": {
                            "type": "reference",
                            "name": "noChange",
                            "package": "lit-html",
                            "location": {
                              "page": "custom-directives",
                              "anchor": "noChange"
                            }
                          }
                        },
                        {
                          "type": "query",
                          "queryType": {
                            "type": "reference",
                            "name": "nothing",
                            "package": "lit-html",
                            "location": {
                              "page": "templates",
                              "anchor": "nothing"
                            }
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "name": "noChange",
                        "package": "lit-html",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "name": "nothing",
                        "package": "lit-html",
                        "location": {
                          "page": "templates",
                          "anchor": "nothing"
                        }
                      }
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "ResultType",
                          "package": "lit-html"
                        }
                      ],
                      "name": "TemplateResult",
                      "package": "lit-html",
                      "location": {
                        "page": "templates",
                        "anchor": "TemplateResult"
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Directive.render"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-html.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/unsafe-html.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective.render"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 139,
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 64
                  }
                ],
                "parameters": [
                  {
                    "name": "_part",
                    "type": {
                      "type": "reference",
                      "name": "Part",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "props",
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "Directive.update"
                },
                "kindString": "Call signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-html.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/unsafe-html.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
            "line": 12,
            "moduleSpecifier": "lit-html/directives/unsafe-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "name": "UnsafeSVGDirective",
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective",
              "excludeFromTOC": true
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/unsafe-html.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/unsafe-html.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "UnsafeHTMLDirective",
          "excludeFromTOC": true
        },
        "heritage": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "name": "unsafeSVG",
        "comment": {
          "shortText": "Renders the result as SVG, rather than text.",
          "text": "The values `undefined`, `null`, and `nothing`, will all result in no content\n(empty string) being rendered.\nNote, this is unsafe to use with any user-provided input that hasn't been\nsanitized or escaped, as it may lead to cross-site-scripting\nvulnerabilities.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/unsafe-svg.ts",
            "line": 27,
            "moduleSpecifier": "lit-html/directives/unsafe-svg.js"
          }
        ],
        "signatures": [
          {
            "name": "unsafeSVG",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/unsafe-svg.d.ts",
                "line": 21
              }
            ],
            "parameters": [
              {
                "name": "value",
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "name": "noChange",
                        "package": "lit-html",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "name": "nothing",
                        "package": "lit-html",
                        "location": {
                          "page": "templates",
                          "anchor": "nothing"
                        }
                      }
                    }
                  ]
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "name": "UnsafeSVGDirective",
                    "package": "lit-html",
                    "location": {
                      "page": "directives",
                      "anchor": "UnsafeSVGDirective",
                      "excludeFromTOC": true
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/unsafe-svg.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/unsafe-svg.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "unsafeSVG"
        }
      },
      {
        "name": "UnsafeSVGDirective",
        "comment": {
          "shortText": "Base class for creating custom directives. Users should extend this class,\nimplement `render` and/or `update`, and then pass their subclass to\n`directive`."
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directives/unsafe-html.d.ts",
                "line": 13
              }
            ],
            "signatures": [
              {
                "name": "new UnsafeSVGDirective",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/unsafe-html.d.ts",
                    "line": 13
                  }
                ],
                "parameters": [
                  {
                    "name": "partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "UnsafeSVGDirective",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "UnsafeSVGDirective",
                    "excludeFromTOC": true
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "UnsafeHTMLDirective.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "UnsafeHTMLDirective.constructor",
              "location": {
                "page": "directives",
                "anchor": "UnsafeHTMLDirective.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-svg.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/unsafe-svg.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective.constructor"
            }
          },
          {
            "name": "directiveName",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-svg.ts",
                "line": 13,
                "moduleSpecifier": "lit-html/directives/unsafe-svg.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "overwrites": {
              "type": "reference",
              "name": "UnsafeHTMLDirective.directiveName",
              "location": {
                "page": "directives",
                "anchor": "UnsafeHTMLDirective.directiveName"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-svg.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/unsafe-svg.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective.directiveName"
            }
          },
          {
            "name": "resultType",
            "flags": {
              "isStatic": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-svg.ts",
                "line": 14,
                "moduleSpecifier": "lit-html/directives/unsafe-svg.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "overwrites": {
              "type": "reference",
              "name": "UnsafeHTMLDirective.resultType",
              "location": {
                "page": "directives",
                "anchor": "UnsafeHTMLDirective.resultType"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-svg.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/unsafe-svg.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective.resultType"
            }
          },
          {
            "name": "render",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/unsafe-html.ts",
                "line": 30,
                "moduleSpecifier": "lit-html/directives/unsafe-html.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/unsafe-html.d.ts",
                    "line": 14
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "query",
                          "queryType": {
                            "type": "reference",
                            "name": "noChange",
                            "package": "lit-html",
                            "location": {
                              "page": "custom-directives",
                              "anchor": "noChange"
                            }
                          }
                        },
                        {
                          "type": "query",
                          "queryType": {
                            "type": "reference",
                            "name": "nothing",
                            "package": "lit-html",
                            "location": {
                              "page": "templates",
                              "anchor": "nothing"
                            }
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "literal",
                      "value": null
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "name": "noChange",
                        "package": "lit-html",
                        "location": {
                          "page": "custom-directives",
                          "anchor": "noChange"
                        }
                      }
                    },
                    {
                      "type": "query",
                      "queryType": {
                        "type": "reference",
                        "name": "nothing",
                        "package": "lit-html",
                        "location": {
                          "page": "templates",
                          "anchor": "nothing"
                        }
                      }
                    },
                    {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "ResultType",
                          "package": "lit-html"
                        }
                      ],
                      "name": "TemplateResult",
                      "package": "lit-html",
                      "location": {
                        "page": "templates",
                        "anchor": "TemplateResult"
                      }
                    }
                  ]
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "UnsafeHTMLDirective.render"
                },
                "kindString": "Call signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "UnsafeHTMLDirective.render",
              "location": {
                "page": "directives",
                "anchor": "UnsafeHTMLDirective.render"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-svg.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/unsafe-svg.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective.render"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 139,
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 64
                  }
                ],
                "parameters": [
                  {
                    "name": "_part",
                    "type": {
                      "type": "reference",
                      "name": "Part",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "props",
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "UnsafeHTMLDirective.update"
                },
                "kindString": "Call signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "UnsafeHTMLDirective.update",
              "location": {
                "page": "directives",
                "anchor": "UnsafeHTMLDirective.update"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/unsafe-svg.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/unsafe-svg.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UnsafeSVGDirective.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/unsafe-svg.ts",
            "line": 12,
            "moduleSpecifier": "lit-html/directives/unsafe-svg.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "UnsafeHTMLDirective",
            "package": "lit-html",
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective",
              "excludeFromTOC": true
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/unsafe-svg.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/unsafe-svg.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "UnsafeSVGDirective",
          "excludeFromTOC": true
        },
        "heritage": [
          {
            "type": "reference",
            "name": "UnsafeHTMLDirective",
            "package": "lit-html",
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective",
              "excludeFromTOC": true
            }
          }
        ]
      },
      {
        "name": "until",
        "comment": {
          "shortText": "Renders one of a series of values, including Promises, to a Part.",
          "text": "Values are rendered in priority order, with the first argument having the\nhighest priority and the last argument having the lowest priority. If a\nvalue is a Promise, low-priority values will be rendered until it resolves.\nThe priority of values can be used to create placeholder content for async\ndata. For example, a Promise with pending content can be the first,\nhighest-priority, argument, and a non_promise loading indicator template can\nbe used as the second, lower-priority, argument. The loading indicator will\nrender immediately, and the primary content will render when the Promise\nresolves.\nExample:\n```js\nconst content = fetch('./content.txt').then(r => r.text());\nhtml`${until(content, html`<span>Loading...</span>`)}`\n```\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/until.ts",
            "line": 131,
            "moduleSpecifier": "lit-html/directives/until.js"
          }
        ],
        "signatures": [
          {
            "name": "until",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/until.d.ts",
                "line": 39
              }
            ],
            "parameters": [
              {
                "name": "values",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "query",
                  "queryType": {
                    "type": "reference",
                    "name": "UntilDirective",
                    "package": "lit-html",
                    "location": {
                      "page": "directives",
                      "anchor": "UntilDirective",
                      "excludeFromTOC": true
                    }
                  }
                }
              ],
              "name": "DirectiveResult",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/until.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/until.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "until"
        }
      },
      {
        "name": "UntilDirective",
        "comment": {
          "shortText": "An abstract `Directive` base class whose `disconnected` method will be\ncalled when the part containing the directive is cleared as a result of\nre-rendering, or when the user calls `part.setConnected(false)` on\na part that was previously rendered containing the directive (as happens\nwhen e.g. a LitElement disconnects from the DOM).",
          "text": "If `part.setConnected(true)` is subsequently called on a\ncontaining part, the directive's `reconnected` method will be called prior\nto its next `update`/`render` callbacks. When implementing `disconnected`,\n`reconnected` should also be implemented to be compatible with reconnection.\nNote that updates may occur while the directive is disconnected. As such,\ndirectives should generally check the `this.isConnected` flag during\nrender/update to determine whether it is safe to subscribe to resources\nthat may prevent garbage collection.\n"
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directive.d.ts",
                "line": 61
              }
            ],
            "signatures": [
              {
                "name": "new UntilDirective",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 61
                  }
                ],
                "parameters": [
                  {
                    "name": "_partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "UntilDirective",
                  "package": "lit-html",
                  "location": {
                    "page": "directives",
                    "anchor": "UntilDirective",
                    "excludeFromTOC": true
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "AsyncDirective.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "AsyncDirective.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.constructor"
            }
          },
          {
            "name": "isConnected",
            "comment": {
              "shortText": "The connection state for this Directive."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 304,
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AsyncDirective.isConnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.isConnected"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.isConnected"
            }
          },
          {
            "name": "disconnected",
            "comment": {
              "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/until.ts",
                "line": 99,
                "moduleSpecifier": "lit-html/directives/until.js"
              }
            ],
            "signatures": [
              {
                "name": "disconnected",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/until.d.ts",
                    "line": 15
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AsyncDirective.disconnected"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AsyncDirective.disconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.disconnected"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.disconnected"
            }
          },
          {
            "name": "reconnected",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/until.ts",
                "line": 104,
                "moduleSpecifier": "lit-html/directives/until.js"
              }
            ],
            "signatures": [
              {
                "name": "reconnected",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/until.d.ts",
                    "line": 16
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AsyncDirective.reconnected"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AsyncDirective.reconnected",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.reconnected"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.reconnected"
            }
          },
          {
            "name": "render",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/until.ts",
                "line": 24,
                "moduleSpecifier": "lit-html/directives/until.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/until.d.ts",
                    "line": 13
                  }
                ],
                "parameters": [
                  {
                    "name": "args",
                    "flags": {
                      "isRest": true
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AsyncDirective.render"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AsyncDirective.render",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.render"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.render"
            }
          },
          {
            "name": "setValue",
            "comment": {
              "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
              "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 364,
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "name": "setValue",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/async-directive.d.ts",
                    "line": 161
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "comment": {
                      "shortText": "The value to set"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "AsyncDirective.setValue"
                },
                "kindString": "Call signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "AsyncDirective.setValue",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.setValue"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.setValue"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directives/until.ts",
                "line": 28,
                "moduleSpecifier": "lit-html/directives/until.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/until.d.ts",
                    "line": 14
                  }
                ],
                "parameters": [
                  {
                    "name": "_part",
                    "type": {
                      "type": "reference",
                      "name": "Part",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "args",
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AsyncDirective.update"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AsyncDirective.update",
              "location": {
                "page": "custom-directives",
                "anchor": "AsyncDirective.update"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/directives/until.ts",
                "line": 1,
                "moduleSpecifier": "lit/directives/until.js"
              }
            ],
            "location": {
              "page": "directives",
              "anchor": "UntilDirective.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/until.ts",
            "line": 18,
            "moduleSpecifier": "lit-html/directives/until.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "AsyncDirective",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/until.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/until.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "UntilDirective",
          "excludeFromTOC": true
        },
        "heritage": [
          {
            "type": "reference",
            "name": "AsyncDirective",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          }
        ]
      },
      {
        "name": "when",
        "comment": {
          "blockTags": [
            {
              "tag": "@example",
              "content": [
                {
                  "text": "```ts\nrender() {\n  return html`\n    ${when(this.user, () => html`User: ${this.user.username}`, () => html`Sign In...`)}\n  `;\n}\n```"
                }
              ]
            }
          ],
          "shortText": "When `condition` is true, returns the result of calling `trueCase()`, else\nreturns the result of calling `falseCase()` if `falseCase` is defined.",
          "text": "This is a convenience wrapper around a ternary expression that makes it a\nlittle nicer to write an inline conditional without an else.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directives/when.ts",
            "line": 24,
            "moduleSpecifier": "lit-html/directives/when.js"
          },
          {
            "fileName": "packages/lit-html/src/directives/when.ts",
            "line": 29,
            "moduleSpecifier": "lit-html/directives/when.js"
          },
          {
            "fileName": "packages/lit-html/src/directives/when.ts",
            "line": 34,
            "moduleSpecifier": "lit-html/directives/when.js"
          }
        ],
        "signatures": [
          {
            "name": "when",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/when.d.ts",
                "line": 23
              }
            ],
            "typeParameter": [
              {
                "name": "T",
                "kindString": "Type parameter"
              },
              {
                "name": "F",
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "condition",
                "type": {
                  "type": "literal",
                  "value": true
                },
                "kindString": "Parameter"
              },
              {
                "name": "trueCase",
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/when.d.ts",
                        "line": 23
                      }
                    ],
                    "signatures": [
                      {
                        "name": "__type",
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/when.d.ts",
                            "line": 23
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "T"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Type literal"
                  }
                },
                "kindString": "Parameter"
              },
              {
                "name": "falseCase",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/when.d.ts",
                        "line": 23
                      }
                    ],
                    "signatures": [
                      {
                        "name": "__type",
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/when.d.ts",
                            "line": 23
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "F"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Type literal"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "name": "T"
            },
            "kindString": "Call signature"
          },
          {
            "name": "when",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/when.d.ts",
                "line": 24
              }
            ],
            "typeParameter": [
              {
                "name": "T",
                "kindString": "Type parameter"
              },
              {
                "name": "F",
                "default": {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "condition",
                "type": {
                  "type": "literal",
                  "value": false
                },
                "kindString": "Parameter"
              },
              {
                "name": "trueCase",
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/when.d.ts",
                        "line": 24
                      }
                    ],
                    "signatures": [
                      {
                        "name": "__type",
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/when.d.ts",
                            "line": 24
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "T"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Type literal"
                  }
                },
                "kindString": "Parameter"
              },
              {
                "name": "falseCase",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/when.d.ts",
                        "line": 24
                      }
                    ],
                    "signatures": [
                      {
                        "name": "__type",
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/when.d.ts",
                            "line": 24
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "F"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Type literal"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "name": "F"
            },
            "kindString": "Call signature"
          },
          {
            "name": "when",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/when.d.ts",
                "line": 25
              }
            ],
            "typeParameter": [
              {
                "name": "T",
                "kindString": "Type parameter"
              },
              {
                "name": "F",
                "default": {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "condition",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              },
              {
                "name": "trueCase",
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/when.d.ts",
                        "line": 25
                      }
                    ],
                    "signatures": [
                      {
                        "name": "__type",
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/when.d.ts",
                            "line": 25
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "T"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Type literal"
                  }
                },
                "kindString": "Parameter"
              },
              {
                "name": "falseCase",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/when.d.ts",
                        "line": 25
                      }
                    ],
                    "signatures": [
                      {
                        "name": "__type",
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directives/when.d.ts",
                            "line": 25
                          }
                        ],
                        "type": {
                          "type": "reference",
                          "name": "F"
                        },
                        "kindString": "Call signature"
                      }
                    ],
                    "kindString": "Type literal"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "T"
                },
                {
                  "type": "reference",
                  "name": "F"
                }
              ]
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directives/when.ts",
            "line": 1,
            "moduleSpecifier": "lit/directives/when.js"
          }
        ],
        "location": {
          "page": "directives",
          "anchor": "when"
        }
      }
    ]
  },
  {
    "slug": "custom-directives",
    "title": "Custom directives",
    "versionLinks": {
      "v1": "api/lit-html/custom-directives/"
    },
    "repo": "lit/lit",
    "commit": "12109c25997ef03180d7eefe05c64e0fb20dd2b0",
    "items": [
      {
        "name": "AsyncDirective",
        "flags": {
          "isAbstract": true
        },
        "comment": {
          "shortText": "An abstract `Directive` base class whose `disconnected` method will be\ncalled when the part containing the directive is cleared as a result of\nre-rendering, or when the user calls `part.setConnected(false)` on\na part that was previously rendered containing the directive (as happens\nwhen e.g. a LitElement disconnects from the DOM).",
          "text": "If `part.setConnected(true)` is subsequently called on a\ncontaining part, the directive's `reconnected` method will be called prior\nto its next `update`/`render` callbacks. When implementing `disconnected`,\n`reconnected` should also be implemented to be compatible with reconnection.\nNote that updates may occur while the directive is disconnected. As such,\ndirectives should generally check the `this.isConnected` flag during\nrender/update to determine whether it is safe to subscribe to resources\nthat may prevent garbage collection.\n"
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directive.d.ts",
                "line": 61
              }
            ],
            "signatures": [
              {
                "name": "new AsyncDirective",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 61
                  }
                ],
                "parameters": [
                  {
                    "name": "_partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "AsyncDirective",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "AsyncDirective"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "Directive.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "Directive.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.constructor"
            }
          },
          {
            "name": "isConnected",
            "comment": {
              "shortText": "The connection state for this Directive."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 304,
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.isConnected"
            }
          },
          {
            "name": "disconnected",
            "flags": {
              "isProtected": true
            },
            "comment": {
              "shortText": "User callbacks for implementing logic to release any resources/subscriptions\nthat may have been retained by this directive. Since directives may also be\nre-connected, `reconnected` should also be implemented to restore the\nworking state of the directive prior to the next render."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 385,
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "name": "disconnected",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/async-directive.d.ts",
                    "line": 168
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.disconnected"
            }
          },
          {
            "name": "reconnected",
            "flags": {
              "isProtected": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 386,
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "name": "reconnected",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/async-directive.d.ts",
                    "line": 169
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.reconnected"
            }
          },
          {
            "name": "render",
            "flags": {
              "isAbstract": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 137,
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 63
                  }
                ],
                "parameters": [
                  {
                    "name": "props",
                    "flags": {
                      "isRest": true
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "Directive.render"
                },
                "kindString": "Call signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "Directive.render",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.render"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.render"
            }
          },
          {
            "name": "setValue",
            "comment": {
              "shortText": "Sets the value of the directive's Part outside the normal `update`/`render`\nlifecycle of a directive.",
              "text": "This method should not be called synchronously from a directive's `update`\nor `render`.\n"
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/async-directive.ts",
                "line": 364,
                "moduleSpecifier": "lit-html/async-directive.js"
              }
            ],
            "signatures": [
              {
                "name": "setValue",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/async-directive.d.ts",
                    "line": 161
                  }
                ],
                "parameters": [
                  {
                    "name": "value",
                    "comment": {
                      "shortText": "The value to set"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.setValue"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 139,
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 64
                  }
                ],
                "parameters": [
                  {
                    "name": "_part",
                    "type": {
                      "type": "reference",
                      "name": "Part",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "props",
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "Directive.update"
                },
                "kindString": "Call signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "Directive.update",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive.update"
              }
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/async-directive.ts",
            "line": 295,
            "moduleSpecifier": "lit-html/async-directive.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "name": "AsyncReplaceDirective",
            "location": {
              "page": "directives",
              "anchor": "AsyncReplaceDirective",
              "excludeFromTOC": true
            }
          },
          {
            "type": "reference",
            "name": "RefDirective",
            "location": {
              "page": "directives",
              "anchor": "RefDirective",
              "excludeFromTOC": true
            }
          },
          {
            "type": "reference",
            "name": "UntilDirective",
            "location": {
              "page": "directives",
              "anchor": "UntilDirective",
              "excludeFromTOC": true
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "AsyncDirective"
        },
        "heritage": [
          {
            "type": "reference",
            "name": "Directive",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          }
        ]
      },
      {
        "name": "AttributePart",
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/lit-html.d.ts",
                "line": 451
              }
            ],
            "signatures": [
              {
                "name": "new AttributePart",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                    "line": 451
                  }
                ],
                "parameters": [
                  {
                    "name": "element",
                    "type": {
                      "type": "reference",
                      "name": "HTMLElement",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "name",
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "strings",
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "parent",
                    "type": {
                      "type": "reference",
                      "name": "Disconnectable",
                      "package": "lit-html",
                      "location": {
                        "page": "misc",
                        "anchor": "Disconnectable"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "options",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "AttributePart",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "AttributePart"
                  }
                },
                "kindString": "Constructor signature"
              }
            ],
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.constructor"
            }
          },
          {
            "name": "element",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1664,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLElement",
              "package": "typescript",
              "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.element"
            }
          },
          {
            "name": "name",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1665,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.name"
            }
          },
          {
            "name": "options",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1666,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "name": "RenderOptions",
                  "package": "lit-html",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.options"
            }
          },
          {
            "name": "strings",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "If this attribute part represents an interpolation, this contains the\nstatic strings of the interpolation. For single-value, complete bindings,\nthis is undefined."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1673,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.strings"
            }
          },
          {
            "name": "type",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1659,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": 1
                },
                {
                  "type": "literal",
                  "value": 3
                },
                {
                  "type": "literal",
                  "value": 4
                },
                {
                  "type": "literal",
                  "value": 5
                }
              ]
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.type"
            }
          },
          {
            "name": "tagName",
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1685,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "getSignature": {
              "name": "tagName",
              "sources": [
                {
                  "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                  "line": 449
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "kindString": "Get signature"
            },
            "kindString": "Accessor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart.tagName"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1658,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "name": "BooleanAttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart"
            }
          },
          {
            "type": "reference",
            "name": "EventPart",
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart"
            }
          },
          {
            "type": "reference",
            "name": "PropertyPart",
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart"
            }
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "name": "Disconnectable",
            "package": "lit-html",
            "location": {
              "page": "misc",
              "anchor": "Disconnectable"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "AttributePart"
        }
      },
      {
        "name": "BooleanAttributePart",
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/lit-html.d.ts",
                "line": 451
              }
            ],
            "signatures": [
              {
                "name": "new BooleanAttributePart",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                    "line": 451
                  }
                ],
                "parameters": [
                  {
                    "name": "element",
                    "type": {
                      "type": "reference",
                      "name": "HTMLElement",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "name",
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "strings",
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "parent",
                    "type": {
                      "type": "reference",
                      "name": "Disconnectable",
                      "package": "lit-html",
                      "location": {
                        "page": "misc",
                        "anchor": "Disconnectable"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "options",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "BooleanAttributePart",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "BooleanAttributePart"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "AttributePart.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.constructor"
            }
          },
          {
            "name": "element",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1664,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLElement",
              "package": "typescript",
              "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.element",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.element"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.element"
            }
          },
          {
            "name": "name",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1665,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.name",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.name"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.name"
            }
          },
          {
            "name": "options",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1666,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "name": "RenderOptions",
                  "package": "lit-html",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.options",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.options"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.options"
            }
          },
          {
            "name": "strings",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "If this attribute part represents an interpolation, this contains the\nstatic strings of the interpolation. For single-value, complete bindings,\nthis is undefined."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1673,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.strings",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.strings"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.strings"
            }
          },
          {
            "name": "type",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1848,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 4
            },
            "defaultValue": "4",
            "overwrites": {
              "type": "reference",
              "name": "AttributePart.type",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.type"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.type"
            }
          },
          {
            "name": "tagName",
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1685,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "getSignature": {
              "name": "tagName",
              "sources": [
                {
                  "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                  "line": 449
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "AttributePart.tagName"
              },
              "kindString": "Get signature"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.tagName",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.tagName"
              }
            },
            "kindString": "Accessor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "BooleanAttributePart.tagName"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1847,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "AttributePart",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "BooleanAttributePart"
        },
        "heritage": [
          {
            "type": "reference",
            "name": "AttributePart",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ]
      },
      {
        "name": "ChildPart",
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/lit-html.d.ts",
                "line": 377
              }
            ],
            "signatures": [
              {
                "name": "new ChildPart",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                    "line": 377
                  }
                ],
                "parameters": [
                  {
                    "name": "startNode",
                    "type": {
                      "type": "reference",
                      "name": "ChildNode",
                      "package": "typescript"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "endNode",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "reference",
                          "name": "ChildNode",
                          "package": "typescript"
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "parent",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "ChildPart",
                          "package": "lit-html",
                          "location": {
                            "page": "custom-directives",
                            "anchor": "ChildPart"
                          }
                        },
                        {
                          "type": "reference",
                          "name": "TemplateInstance",
                          "package": "lit-html",
                          "location": {
                            "page": "misc",
                            "anchor": "TemplateInstance"
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "options",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "ChildPart",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                },
                "kindString": "Constructor signature"
              }
            ],
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.constructor"
            }
          },
          {
            "name": "options",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1207,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "name": "RenderOptions",
                  "package": "lit-html",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.options"
            }
          },
          {
            "name": "type",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1206,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 2
            },
            "defaultValue": "2",
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.type"
            }
          },
          {
            "name": "endNode",
            "comment": {
              "shortText": "The part's trailing marker node, if any. See `.parentNode` for more\ninformation."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1314,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "Node",
                  "package": "typescript"
                }
              ]
            },
            "getSignature": {
              "name": "endNode",
              "comment": {
                "shortText": "The part's trailing marker node, if any. See `.parentNode` for more\ninformation."
              },
              "sources": [
                {
                  "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                  "line": 406
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "name": "Node",
                    "package": "typescript"
                  }
                ]
              },
              "kindString": "Get signature"
            },
            "kindString": "Accessor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.endNode"
            }
          },
          {
            "name": "parentNode",
            "comment": {
              "shortText": "The parent node into which the part renders its content.",
              "text": "A ChildPart's content consists of a range of adjacent child nodes of\n`.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n`.endNode`).\n- If both `.startNode` and `.endNode` are non-null, then the part's content\nconsists of all siblings between `.startNode` and `.endNode`, exclusively.\n- If `.startNode` is non-null but `.endNode` is null, then the part's\ncontent consists of all siblings following `.startNode`, up to and\nincluding the last child of `.parentNode`. If `.endNode` is non-null, then\n`.startNode` will always be non-null.\n- If both `.endNode` and `.startNode` are null, then the part's content\nconsists of all child nodes of `.parentNode`.\n"
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1287,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Node",
              "package": "typescript"
            },
            "getSignature": {
              "name": "parentNode",
              "comment": {
                "shortText": "The parent node into which the part renders its content.",
                "text": "A ChildPart's content consists of a range of adjacent child nodes of\n`.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n`.endNode`).\n- If both `.startNode` and `.endNode` are non-null, then the part's content\nconsists of all siblings between `.startNode` and `.endNode`, exclusively.\n- If `.startNode` is non-null but `.endNode` is null, then the part's\ncontent consists of all siblings following `.startNode`, up to and\nincluding the last child of `.parentNode`. If `.endNode` is non-null, then\n`.startNode` will always be non-null.\n- If both `.endNode` and `.startNode` are null, then the part's content\nconsists of all child nodes of `.parentNode`.\n"
              },
              "sources": [
                {
                  "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                  "line": 396
                }
              ],
              "type": {
                "type": "reference",
                "name": "Node",
                "package": "typescript"
              },
              "kindString": "Get signature"
            },
            "kindString": "Accessor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.parentNode"
            }
          },
          {
            "name": "startNode",
            "comment": {
              "shortText": "The part's leading marker node, if any. See `.parentNode` for more\ninformation."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1306,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "Node",
                  "package": "typescript"
                }
              ]
            },
            "getSignature": {
              "name": "startNode",
              "comment": {
                "shortText": "The part's leading marker node, if any. See `.parentNode` for more\ninformation."
              },
              "sources": [
                {
                  "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                  "line": 401
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "name": "Node",
                    "package": "typescript"
                  }
                ]
              },
              "kindString": "Get signature"
            },
            "kindString": "Accessor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart.startNode"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1205,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "name": "RootPart",
            "location": {
              "page": "misc",
              "anchor": "RootPart"
            }
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "name": "Disconnectable",
            "package": "lit-html",
            "location": {
              "page": "misc",
              "anchor": "Disconnectable"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "ChildPart"
        }
      },
      {
        "name": "directive",
        "comment": {
          "shortText": "Creates a user-facing directive function from a Directive class. This\nfunction has the same parameters as the directive's render() method."
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 84,
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "signatures": [
          {
            "name": "directive",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                "line": 54
              }
            ],
            "typeParameter": [
              {
                "name": "C",
                "type": {
                  "type": "reference",
                  "name": "DirectiveClass",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "DirectiveClass"
                  }
                },
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "c",
                "type": {
                  "type": "reference",
                  "name": "C"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "name": "__type",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 54
                  }
                ],
                "signatures": [
                  {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                        "line": 54
                      }
                    ],
                    "parameters": [
                      {
                        "name": "values",
                        "flags": {
                          "isRest": true
                        },
                        "type": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "literal",
                                "value": "render"
                              },
                              "objectType": {
                                "type": "reference",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "name": "C"
                                  }
                                ],
                                "name": "InstanceType",
                                "package": "typescript"
                              }
                            }
                          ],
                          "name": "Parameters",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "C"
                        }
                      ],
                      "name": "DirectiveResult",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "DirectiveResult"
                      }
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Type literal"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "directive"
        }
      },
      {
        "name": "Directive",
        "flags": {
          "isAbstract": true
        },
        "comment": {
          "shortText": "Base class for creating custom directives. Users should extend this class,\nimplement `render` and/or `update`, and then pass their subclass to\n`directive`."
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/directive.d.ts",
                "line": 61
              }
            ],
            "signatures": [
              {
                "name": "new Directive",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 61
                  }
                ],
                "parameters": [
                  {
                    "name": "_partInfo",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "Directive",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "Directive"
                  }
                },
                "kindString": "Constructor signature"
              }
            ],
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "Directive.constructor"
            }
          },
          {
            "name": "render",
            "flags": {
              "isAbstract": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 137,
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "name": "render",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 63
                  }
                ],
                "parameters": [
                  {
                    "name": "props",
                    "flags": {
                      "isRest": true
                    },
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "Directive.render"
            }
          },
          {
            "name": "update",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 139,
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "name": "update",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 64
                  }
                ],
                "parameters": [
                  {
                    "name": "_part",
                    "type": {
                      "type": "reference",
                      "name": "Part",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "props",
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "Directive.update"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 97,
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "extendedBy": [
          {
            "type": "reference",
            "name": "AsyncDirective",
            "location": {
              "page": "custom-directives",
              "anchor": "AsyncDirective"
            }
          },
          {
            "type": "reference",
            "name": "CacheDirective",
            "location": {
              "page": "directives",
              "anchor": "CacheDirective",
              "excludeFromTOC": true
            }
          },
          {
            "type": "reference",
            "name": "ClassMapDirective",
            "location": {
              "page": "directives",
              "anchor": "ClassMapDirective",
              "excludeFromTOC": true
            }
          },
          {
            "type": "reference",
            "name": "GuardDirective",
            "location": {
              "page": "directives",
              "anchor": "GuardDirective",
              "excludeFromTOC": true
            }
          },
          {
            "type": "reference",
            "name": "Keyed",
            "location": {
              "page": "directives",
              "anchor": "Keyed",
              "excludeFromTOC": true
            }
          },
          {
            "type": "reference",
            "name": "LiveDirective",
            "location": {
              "page": "directives",
              "anchor": "LiveDirective",
              "excludeFromTOC": true
            }
          },
          {
            "type": "reference",
            "name": "RepeatDirective",
            "location": {
              "page": "directives",
              "anchor": "RepeatDirective",
              "excludeFromTOC": true
            }
          },
          {
            "type": "reference",
            "name": "StyleMapDirective",
            "location": {
              "page": "directives",
              "anchor": "StyleMapDirective",
              "excludeFromTOC": true
            }
          },
          {
            "type": "reference",
            "name": "TemplateContentDirective",
            "location": {
              "page": "directives",
              "anchor": "TemplateContentDirective",
              "excludeFromTOC": true
            }
          },
          {
            "type": "reference",
            "name": "UnsafeHTMLDirective",
            "location": {
              "page": "directives",
              "anchor": "UnsafeHTMLDirective",
              "excludeFromTOC": true
            }
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "name": "Disconnectable",
            "package": "lit-html",
            "location": {
              "page": "misc",
              "anchor": "Disconnectable"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "Directive"
        }
      },
      {
        "name": "ElementPart",
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/lit-html.d.ts",
                "line": 484
              }
            ],
            "signatures": [
              {
                "name": "new ElementPart",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                    "line": 484
                  }
                ],
                "parameters": [
                  {
                    "name": "element",
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "parent",
                    "type": {
                      "type": "reference",
                      "name": "Disconnectable",
                      "package": "lit-html",
                      "location": {
                        "page": "misc",
                        "anchor": "Disconnectable"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "options",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "ElementPart",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ElementPart"
                  }
                },
                "kindString": "Constructor signature"
              }
            ],
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPart.constructor"
            }
          },
          {
            "name": "element",
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1991,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Element",
              "package": "typescript",
              "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPart.element"
            }
          },
          {
            "name": "options",
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1988,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "name": "RenderOptions",
                  "package": "lit-html",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPart.options"
            }
          },
          {
            "name": "type",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1974,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 6
            },
            "defaultValue": "6",
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPart.type"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1973,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "name": "Disconnectable",
            "package": "lit-html",
            "location": {
              "page": "misc",
              "anchor": "Disconnectable"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "ElementPart"
        }
      },
      {
        "name": "EventPart",
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/lit-html.d.ts",
                "line": 475
              }
            ],
            "signatures": [
              {
                "name": "new EventPart",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                    "line": 475
                  }
                ],
                "parameters": [
                  {
                    "name": "element",
                    "type": {
                      "type": "reference",
                      "name": "HTMLElement",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "name",
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "strings",
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "parent",
                    "type": {
                      "type": "reference",
                      "name": "Disconnectable",
                      "package": "lit-html",
                      "location": {
                        "page": "misc",
                        "anchor": "Disconnectable"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "options",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "EventPart",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "EventPart"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "AttributePart.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "AttributePart.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.constructor"
            }
          },
          {
            "name": "element",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1664,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLElement",
              "package": "typescript",
              "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.element",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.element"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.element"
            }
          },
          {
            "name": "name",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1665,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.name",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.name"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.name"
            }
          },
          {
            "name": "options",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1666,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "name": "RenderOptions",
                  "package": "lit-html",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.options",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.options"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.options"
            }
          },
          {
            "name": "strings",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "If this attribute part represents an interpolation, this contains the\nstatic strings of the interpolation. For single-value, complete bindings,\nthis is undefined."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1673,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.strings",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.strings"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.strings"
            }
          },
          {
            "name": "type",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1882,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 5
            },
            "defaultValue": "5",
            "overwrites": {
              "type": "reference",
              "name": "AttributePart.type",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.type"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.type"
            }
          },
          {
            "name": "tagName",
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1685,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "getSignature": {
              "name": "tagName",
              "sources": [
                {
                  "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                  "line": 449
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "AttributePart.tagName"
              },
              "kindString": "Get signature"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.tagName",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.tagName"
              }
            },
            "kindString": "Accessor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.tagName"
            }
          },
          {
            "name": "handleEvent",
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1963,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "signatures": [
              {
                "name": "handleEvent",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                    "line": 476
                  }
                ],
                "parameters": [
                  {
                    "name": "event",
                    "type": {
                      "type": "reference",
                      "name": "Event",
                      "package": "typescript"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "EventPart.handleEvent"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1881,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "AttributePart",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "EventPart"
        },
        "heritage": [
          {
            "type": "reference",
            "name": "AttributePart",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ]
      },
      {
        "name": "PartType",
        "flags": {
          "isConst": true
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 42,
            "moduleSpecifier": "lit-html/directive.js"
          },
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 51,
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "name": "__type",
            "children": [
              {
                "name": "ATTRIBUTE",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 23
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 1
                },
                "kindString": "Property"
              },
              {
                "name": "BOOLEAN_ATTRIBUTE",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 26
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 4
                },
                "kindString": "Property"
              },
              {
                "name": "CHILD",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 24
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 2
                },
                "kindString": "Property"
              },
              {
                "name": "ELEMENT",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 28
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 6
                },
                "kindString": "Property"
              },
              {
                "name": "EVENT",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 27
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 5
                },
                "kindString": "Property"
              },
              {
                "name": "PROPERTY",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 25
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 3
                },
                "kindString": "Property"
              }
            ],
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                "line": 22
              }
            ],
            "kindString": "Type literal"
          }
        },
        "kindString": "Variable",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "PartType"
        }
      },
      {
        "name": "PropertyPart",
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/lit-html.d.ts",
                "line": 451
              }
            ],
            "signatures": [
              {
                "name": "new PropertyPart",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                    "line": 451
                  }
                ],
                "parameters": [
                  {
                    "name": "element",
                    "type": {
                      "type": "reference",
                      "name": "HTMLElement",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "name",
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "strings",
                    "type": {
                      "type": "typeOperator",
                      "operator": "readonly",
                      "target": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "parent",
                    "type": {
                      "type": "reference",
                      "name": "Disconnectable",
                      "package": "lit-html",
                      "location": {
                        "page": "misc",
                        "anchor": "Disconnectable"
                      }
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "options",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "PropertyPart",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "PropertyPart"
                  }
                },
                "inheritedFrom": {
                  "type": "reference",
                  "name": "AttributePart.constructor"
                },
                "kindString": "Constructor signature"
              }
            ],
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.constructor",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.constructor"
              }
            },
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.constructor"
            }
          },
          {
            "name": "element",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1664,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLElement",
              "package": "typescript",
              "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.element",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.element"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.element"
            }
          },
          {
            "name": "name",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1665,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.name",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.name"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.name"
            }
          },
          {
            "name": "options",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1666,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "name": "RenderOptions",
                  "package": "lit-html",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.options",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.options"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.options"
            }
          },
          {
            "name": "strings",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "comment": {
              "shortText": "If this attribute part represents an interpolation, this contains the\nstatic strings of the interpolation. For single-value, complete bindings,\nthis is undefined."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1673,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.strings",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.strings"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.strings"
            }
          },
          {
            "name": "type",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1820,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 3
            },
            "defaultValue": "3",
            "overwrites": {
              "type": "reference",
              "name": "AttributePart.type",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.type"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.type"
            }
          },
          {
            "name": "tagName",
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1685,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "getSignature": {
              "name": "tagName",
              "sources": [
                {
                  "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                  "line": 449
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "AttributePart.tagName"
              },
              "kindString": "Get signature"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "AttributePart.tagName",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart.tagName"
              }
            },
            "kindString": "Accessor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "PropertyPart.tagName"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1819,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "AttributePart",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "PropertyPart"
        },
        "heritage": [
          {
            "type": "reference",
            "name": "AttributePart",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          }
        ]
      },
      {
        "name": "AttributePartInfo",
        "children": [
          {
            "name": "name",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 64,
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePartInfo.name"
            }
          },
          {
            "name": "strings",
            "flags": {
              "isOptional": true,
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 63,
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "typeOperator",
              "operator": "readonly",
              "target": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePartInfo.strings"
            }
          },
          {
            "name": "tagName",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 65,
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePartInfo.tagName"
            }
          },
          {
            "name": "type",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 58,
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": 1
                },
                {
                  "type": "literal",
                  "value": 3
                },
                {
                  "type": "literal",
                  "value": 4
                },
                {
                  "type": "literal",
                  "value": 5
                }
              ]
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePartInfo.type"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 57,
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "AttributePartInfo"
        }
      },
      {
        "name": "ChildPartInfo",
        "children": [
          {
            "name": "type",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 54,
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 2
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPartInfo.type"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 53,
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "ChildPartInfo"
        }
      },
      {
        "name": "DirectiveClass",
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 19,
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "signatures": [
              {
                "name": "new DirectiveClass",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive.d.ts",
                    "line": 9
                  }
                ],
                "parameters": [
                  {
                    "name": "part",
                    "type": {
                      "type": "reference",
                      "name": "PartInfo",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "PartInfo"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "Directive",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "Directive"
                  }
                },
                "kindString": "Constructor signature"
              }
            ],
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "DirectiveClass.constructor"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 19,
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "DirectiveClass"
        }
      },
      {
        "name": "DirectiveParameters",
        "comment": {
          "shortText": "This utility type extracts the signature of a directive class's render()\nmethod so we can use it for the type of the generated directive function."
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 27,
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "typeParameters": [
          {
            "name": "C",
            "type": {
              "type": "reference",
              "name": "Directive",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "Directive"
              }
            },
            "kindString": "Type parameter"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "indexedAccess",
              "indexType": {
                "type": "literal",
                "value": "render"
              },
              "objectType": {
                "type": "reference",
                "name": "C"
              }
            }
          ],
          "name": "Parameters",
          "package": "typescript"
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "DirectiveParameters"
        }
      },
      {
        "name": "DirectiveResult",
        "comment": {
          "shortText": "A generated directive function doesn't evaluate the directive, but just\nreturns a DirectiveResult object that captures the arguments."
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 33,
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "typeParameters": [
          {
            "name": "C",
            "type": {
              "type": "reference",
              "name": "DirectiveClass",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveClass"
              }
            },
            "default": {
              "type": "reference",
              "name": "DirectiveClass",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "DirectiveClass"
              }
            },
            "kindString": "Type parameter"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "DirectiveResult"
        }
      },
      {
        "name": "ElementPartInfo",
        "children": [
          {
            "name": "type",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/directive.ts",
                "line": 69,
                "moduleSpecifier": "lit-html/directive.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 6
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/async-directive.ts",
                "line": 1,
                "moduleSpecifier": "lit/async-directive.js"
              }
            ],
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPartInfo.type"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 68,
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "ElementPartInfo"
        }
      },
      {
        "name": "Part",
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1196,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "ChildPart",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart"
              }
            },
            {
              "type": "reference",
              "name": "AttributePart",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePart"
              }
            },
            {
              "type": "reference",
              "name": "PropertyPart",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "PropertyPart"
              }
            },
            {
              "type": "reference",
              "name": "BooleanAttributePart",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "BooleanAttributePart"
              }
            },
            {
              "type": "reference",
              "name": "ElementPart",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "ElementPart"
              }
            },
            {
              "type": "reference",
              "name": "EventPart",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "EventPart"
              }
            }
          ]
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "Part"
        }
      },
      {
        "name": "PartInfo",
        "comment": {
          "shortText": "Information about the part a directive is bound to.",
          "text": "This is useful for checking that a directive is attached to a valid part,\nsuch as with directive that can only be used on attribute bindings.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive.ts",
            "line": 78,
            "moduleSpecifier": "lit-html/directive.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "reference",
              "name": "ChildPartInfo",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPartInfo"
              }
            },
            {
              "type": "reference",
              "name": "AttributePartInfo",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "AttributePartInfo"
              }
            },
            {
              "type": "reference",
              "name": "ElementPartInfo",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "ElementPartInfo"
              }
            }
          ]
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/async-directive.ts",
            "line": 1,
            "moduleSpecifier": "lit/async-directive.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "PartInfo"
        }
      },
      {
        "name": "clearPart",
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 226,
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "name": "clearPart",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive-helpers.d.ts",
                "line": 106
              }
            ],
            "parameters": [
              {
                "name": "part",
                "type": {
                  "type": "reference",
                  "name": "ChildPart",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 1,
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "clearPart"
        }
      },
      {
        "name": "getCommittedValue",
        "comment": {
          "shortText": "Returns the committed value of a ChildPart.",
          "text": "The committed value is used for change detection and efficient updates of\nthe part. It can differ from the value set by the template or directive in\ncases where the template value is transformed before being committed.\n- `TemplateResult`s are committed as a `TemplateInstance`\n- Iterables are committed as `Array<ChildPart>`\n- All other types are committed as the template value or value returned or\n  set by a directive.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 208,
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "name": "getCommittedValue",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive-helpers.d.ts",
                "line": 99
              }
            ],
            "parameters": [
              {
                "name": "part",
                "type": {
                  "type": "reference",
                  "name": "ChildPart",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 1,
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "getCommittedValue"
        }
      },
      {
        "name": "getDirectiveClass",
        "comment": {
          "shortText": "Retrieves the Directive class for a DirectiveResult"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 67,
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "name": "getDirectiveClass",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive-helpers.d.ts",
                "line": 33
              }
            ],
            "parameters": [
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "name": "DirectiveClass",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "DirectiveClass"
                  }
                }
              ]
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 1,
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "getDirectiveClass"
        }
      },
      {
        "name": "insertPart",
        "comment": {
          "shortText": "Inserts a ChildPart into the given container ChildPart's DOM, either at the\nend of the container ChildPart, or before the optional `refPart`.",
          "text": "This does not add the part to the containerPart's committed value. That must\nbe done by callers.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 96,
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "name": "insertPart",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive-helpers.d.ts",
                "line": 55
              }
            ],
            "parameters": [
              {
                "name": "containerPart",
                "comment": {
                  "shortText": "Part within which to add the new ChildPart"
                },
                "type": {
                  "type": "reference",
                  "name": "ChildPart",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                },
                "kindString": "Parameter"
              },
              {
                "name": "refPart",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Part before which to add the new ChildPart; when omitted the\n    part added to the end of the `containerPart`"
                },
                "type": {
                  "type": "reference",
                  "name": "ChildPart",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                },
                "kindString": "Parameter"
              },
              {
                "name": "part",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Part to insert, or undefined to create a new part"
                },
                "type": {
                  "type": "reference",
                  "name": "ChildPart",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "name": "ChildPart",
              "package": "lit-html",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 1,
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "insertPart"
        }
      },
      {
        "name": "isDirectiveResult",
        "comment": {
          "shortText": "Tests if a value is a DirectiveResult."
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 60,
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "name": "isDirectiveResult",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive-helpers.d.ts",
                "line": 29
              }
            ],
            "parameters": [
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "predicate",
              "name": "value",
              "asserts": false,
              "targetType": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "name": "DirectiveClass",
                    "package": "lit-html",
                    "location": {
                      "page": "custom-directives",
                      "anchor": "DirectiveClass"
                    }
                  }
                ],
                "name": "DirectiveResult",
                "package": "lit-html",
                "location": {
                  "page": "custom-directives",
                  "anchor": "DirectiveResult"
                }
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 1,
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isDirectiveResult"
        }
      },
      {
        "name": "isPrimitive",
        "comment": {
          "shortText": "Tests if a value is a primitive value.",
          "text": "See https://tc39.github.io/ecma262/#sec-typeof-operator\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 34,
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "name": "isPrimitive",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive-helpers.d.ts",
                "line": 16
              }
            ],
            "parameters": [
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "predicate",
              "name": "value",
              "asserts": false,
              "targetType": {
                "type": "reference",
                "name": "Primitive",
                "package": "lit-html"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 1,
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isPrimitive"
        }
      },
      {
        "name": "isSingleExpression",
        "comment": {
          "shortText": "Tests whether a part has only a single-expression with no strings to\ninterpolate between.",
          "text": "Only AttributePart and PropertyPart can have multiple expressions.\nMulti-expression parts have a `strings` property and single-expression\nparts do not.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 79,
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "name": "isSingleExpression",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive-helpers.d.ts",
                "line": 42
              }
            ],
            "parameters": [
              {
                "name": "part",
                "type": {
                  "type": "reference",
                  "name": "PartInfo",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "PartInfo"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 1,
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isSingleExpression"
        }
      },
      {
        "name": "isTemplateResult",
        "comment": {
          "shortText": "Tests if a value is a TemplateResult."
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 48,
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "name": "isTemplateResult",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive-helpers.d.ts",
                "line": 25
              }
            ],
            "parameters": [
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              },
              {
                "name": "type",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "reference",
                  "name": "TemplateResultType",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "TemplateResultType"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "predicate",
              "name": "value",
              "asserts": false,
              "targetType": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "name": "ResultType",
                    "package": "lit-html"
                  }
                ],
                "name": "TemplateResult",
                "package": "lit-html",
                "location": {
                  "page": "templates",
                  "anchor": "TemplateResult"
                }
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 1,
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "isTemplateResult"
        }
      },
      {
        "name": "removePart",
        "comment": {
          "shortText": "Removes a ChildPart from the DOM, including any of its content."
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 215,
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "name": "removePart",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive-helpers.d.ts",
                "line": 105
              }
            ],
            "parameters": [
              {
                "name": "part",
                "comment": {
                  "shortText": "The Part to remove"
                },
                "type": {
                  "type": "reference",
                  "name": "ChildPart",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "void"
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 1,
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "removePart"
        }
      },
      {
        "name": "setChildPartValue",
        "comment": {
          "shortText": "Sets the value of a Part.",
          "text": "Note that this should only be used to set/update the value of user-created\nparts (i.e. those created using `insertPart`); it should not be used\nby directives to set the value of the directive's container part. Directives\nshould return a value from `update`/`render` to update their part state.\nFor directives that require setting their part value asynchronously, they\nshould extend `AsyncDirective` and call `this.setValue()`.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 167,
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "name": "setChildPartValue",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive-helpers.d.ts",
                "line": 72
              }
            ],
            "typeParameter": [
              {
                "name": "T",
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "ChildPart",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "ChildPart"
                  }
                },
                "kindString": "Type parameter"
              }
            ],
            "parameters": [
              {
                "name": "part",
                "comment": {
                  "shortText": "Part to set"
                },
                "type": {
                  "type": "reference",
                  "name": "T"
                },
                "kindString": "Parameter"
              },
              {
                "name": "value",
                "comment": {
                  "shortText": "Value to set"
                },
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              },
              {
                "name": "directiveParent",
                "flags": {
                  "isOptional": true
                },
                "comment": {
                  "shortText": "Used internally; should not be set by user"
                },
                "type": {
                  "type": "reference",
                  "name": "DirectiveParent",
                  "package": "lit-html",
                  "location": {
                    "page": "misc",
                    "anchor": "DirectiveParent"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "name": "T"
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 1,
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "setChildPartValue"
        }
      },
      {
        "name": "setCommittedValue",
        "comment": {
          "shortText": "Sets the committed value of a ChildPart directly without triggering the\ncommit stage of the part.",
          "text": "This is useful in cases where a directive needs to update the part such\nthat the next update detects a value change or not. When value is omitted,\nthe next update will be guaranteed to be detected as a change.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 191,
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "signatures": [
          {
            "name": "setCommittedValue",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive-helpers.d.ts",
                "line": 84
              }
            ],
            "parameters": [
              {
                "name": "part",
                "type": {
                  "type": "reference",
                  "name": "Part",
                  "package": "lit-html",
                  "location": {
                    "page": "custom-directives",
                    "anchor": "Part"
                  }
                },
                "kindString": "Parameter"
              },
              {
                "name": "value",
                "flags": {
                  "isOptional": true
                },
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 1,
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "setCommittedValue"
        }
      },
      {
        "name": "TemplateResultType",
        "flags": {
          "isConst": true
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 37,
            "moduleSpecifier": "lit-html/directive-helpers.js"
          },
          {
            "fileName": "packages/lit-html/src/directive-helpers.ts",
            "line": 42,
            "moduleSpecifier": "lit-html/directive-helpers.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "name": "__type",
            "children": [
              {
                "name": "HTML",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive-helpers.d.ts",
                    "line": 18
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 1
                },
                "kindString": "Property"
              },
              {
                "name": "SVG",
                "flags": {
                  "isReadonly": true
                },
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive-helpers.d.ts",
                    "line": 19
                  }
                ],
                "type": {
                  "type": "literal",
                  "value": 2
                },
                "kindString": "Property"
              }
            ],
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/directive-helpers.d.ts",
                "line": 17
              }
            ],
            "kindString": "Type literal"
          }
        },
        "kindString": "Variable",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/directive-helpers.ts",
            "line": 1,
            "moduleSpecifier": "lit/directive-helpers.js"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "TemplateResultType"
        }
      },
      {
        "name": "noChange",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A sentinel value that signals that a value was handled by a directive and\nshould not be written to the DOM."
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 564,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "typeOperator",
          "operator": "unique",
          "target": {
            "type": "intrinsic",
            "name": "symbol"
          }
        },
        "kindString": "Variable",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "custom-directives",
          "anchor": "noChange"
        }
      }
    ]
  },
  {
    "slug": "static-html",
    "title": "Static HTML",
    "versionLinks": {
      "v1": "api/lit-html/templates/"
    },
    "repo": "lit/lit",
    "commit": "12109c25997ef03180d7eefe05c64e0fb20dd2b0",
    "items": [
      {
        "name": "html",
        "comment": {
          "shortText": "Interprets a template literal as an HTML template that can efficiently\nrender to and update a container.",
          "text": "Includes static value support from `lit-html/static.js`.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 172,
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "signatures": [
          {
            "name": "html",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/static.d.ts",
                "line": 73
              }
            ],
            "parameters": [
              {
                "name": "strings",
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              },
              {
                "name": "values",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "ResultType",
                  "package": "lit-html"
                }
              ],
              "name": "TemplateResult",
              "package": "lit-html",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 1,
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "html"
        }
      },
      {
        "name": "literal",
        "comment": {
          "shortText": "Tags a string literal so that it behaves like part of the static template\nstrings instead of a dynamic value.",
          "text": "The only values that may be used in template expressions are other tagged\n`literal` results or `unsafeStatic` values (note that untrusted content\nshould never be passed to `unsafeStatic`).\nUsers must take care to ensure that adding the static string to the template\nresults in well-formed HTML, or else templates may break unexpectedly.\nStatic values can be changed, but they will cause a complete re-render since\nthey effectively create a new template.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 93,
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "signatures": [
          {
            "name": "literal",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/static.d.ts",
                "line": 62
              }
            ],
            "parameters": [
              {
                "name": "strings",
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              },
              {
                "name": "values",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "name": "StaticValue",
              "package": "lit-html",
              "location": {
                "page": "static-html",
                "anchor": "StaticValue"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 1,
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "literal"
        }
      },
      {
        "name": "svg",
        "comment": {
          "shortText": "Interprets a template literal as an SVG template that can efficiently\nrender to and update a container.",
          "text": "Includes static value support from `lit-html/static.js`.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 180,
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "signatures": [
          {
            "name": "svg",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/static.d.ts",
                "line": 80
              }
            ],
            "parameters": [
              {
                "name": "strings",
                "type": {
                  "type": "reference",
                  "name": "TemplateStringsArray",
                  "package": "typescript"
                },
                "kindString": "Parameter"
              },
              {
                "name": "values",
                "flags": {
                  "isRest": true
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "ResultType",
                  "package": "lit-html"
                }
              ],
              "name": "TemplateResult",
              "package": "lit-html",
              "location": {
                "page": "templates",
                "anchor": "TemplateResult"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 1,
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "svg"
        }
      },
      {
        "name": "unsafeStatic",
        "comment": {
          "shortText": "Wraps a string so that it behaves like part of the static template\nstrings instead of a dynamic value.",
          "text": "Users must take care to ensure that adding the static string to the template\nresults in well-formed HTML, or else templates may break unexpectedly.\nNote that this function is unsafe to use on untrusted content, as it will be\ndirectly parsed into HTML. Do not pass user input to this function\nwithout sanitizing it.\nStatic values can be changed, but they will cause a complete re-render\nsince they effectively create a new template.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 63,
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "signatures": [
          {
            "name": "unsafeStatic",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/static.d.ts",
                "line": 47
              }
            ],
            "parameters": [
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reference",
              "name": "StaticValue",
              "package": "lit-html",
              "location": {
                "page": "static-html",
                "anchor": "StaticValue"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 1,
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "unsafeStatic"
        }
      },
      {
        "name": "withStatic",
        "comment": {
          "shortText": "Wraps a lit-html template tag (`html` or `svg`) to add static value support."
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 109,
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "signatures": [
          {
            "name": "withStatic",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/static.d.ts",
                "line": 66
              }
            ],
            "parameters": [
              {
                "name": "coreTag",
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reflection",
                      "declaration": {
                        "name": "__type",
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                            "line": 226
                          }
                        ],
                        "signatures": [
                          {
                            "name": "__type",
                            "comment": {
                              "summary": [
                                {
                                  "text": "Interprets a template literal as an HTML template that can efficiently\nrender to and update a container.\n\n"
                                },
                                {
                                  "text": "```ts\nconst header = (title: string) => html`<h1>${title}</h1>`;\n```"
                                },
                                {
                                  "text": "\n\nThe "
                                },
                                {
                                  "text": "`html`"
                                },
                                {
                                  "text": " tag returns a description of the DOM to render as a value. It is\nlazy, meaning no work is done until the template is rendered. When rendering,\nif a template comes from the same expression as a previously rendered result,\nit's efficiently updated instead of replaced."
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                                "line": 226
                              }
                            ],
                            "parameters": [
                              {
                                "name": "strings",
                                "type": {
                                  "type": "reference",
                                  "name": "TemplateStringsArray",
                                  "package": "typescript"
                                },
                                "kindString": "Parameter"
                              },
                              {
                                "name": "values",
                                "flags": {
                                  "isRest": true
                                },
                                "type": {
                                  "type": "array",
                                  "elementType": {
                                    "type": "intrinsic",
                                    "name": "unknown"
                                  }
                                },
                                "kindString": "Parameter"
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "literal",
                                  "value": 1
                                }
                              ],
                              "name": "TemplateResult",
                              "package": "lit-html",
                              "location": {
                                "page": "templates",
                                "anchor": "TemplateResult"
                              }
                            },
                            "kindString": "Call signature"
                          }
                        ],
                        "kindString": "Type literal"
                      }
                    },
                    {
                      "type": "reflection",
                      "declaration": {
                        "name": "__type",
                        "sources": [
                          {
                            "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                            "line": 250
                          }
                        ],
                        "signatures": [
                          {
                            "name": "__type",
                            "comment": {
                              "summary": [
                                {
                                  "text": "Interprets a template literal as an SVG fragment that can efficiently\nrender to and update a container.\n\n"
                                },
                                {
                                  "text": "```ts\nconst rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n\nconst myImage = html`\n  <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n    ${rect}\n  </svg>`;\n```"
                                },
                                {
                                  "text": "\n\nThe "
                                },
                                {
                                  "text": "`svg`"
                                },
                                {
                                  "text": " *tag function* should only be used for SVG fragments, or elements\nthat would be contained **inside** an "
                                },
                                {
                                  "text": "`<svg>`"
                                },
                                {
                                  "text": " HTML element. A common error is\nplacing an "
                                },
                                {
                                  "text": "`<svg>`"
                                },
                                {
                                  "text": " *element* in a template tagged with the "
                                },
                                {
                                  "text": "`svg`"
                                },
                                {
                                  "text": " tag\nfunction. The "
                                },
                                {
                                  "text": "`<svg>`"
                                },
                                {
                                  "text": " element is an HTML element and should be used within a\ntemplate tagged with the "
                                },
                                {
                                  "tag": "@linkcode",
                                  "text": "html",
                                  "tsLinkText": "",
                                  "location": {
                                    "page": "templates",
                                    "anchor": "html"
                                  }
                                },
                                {
                                  "text": " tag function.\n\nIn LitElement usage, it's invalid to return an SVG fragment from the\n"
                                },
                                {
                                  "text": "`render()`"
                                },
                                {
                                  "text": " method, as the SVG fragment will be contained within the element's\nshadow root and thus cannot be used within an "
                                },
                                {
                                  "text": "`<svg>`"
                                },
                                {
                                  "text": " HTML element."
                                }
                              ]
                            },
                            "sources": [
                              {
                                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                                "line": 250
                              }
                            ],
                            "parameters": [
                              {
                                "name": "strings",
                                "type": {
                                  "type": "reference",
                                  "name": "TemplateStringsArray",
                                  "package": "typescript"
                                },
                                "kindString": "Parameter"
                              },
                              {
                                "name": "values",
                                "flags": {
                                  "isRest": true
                                },
                                "type": {
                                  "type": "array",
                                  "elementType": {
                                    "type": "intrinsic",
                                    "name": "unknown"
                                  }
                                },
                                "kindString": "Parameter"
                              }
                            ],
                            "type": {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "literal",
                                  "value": 2
                                }
                              ],
                              "name": "TemplateResult",
                              "package": "lit-html",
                              "location": {
                                "page": "templates",
                                "anchor": "TemplateResult"
                              }
                            },
                            "kindString": "Call signature"
                          }
                        ],
                        "kindString": "Type literal"
                      }
                    }
                  ]
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "name": "__type",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/static.d.ts",
                    "line": 66
                  }
                ],
                "signatures": [
                  {
                    "name": "__type",
                    "sources": [
                      {
                        "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/static.d.ts",
                        "line": 66
                      }
                    ],
                    "parameters": [
                      {
                        "name": "strings",
                        "type": {
                          "type": "reference",
                          "name": "TemplateStringsArray",
                          "package": "typescript"
                        },
                        "kindString": "Parameter"
                      },
                      {
                        "name": "values",
                        "flags": {
                          "isRest": true
                        },
                        "type": {
                          "type": "array",
                          "elementType": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        },
                        "kindString": "Parameter"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "reference",
                          "name": "ResultType",
                          "package": "lit-html"
                        }
                      ],
                      "name": "TemplateResult",
                      "package": "lit-html",
                      "location": {
                        "page": "templates",
                        "anchor": "TemplateResult"
                      }
                    },
                    "kindString": "Call signature"
                  }
                ],
                "kindString": "Type literal"
              }
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 1,
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "withStatic"
        }
      },
      {
        "name": "StaticValue",
        "children": [
          {
            "name": "r",
            "comment": {
              "shortText": "A value that can't be decoded from ordinary JSON, make it harder for\na attacker-controlled data that goes through JSON.parse to produce a valid\nStaticValue."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/static.ts",
                "line": 21,
                "moduleSpecifier": "lit-html/static.js"
              }
            ],
            "type": {
              "type": "query",
              "queryType": {
                "type": "reference",
                "name": "brand",
                "package": "lit-html"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/static-html.ts",
                "line": 1,
                "moduleSpecifier": "lit/static-html.js"
              }
            ],
            "location": {
              "page": "static-html",
              "anchor": "StaticValue.r"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/static.ts",
            "line": 12,
            "moduleSpecifier": "lit-html/static.js"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/static-html.ts",
            "line": 1,
            "moduleSpecifier": "lit/static-html.js"
          }
        ],
        "location": {
          "page": "static-html",
          "anchor": "StaticValue"
        }
      }
    ]
  },
  {
    "slug": "controllers",
    "title": "Controllers",
    "versionLinks": {
      "v1": "api/lit-element/LitElement/"
    },
    "repo": "lit/lit",
    "commit": "12109c25997ef03180d7eefe05c64e0fb20dd2b0",
    "items": [
      {
        "name": "ReactiveController",
        "comment": {
          "shortText": "A Reactive Controller is an object that enables sub-component code\norganization and reuse by aggregating the state, behavior, and lifecycle\nhooks related to a single feature.",
          "text": "Controllers are added to a host component, or other object that implements\nthe `ReactiveControllerHost` interface, via the `addController()` method.\nThey can hook their host components's lifecycle by implementing one or more\nof the lifecycle callbacks, or initiate an update of the host component by\ncalling `requestUpdate()` on the host.\n"
        },
        "children": [
          {
            "name": "hostConnected",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Called when the host is connected to the component tree. For custom\nelement hosts, this corresponds to the `connectedCallback()` lifecycle,\nwhich is only called when the component is connected to the document."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-controller.ts",
                "line": 59,
                "moduleSpecifier": "reactive-element/reactive-controller.js"
              }
            ],
            "signatures": [
              {
                "name": "hostConnected",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-controller.d.ts",
                    "line": 54
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveController.hostConnected"
            }
          },
          {
            "name": "hostDisconnected",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Called when the host is disconnected from the component tree. For custom\nelement hosts, this corresponds to the `disconnectedCallback()` lifecycle,\nwhich is called the host or an ancestor component is disconnected from the\ndocument."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-controller.ts",
                "line": 67,
                "moduleSpecifier": "reactive-element/reactive-controller.js"
              }
            ],
            "signatures": [
              {
                "name": "hostDisconnected",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-controller.d.ts",
                    "line": 61
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveController.hostDisconnected"
            }
          },
          {
            "name": "hostUpdate",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Called during the client-side host update, just before the host calls\nits own update.",
              "text": "Code in `update()` can depend on the DOM as it is not called in\nserver-side rendering.\n"
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-controller.ts",
                "line": 76,
                "moduleSpecifier": "reactive-element/reactive-controller.js"
              }
            ],
            "signatures": [
              {
                "name": "hostUpdate",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-controller.d.ts",
                    "line": 69
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveController.hostUpdate"
            }
          },
          {
            "name": "hostUpdated",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Called after a host update, just before the host calls firstUpdated and\nupdated. It is not called in server-side rendering."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-controller.ts",
                "line": 83,
                "moduleSpecifier": "reactive-element/reactive-controller.js"
              }
            ],
            "signatures": [
              {
                "name": "hostUpdated",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-controller.d.ts",
                    "line": 75
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveController.hostUpdated"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-controller.ts",
            "line": 53,
            "moduleSpecifier": "reactive-element/reactive-controller.js"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "controllers",
          "anchor": "ReactiveController"
        }
      },
      {
        "name": "ReactiveControllerHost",
        "comment": {
          "shortText": "An object that can host Reactive Controllers and call their lifecycle\ncallbacks."
        },
        "children": [
          {
            "name": "updateComplete",
            "flags": {
              "isReadonly": true
            },
            "comment": {
              "blockTags": [
                {
                  "tag": "@returns",
                  "content": [
                    {
                      "text": "A promise of a boolean that indicates if the update resolved\n    without triggering another update."
                    }
                  ]
                }
              ],
              "shortText": "Returns a Promise that resolves when the host has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-controller.ts",
                "line": 39,
                "moduleSpecifier": "reactive-element/reactive-controller.js"
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              ],
              "name": "Promise",
              "package": "typescript"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveControllerHost.updateComplete"
            }
          },
          {
            "name": "addController",
            "comment": {
              "shortText": "Adds a controller to the host, which sets up the controller's lifecycle\nmethods to be called with the host's lifecycle."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-controller.ts",
                "line": 16,
                "moduleSpecifier": "reactive-element/reactive-controller.js"
              }
            ],
            "signatures": [
              {
                "name": "addController",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-controller.d.ts",
                    "line": 15
                  }
                ],
                "parameters": [
                  {
                    "name": "controller",
                    "type": {
                      "type": "reference",
                      "name": "ReactiveController",
                      "package": "@lit/reactive-element",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveController"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveControllerHost.addController"
            }
          },
          {
            "name": "removeController",
            "comment": {
              "shortText": "Removes a controller from the host."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-controller.ts",
                "line": 21,
                "moduleSpecifier": "reactive-element/reactive-controller.js"
              }
            ],
            "signatures": [
              {
                "name": "removeController",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-controller.d.ts",
                    "line": 19
                  }
                ],
                "parameters": [
                  {
                    "name": "controller",
                    "type": {
                      "type": "reference",
                      "name": "ReactiveController",
                      "package": "@lit/reactive-element",
                      "location": {
                        "page": "controllers",
                        "anchor": "ReactiveController"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveControllerHost.removeController"
            }
          },
          {
            "name": "requestUpdate",
            "comment": {
              "shortText": "Requests a host update which is processed asynchronously. The update can\nbe waited on via the `updateComplete` property."
            },
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-controller.ts",
                "line": 27,
                "moduleSpecifier": "reactive-element/reactive-controller.js"
              }
            ],
            "signatures": [
              {
                "name": "requestUpdate",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-controller.d.ts",
                    "line": 24
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "controllers",
              "anchor": "ReactiveControllerHost.requestUpdate"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-controller.ts",
            "line": 11,
            "moduleSpecifier": "reactive-element/reactive-controller.js"
          }
        ],
        "implementedBy": [
          {
            "type": "reference",
            "name": "ReactiveElement",
            "location": {
              "page": "ReactiveElement",
              "anchor": "ReactiveElement"
            }
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "controllers",
          "anchor": "ReactiveControllerHost"
        }
      }
    ]
  },
  {
    "slug": "misc",
    "title": "Misc",
    "versionLinks": {
      "v1": "api/lit-element/LitElement/"
    },
    "repo": "lit/lit",
    "commit": "12109c25997ef03180d7eefe05c64e0fb20dd2b0",
    "items": [
      {
        "name": "defaultConverter",
        "flags": {
          "isConst": true
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 297,
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "type": {
          "type": "reference",
          "name": "ComplexAttributeConverter",
          "package": "@lit/reactive-element",
          "location": {
            "page": "ReactiveElement",
            "anchor": "ComplexAttributeConverter"
          }
        },
        "kindString": "Variable",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "defaultConverter"
        }
      },
      {
        "name": "isServer",
        "flags": {
          "isConst": true
        },
        "comment": {
          "shortText": "A boolean that will be `true` in server environments like Node, and `false`\nin browser environments. Note that your server environment or toolchain must\nsupport the `\"node\"` export condition for this to be `true`.",
          "text": "This can be used when authoring components to change behavior based on\nwhether or not the component is executing in an SSR context.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/is-server.ts",
            "line": 24,
            "moduleSpecifier": "lit-html/is-server.js"
          }
        ],
        "type": {
          "type": "literal",
          "value": false
        },
        "defaultValue": "false",
        "kindString": "Variable",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "isServer"
        }
      },
      {
        "name": "LitUnstable",
        "comment": {
          "shortText": "Contains types that are part of the unstable debug API.",
          "text": "Everything in this API is not stable and may change or be removed in the future,\neven on patch releases.\n"
        },
        "children": [
          {
            "name": "DebugLog",
            "comment": {
              "shortText": "When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\nwe will emit 'lit-debug' events to window, with live details about the update and render\nlifecycle. These can be useful for writing debug tooling and visualizations.",
              "text": "Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\nmaking certain operations that are normally very cheap (like a no-op render) much slower,\nbecause we must copy data and dispatch events.\n"
            },
            "children": [
              {
                "name": "BeginRender",
                "children": [
                  {
                    "name": "container",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 57,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "HTMLElement",
                          "package": "typescript",
                          "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                        },
                        {
                          "type": "reference",
                          "name": "DocumentFragment",
                          "package": "typescript",
                          "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.BeginRender.container"
                    }
                  },
                  {
                    "name": "id",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 55,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.BeginRender.id"
                    }
                  },
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 54,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "begin render"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.BeginRender.kind"
                    }
                  },
                  {
                    "name": "options",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 58,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.BeginRender.options"
                    }
                  },
                  {
                    "name": "part",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 59,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "ChildPart",
                          "package": "lit-html",
                          "location": {
                            "page": "custom-directives",
                            "anchor": "ChildPart"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.BeginRender.part"
                    }
                  },
                  {
                    "name": "value",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 56,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.BeginRender.value"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 53,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.BeginRender"
                }
              },
              {
                "name": "CommitAttribute",
                "children": [
                  {
                    "name": "element",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 139,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitAttribute.element"
                    }
                  },
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 138,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "commit attribute"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitAttribute.kind"
                    }
                  },
                  {
                    "name": "name",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 140,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitAttribute.name"
                    }
                  },
                  {
                    "name": "options",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 142,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitAttribute.options"
                    }
                  },
                  {
                    "name": "value",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 141,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitAttribute.value"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 137,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.CommitAttribute"
                }
              },
              {
                "name": "CommitBooleanAttribute",
                "children": [
                  {
                    "name": "element",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 155,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitBooleanAttribute.element"
                    }
                  },
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 154,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "commit boolean attribute"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitBooleanAttribute.kind"
                    }
                  },
                  {
                    "name": "name",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 156,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitBooleanAttribute.name"
                    }
                  },
                  {
                    "name": "options",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 158,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitBooleanAttribute.options"
                    }
                  },
                  {
                    "name": "value",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 157,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitBooleanAttribute.value"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 153,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.CommitBooleanAttribute"
                }
              },
              {
                "name": "CommitEventListener",
                "children": [
                  {
                    "name": "addListener",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 171,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitEventListener.addListener"
                    }
                  },
                  {
                    "name": "element",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 163,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitEventListener.element"
                    }
                  },
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 162,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "commit event listener"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitEventListener.kind"
                    }
                  },
                  {
                    "name": "name",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 164,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitEventListener.name"
                    }
                  },
                  {
                    "name": "oldListener",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 166,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitEventListener.oldListener"
                    }
                  },
                  {
                    "name": "options",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 167,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitEventListener.options"
                    }
                  },
                  {
                    "name": "removeListener",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 169,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitEventListener.removeListener"
                    }
                  },
                  {
                    "name": "value",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 165,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitEventListener.value"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 161,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.CommitEventListener"
                }
              },
              {
                "name": "CommitNode",
                "children": [
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 130,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "commit node"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitNode.kind"
                    }
                  },
                  {
                    "name": "options",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 134,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitNode.options"
                    }
                  },
                  {
                    "name": "parent",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 132,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "Disconnectable",
                          "package": "lit-html",
                          "location": {
                            "page": "misc",
                            "anchor": "Disconnectable"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitNode.parent"
                    }
                  },
                  {
                    "name": "start",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 131,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Node",
                      "package": "typescript"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitNode.start"
                    }
                  },
                  {
                    "name": "value",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 133,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Node",
                      "package": "typescript"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitNode.value"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 129,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.CommitNode"
                }
              },
              {
                "name": "CommitNothingToChildEntry",
                "children": [
                  {
                    "name": "end",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 117,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "reference",
                          "name": "ChildNode",
                          "package": "typescript"
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitNothingToChildEntry.end"
                    }
                  },
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 115,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "commit nothing to child"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitNothingToChildEntry.kind"
                    }
                  },
                  {
                    "name": "options",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 119,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitNothingToChildEntry.options"
                    }
                  },
                  {
                    "name": "parent",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 118,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "Disconnectable",
                          "package": "lit-html",
                          "location": {
                            "page": "misc",
                            "anchor": "Disconnectable"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitNothingToChildEntry.parent"
                    }
                  },
                  {
                    "name": "start",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 116,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "ChildNode",
                      "package": "typescript"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitNothingToChildEntry.start"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 114,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.CommitNothingToChildEntry"
                }
              },
              {
                "name": "CommitProperty",
                "children": [
                  {
                    "name": "element",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 147,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitProperty.element"
                    }
                  },
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 146,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "commit property"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitProperty.kind"
                    }
                  },
                  {
                    "name": "name",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 148,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitProperty.name"
                    }
                  },
                  {
                    "name": "options",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 150,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitProperty.options"
                    }
                  },
                  {
                    "name": "value",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 149,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitProperty.value"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 145,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.CommitProperty"
                }
              },
              {
                "name": "CommitText",
                "children": [
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 123,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "commit text"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitText.kind"
                    }
                  },
                  {
                    "name": "node",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 124,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Text",
                      "package": "typescript"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitText.node"
                    }
                  },
                  {
                    "name": "options",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 126,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitText.options"
                    }
                  },
                  {
                    "name": "value",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 125,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitText.value"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 122,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.CommitText"
                }
              },
              {
                "name": "CommitToElementBinding",
                "children": [
                  {
                    "name": "element",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 176,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Element",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/Element"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitToElementBinding.element"
                    }
                  },
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 175,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "commit to element binding"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitToElementBinding.kind"
                    }
                  },
                  {
                    "name": "options",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 178,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitToElementBinding.options"
                    }
                  },
                  {
                    "name": "value",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 177,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.CommitToElementBinding.value"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 174,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.CommitToElementBinding"
                }
              },
              {
                "name": "EndRender",
                "children": [
                  {
                    "name": "container",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 65,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "HTMLElement",
                          "package": "typescript",
                          "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
                        },
                        {
                          "type": "reference",
                          "name": "DocumentFragment",
                          "package": "typescript",
                          "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment"
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.EndRender.container"
                    }
                  },
                  {
                    "name": "id",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 63,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.EndRender.id"
                    }
                  },
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 62,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "end render"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.EndRender.kind"
                    }
                  },
                  {
                    "name": "options",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 66,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.EndRender.options"
                    }
                  },
                  {
                    "name": "part",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 67,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "ChildPart",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ChildPart"
                      }
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.EndRender.part"
                    }
                  },
                  {
                    "name": "value",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 64,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.EndRender.value"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 61,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.EndRender"
                }
              },
              {
                "name": "SetPartValue",
                "children": [
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 96,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "set part"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.SetPartValue.kind"
                    }
                  },
                  {
                    "name": "part",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 97,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Part",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "Part"
                      }
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.SetPartValue.part"
                    }
                  },
                  {
                    "name": "templateInstance",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 101,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "TemplateInstance",
                      "package": "lit-html",
                      "location": {
                        "page": "misc",
                        "anchor": "TemplateInstance"
                      }
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.SetPartValue.templateInstance"
                    }
                  },
                  {
                    "name": "value",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 98,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.SetPartValue.value"
                    }
                  },
                  {
                    "name": "valueIndex",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 99,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.SetPartValue.valueIndex"
                    }
                  },
                  {
                    "name": "values",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 100,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.SetPartValue.values"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 95,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.SetPartValue"
                }
              },
              {
                "name": "TemplateInstantiated",
                "children": [
                  {
                    "name": "fragment",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 74,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Node",
                      "package": "typescript"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateInstantiated.fragment"
                    }
                  },
                  {
                    "name": "instance",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 72,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "TemplateInstance",
                      "package": "lit-html",
                      "location": {
                        "page": "misc",
                        "anchor": "TemplateInstance"
                      }
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateInstantiated.instance"
                    }
                  },
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 70,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "template instantiated"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateInstantiated.kind"
                    }
                  },
                  {
                    "name": "options",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 73,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateInstantiated.options"
                    }
                  },
                  {
                    "name": "parts",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 75,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reference",
                            "name": "Part",
                            "package": "lit-html",
                            "location": {
                              "page": "custom-directives",
                              "anchor": "Part"
                            }
                          }
                        ]
                      }
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateInstantiated.parts"
                    }
                  },
                  {
                    "name": "template",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 71,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "Template",
                          "package": "lit-html"
                        },
                        {
                          "type": "reference",
                          "name": "CompiledTemplate",
                          "package": "lit-html",
                          "location": {
                            "page": "misc",
                            "anchor": "CompiledTemplate"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateInstantiated.template"
                    }
                  },
                  {
                    "name": "values",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 76,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateInstantiated.values"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 69,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.TemplateInstantiated"
                }
              },
              {
                "name": "TemplateInstantiatedAndUpdated",
                "children": [
                  {
                    "name": "fragment",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 83,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Node",
                      "package": "typescript"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateInstantiatedAndUpdated.fragment"
                    }
                  },
                  {
                    "name": "instance",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 81,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "TemplateInstance",
                      "package": "lit-html",
                      "location": {
                        "page": "misc",
                        "anchor": "TemplateInstance"
                      }
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateInstantiatedAndUpdated.instance"
                    }
                  },
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 79,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "template instantiated and updated"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateInstantiatedAndUpdated.kind"
                    }
                  },
                  {
                    "name": "options",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 82,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateInstantiatedAndUpdated.options"
                    }
                  },
                  {
                    "name": "parts",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 84,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reference",
                            "name": "Part",
                            "package": "lit-html",
                            "location": {
                              "page": "custom-directives",
                              "anchor": "Part"
                            }
                          }
                        ]
                      }
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateInstantiatedAndUpdated.parts"
                    }
                  },
                  {
                    "name": "template",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 80,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "Template",
                          "package": "lit-html"
                        },
                        {
                          "type": "reference",
                          "name": "CompiledTemplate",
                          "package": "lit-html",
                          "location": {
                            "page": "misc",
                            "anchor": "CompiledTemplate"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateInstantiatedAndUpdated.template"
                    }
                  },
                  {
                    "name": "values",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 85,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateInstantiatedAndUpdated.values"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 78,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.TemplateInstantiatedAndUpdated"
                }
              },
              {
                "name": "TemplatePrep",
                "children": [
                  {
                    "name": "clonableTemplate",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 50,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "HTMLTemplateElement",
                      "package": "typescript",
                      "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplatePrep.clonableTemplate"
                    }
                  },
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 47,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "template prep"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplatePrep.kind"
                    }
                  },
                  {
                    "name": "parts",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 51,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "name": "TemplatePart",
                        "package": "lit-html"
                      }
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplatePrep.parts"
                    }
                  },
                  {
                    "name": "strings",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 49,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "TemplateStringsArray",
                      "package": "typescript"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplatePrep.strings"
                    }
                  },
                  {
                    "name": "template",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 48,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "Template",
                      "package": "lit-html"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplatePrep.template"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 46,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.TemplatePrep"
                }
              },
              {
                "name": "TemplateUpdating",
                "children": [
                  {
                    "name": "instance",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 90,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "reference",
                      "name": "TemplateInstance",
                      "package": "lit-html",
                      "location": {
                        "page": "misc",
                        "anchor": "TemplateInstance"
                      }
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateUpdating.instance"
                    }
                  },
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 88,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "template updating"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateUpdating.kind"
                    }
                  },
                  {
                    "name": "options",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 91,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "undefined"
                        },
                        {
                          "type": "reference",
                          "name": "RenderOptions",
                          "package": "lit-html",
                          "location": {
                            "page": "LitElement",
                            "anchor": "RenderOptions"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateUpdating.options"
                    }
                  },
                  {
                    "name": "parts",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 92,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reference",
                            "name": "Part",
                            "package": "lit-html",
                            "location": {
                              "page": "custom-directives",
                              "anchor": "Part"
                            }
                          }
                        ]
                      }
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateUpdating.parts"
                    }
                  },
                  {
                    "name": "template",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 89,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "reference",
                          "name": "Template",
                          "package": "lit-html"
                        },
                        {
                          "type": "reference",
                          "name": "CompiledTemplate",
                          "package": "lit-html",
                          "location": {
                            "page": "misc",
                            "anchor": "CompiledTemplate"
                          }
                        }
                      ]
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateUpdating.template"
                    }
                  },
                  {
                    "name": "values",
                    "sources": [
                      {
                        "fileName": "packages/lit-html/src/lit-html.ts",
                        "line": 93,
                        "moduleSpecifier": "lit-html/lit-html.js"
                      }
                    ],
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "LitUnstable.DebugLog.TemplateUpdating.values"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 87,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.TemplateUpdating"
                }
              },
              {
                "name": "CommitPartEntry",
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 104,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "CommitNothingToChildEntry",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.CommitNothingToChildEntry",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.CommitNothingToChildEntry"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "CommitText",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.CommitText",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.CommitText"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "CommitNode",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.CommitNode",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.CommitNode"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "CommitAttribute",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.CommitAttribute",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.CommitAttribute"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "CommitProperty",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.CommitProperty",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.CommitProperty"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "CommitBooleanAttribute",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.CommitBooleanAttribute",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.CommitBooleanAttribute"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "CommitEventListener",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.CommitEventListener",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.CommitEventListener"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "CommitToElementBinding",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.CommitToElementBinding",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.CommitToElementBinding"
                      }
                    }
                  ]
                },
                "kindString": "Type alias",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.CommitPartEntry"
                }
              },
              {
                "name": "Entry",
                "sources": [
                  {
                    "fileName": "packages/lit-html/src/lit-html.ts",
                    "line": 37,
                    "moduleSpecifier": "lit-html/lit-html.js"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "TemplatePrep",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.TemplatePrep",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.TemplatePrep"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "TemplateInstantiated",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.TemplateInstantiated",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.TemplateInstantiated"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "TemplateInstantiatedAndUpdated",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.TemplateInstantiatedAndUpdated",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.TemplateInstantiatedAndUpdated"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "TemplateUpdating",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.TemplateUpdating",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.TemplateUpdating"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "BeginRender",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.BeginRender",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.BeginRender"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "EndRender",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.EndRender",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.EndRender"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "CommitPartEntry",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.CommitPartEntry",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.CommitPartEntry"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "SetPartValue",
                      "package": "lit-html",
                      "qualifiedName": "LitUnstable.DebugLog.SetPartValue",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.SetPartValue"
                      }
                    }
                  ]
                },
                "kindString": "Type alias",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "LitUnstable.DebugLog.Entry"
                }
              }
            ],
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 36,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "kindString": "Namespace",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "LitUnstable.DebugLog"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 25,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "kindString": "Namespace",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "LitUnstable"
        }
      },
      {
        "name": "notEqual",
        "comment": {
          "shortText": "Change function that returns true if `value` is different from `oldValue`.\nThis method is used as the default for a property's `hasChanged` function."
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 347,
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "signatures": [
          {
            "name": "notEqual",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                "line": 152
              }
            ],
            "parameters": [
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              },
              {
                "name": "old",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Function",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "notEqual"
        }
      },
      {
        "name": "ReactiveUnstable",
        "comment": {
          "shortText": "Contains types that are part of the unstable debug API.",
          "text": "Everything in this API is not stable and may change or be removed in the future,\neven on patch releases.\n"
        },
        "children": [
          {
            "name": "DebugLog",
            "comment": {
              "shortText": "When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\nwe will emit 'lit-debug' events to window, with live details about the update and render\nlifecycle. These can be useful for writing debug tooling and visualizations.",
              "text": "Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\nmaking certain operations that are normally very cheap (like a no-op render) much slower,\nbecause we must copy data and dispatch events.\n"
            },
            "children": [
              {
                "name": "Update",
                "children": [
                  {
                    "name": "kind",
                    "sources": [
                      {
                        "fileName": "packages/reactive-element/src/reactive-element.ts",
                        "line": 112,
                        "moduleSpecifier": "reactive-element/reactive-element.js"
                      }
                    ],
                    "type": {
                      "type": "literal",
                      "value": "update"
                    },
                    "kindString": "Property",
                    "entrypointSources": [
                      {
                        "fileName": "packages/lit/src/index.ts",
                        "line": 1,
                        "moduleSpecifier": "lit"
                      }
                    ],
                    "location": {
                      "page": "misc",
                      "anchor": "ReactiveUnstable.DebugLog.Update.kind"
                    }
                  }
                ],
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 111,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "kindString": "Interface",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "ReactiveUnstable.DebugLog.Update"
                }
              },
              {
                "name": "Entry",
                "sources": [
                  {
                    "fileName": "packages/reactive-element/src/reactive-element.ts",
                    "line": 110,
                    "moduleSpecifier": "reactive-element/reactive-element.js"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "Update",
                  "package": "@lit/reactive-element",
                  "qualifiedName": "ReactiveUnstable.DebugLog.Update",
                  "location": {
                    "page": "misc",
                    "anchor": "ReactiveUnstable.DebugLog.Update"
                  }
                },
                "kindString": "Type alias",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "ReactiveUnstable.DebugLog.Entry"
                }
              }
            ],
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 109,
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "kindString": "Namespace",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "ReactiveUnstable.DebugLog"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 98,
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "kindString": "Namespace",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "ReactiveUnstable"
        }
      },
      {
        "name": "TemplateInstance",
        "comment": {
          "shortText": "An updateable instance of a Template. Holds references to the Parts used to\nupdate the template instance."
        },
        "children": [
          {
            "name": "constructor",
            "sources": [
              {
                "fileName": "packages/lit-html/development/lit-html.d.ts",
                "line": 338
              }
            ],
            "signatures": [
              {
                "name": "new TemplateInstance",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                    "line": 338
                  }
                ],
                "parameters": [
                  {
                    "name": "template",
                    "type": {
                      "type": "reference",
                      "name": "Template",
                      "package": "lit-html"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "parent",
                    "type": {
                      "type": "reference",
                      "name": "ChildPart",
                      "package": "lit-html",
                      "location": {
                        "page": "custom-directives",
                        "anchor": "ChildPart"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "TemplateInstance",
                  "package": "lit-html",
                  "location": {
                    "page": "misc",
                    "anchor": "TemplateInstance"
                  }
                },
                "kindString": "Constructor signature"
              }
            ],
            "kindString": "Constructor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "TemplateInstance.constructor"
            }
          },
          {
            "name": "parentNode",
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1079,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Node",
              "package": "typescript"
            },
            "getSignature": {
              "name": "parentNode",
              "sources": [
                {
                  "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                  "line": 339
                }
              ],
              "type": {
                "type": "reference",
                "name": "Node",
                "package": "typescript"
              },
              "kindString": "Get signature"
            },
            "kindString": "Accessor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "TemplateInstance.parentNode"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1064,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "name": "Disconnectable",
            "package": "lit-html",
            "location": {
              "page": "misc",
              "anchor": "Disconnectable"
            }
          }
        ],
        "kindString": "Class",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "TemplateInstance"
        }
      },
      {
        "name": "Unstable",
        "comment": {
          "shortText": "Contains types that are part of the unstable debug API.",
          "text": "Everything in this API is not stable and may change or be removed in the future,\neven on patch releases.\n"
        },
        "children": [
          {
            "name": "DebugLog",
            "comment": {
              "shortText": "When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\nwe will emit 'lit-debug' events to window, with live details about the update and render\nlifecycle. These can be useful for writing debug tooling and visualizations.",
              "text": "Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\nmaking certain operations that are normally very cheap (like a no-op render) much slower,\nbecause we must copy data and dispatch events.\n"
            },
            "children": [
              {
                "name": "Entry",
                "sources": [
                  {
                    "fileName": "packages/lit-element/src/lit-element.ts",
                    "line": 76,
                    "moduleSpecifier": "lit-element/lit-element.js"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "name": "LitUnstable.DebugLog.Entry",
                      "package": "lit-html",
                      "location": {
                        "page": "misc",
                        "anchor": "LitUnstable.DebugLog.Entry"
                      }
                    },
                    {
                      "type": "reference",
                      "name": "ReactiveUnstable.DebugLog.Entry",
                      "package": "@lit/reactive-element",
                      "location": {
                        "page": "misc",
                        "anchor": "ReactiveUnstable.DebugLog.Entry"
                      }
                    }
                  ]
                },
                "kindString": "Type alias",
                "entrypointSources": [
                  {
                    "fileName": "packages/lit/src/index.ts",
                    "line": 1,
                    "moduleSpecifier": "lit"
                  }
                ],
                "location": {
                  "page": "misc",
                  "anchor": "Unstable.DebugLog.Entry"
                }
              }
            ],
            "sources": [
              {
                "fileName": "packages/lit-element/src/lit-element.ts",
                "line": 75,
                "moduleSpecifier": "lit-element/lit-element.js"
              }
            ],
            "kindString": "Namespace",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "Unstable.DebugLog"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-element/src/lit-element.ts",
            "line": 64,
            "moduleSpecifier": "lit-element/lit-element.js"
          }
        ],
        "kindString": "Namespace",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "Unstable"
        }
      },
      {
        "name": "CompiledTemplate",
        "children": [
          {
            "name": "el",
            "flags": {
              "isOptional": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 490,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "HTMLTemplateElement",
              "package": "typescript",
              "externalUrl": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLTemplateElement"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "CompiledTemplate.el"
            }
          },
          {
            "name": "h",
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 493,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "TrustedHTML",
              "package": "@types/trusted-types"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "CompiledTemplate.h"
            }
          },
          {
            "name": "parts",
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 856,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "name": "TemplatePart",
                "package": "lit-html"
              }
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "Omit.parts"
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "CompiledTemplate.parts"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 488,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "Template",
                "package": "lit-html"
              },
              {
                "type": "literal",
                "value": "el"
              }
            ],
            "name": "Omit",
            "package": "typescript"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "CompiledTemplate"
        },
        "heritage": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "Template",
                "package": "lit-html"
              },
              {
                "type": "literal",
                "value": "el"
              }
            ],
            "name": "Omit",
            "package": "typescript"
          }
        ]
      },
      {
        "name": "CompiledTemplateResult",
        "children": [
          {
            "name": "values",
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 485,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "unknown"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "CompiledTemplateResult.values"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 480,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "CompiledTemplateResult"
        }
      },
      {
        "name": "DirectiveParent",
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 647,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "DirectiveParent"
        }
      },
      {
        "name": "Disconnectable",
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1000,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "implementedBy": [
          {
            "type": "reference",
            "name": "AttributePart",
            "location": {
              "page": "custom-directives",
              "anchor": "AttributePart"
            }
          },
          {
            "type": "reference",
            "name": "ChildPart",
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart"
            }
          },
          {
            "type": "reference",
            "name": "Directive",
            "location": {
              "page": "custom-directives",
              "anchor": "Directive"
            }
          },
          {
            "type": "reference",
            "name": "ElementPart",
            "location": {
              "page": "custom-directives",
              "anchor": "ElementPart"
            }
          },
          {
            "type": "reference",
            "name": "TemplateInstance",
            "location": {
              "page": "misc",
              "anchor": "TemplateInstance"
            }
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "Disconnectable"
        }
      },
      {
        "name": "HasChanged",
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 339,
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "signatures": [
          {
            "name": "HasChanged",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                "line": 152
              }
            ],
            "parameters": [
              {
                "name": "value",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              },
              {
                "name": "old",
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Parameter"
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "kindString": "Call signature"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "HasChanged"
        }
      },
      {
        "name": "HTMLTemplateResult",
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 476,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "reference",
          "typeArguments": [
            {
              "type": "query",
              "queryType": {
                "type": "reference",
                "name": "HTML_RESULT",
                "package": "lit-html"
              }
            }
          ],
          "name": "TemplateResult",
          "package": "lit-html",
          "location": {
            "page": "templates",
            "anchor": "TemplateResult"
          }
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "HTMLTemplateResult"
        }
      },
      {
        "name": "Initializer",
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 373,
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "name": "__type",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                "line": 170
              }
            ],
            "signatures": [
              {
                "name": "__type",
                "parameters": [
                  {
                    "name": "element",
                    "type": {
                      "type": "reference",
                      "name": "ReactiveElement",
                      "package": "@lit/reactive-element",
                      "location": {
                        "page": "ReactiveElement",
                        "anchor": "ReactiveElement"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Type literal"
          }
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "Initializer"
        }
      },
      {
        "name": "PropertyValueMap",
        "comment": {
          "shortText": "Do not use, instead prefer [`PropertyValues`](/docs/v3/api/ReactiveElement/#PropertyValues)."
        },
        "children": [
          {
            "name": "delete",
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 294,
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "name": "delete",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                    "line": 148
                  }
                ],
                "typeParameter": [
                  {
                    "name": "K",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        {
                          "type": "intrinsic",
                          "name": "symbol"
                        }
                      ]
                    },
                    "kindString": "Type parameter"
                  }
                ],
                "parameters": [
                  {
                    "name": "k",
                    "type": {
                      "type": "reference",
                      "name": "K"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Map.delete"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Map.delete"
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "PropertyValueMap.delete"
            }
          },
          {
            "name": "get",
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 291,
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "name": "get",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                    "line": 145
                  }
                ],
                "typeParameter": [
                  {
                    "name": "K",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        {
                          "type": "intrinsic",
                          "name": "symbol"
                        }
                      ]
                    },
                    "kindString": "Type parameter"
                  }
                ],
                "parameters": [
                  {
                    "name": "k",
                    "type": {
                      "type": "reference",
                      "name": "K"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "union",
                  "types": [
                    {
                      "type": "intrinsic",
                      "name": "undefined"
                    },
                    {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "reference",
                        "name": "K"
                      },
                      "objectType": {
                        "type": "reference",
                        "name": "T"
                      }
                    }
                  ]
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Map.get"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Map.get"
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "PropertyValueMap.get"
            }
          },
          {
            "name": "has",
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 293,
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "name": "has",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                    "line": 147
                  }
                ],
                "typeParameter": [
                  {
                    "name": "K",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        {
                          "type": "intrinsic",
                          "name": "symbol"
                        }
                      ]
                    },
                    "kindString": "Type parameter"
                  }
                ],
                "parameters": [
                  {
                    "name": "k",
                    "type": {
                      "type": "reference",
                      "name": "K"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Map.has"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Map.has"
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "PropertyValueMap.has"
            }
          },
          {
            "name": "set",
            "sources": [
              {
                "fileName": "packages/reactive-element/src/reactive-element.ts",
                "line": 292,
                "moduleSpecifier": "reactive-element/reactive-element.js"
              }
            ],
            "signatures": [
              {
                "name": "set",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/reactive-element/development/reactive-element.d.ts",
                    "line": 146
                  }
                ],
                "typeParameter": [
                  {
                    "name": "K",
                    "type": {
                      "type": "union",
                      "types": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "intrinsic",
                          "name": "number"
                        },
                        {
                          "type": "intrinsic",
                          "name": "symbol"
                        }
                      ]
                    },
                    "kindString": "Type parameter"
                  }
                ],
                "parameters": [
                  {
                    "name": "key",
                    "type": {
                      "type": "reference",
                      "name": "K"
                    },
                    "kindString": "Parameter"
                  },
                  {
                    "name": "value",
                    "type": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "reference",
                        "name": "K"
                      },
                      "objectType": {
                        "type": "reference",
                        "name": "T"
                      }
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "T"
                    }
                  ],
                  "name": "PropertyValueMap",
                  "package": "@lit/reactive-element",
                  "location": {
                    "page": "misc",
                    "anchor": "PropertyValueMap"
                  }
                },
                "overwrites": {
                  "type": "reference",
                  "name": "Map.set"
                },
                "kindString": "Call signature"
              }
            ],
            "overwrites": {
              "type": "reference",
              "name": "Map.set"
            },
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "PropertyValueMap.set"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 290,
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "typeParameters": [
          {
            "name": "T",
            "kindString": "Type parameter"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "PropertyKey",
                "package": "typescript"
              },
              {
                "type": "intrinsic",
                "name": "unknown"
              }
            ],
            "name": "Map",
            "package": "typescript"
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "PropertyValueMap"
        },
        "heritage": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "PropertyKey",
                "package": "typescript"
              },
              {
                "type": "intrinsic",
                "name": "unknown"
              }
            ],
            "name": "Map",
            "package": "typescript"
          }
        ]
      },
      {
        "name": "RootPart",
        "comment": {
          "shortText": "A top-level `ChildPart` returned from `render` that manages the connected\nstate of `AsyncDirective`s created throughout the tree below it."
        },
        "children": [
          {
            "name": "options",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1207,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "undefined"
                },
                {
                  "type": "reference",
                  "name": "RenderOptions",
                  "package": "lit-html",
                  "location": {
                    "page": "LitElement",
                    "anchor": "RenderOptions"
                  }
                }
              ]
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "ChildPart.options",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart.options"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.options"
            }
          },
          {
            "name": "type",
            "flags": {
              "isReadonly": true
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1206,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "literal",
              "value": 2
            },
            "defaultValue": "2",
            "inheritedFrom": {
              "type": "reference",
              "name": "ChildPart.type",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart.type"
              }
            },
            "kindString": "Property",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.type"
            }
          },
          {
            "name": "endNode",
            "comment": {
              "shortText": "The part's trailing marker node, if any. See `.parentNode` for more\ninformation."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1314,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "Node",
                  "package": "typescript"
                }
              ]
            },
            "getSignature": {
              "name": "endNode",
              "comment": {
                "shortText": "The part's trailing marker node, if any. See `.parentNode` for more\ninformation."
              },
              "sources": [
                {
                  "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                  "line": 406
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "name": "Node",
                    "package": "typescript"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "ChildPart.endNode"
              },
              "kindString": "Get signature"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "ChildPart.endNode",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart.endNode"
              }
            },
            "kindString": "Accessor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.endNode"
            }
          },
          {
            "name": "parentNode",
            "comment": {
              "shortText": "The parent node into which the part renders its content.",
              "text": "A ChildPart's content consists of a range of adjacent child nodes of\n`.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n`.endNode`).\n- If both `.startNode` and `.endNode` are non-null, then the part's content\nconsists of all siblings between `.startNode` and `.endNode`, exclusively.\n- If `.startNode` is non-null but `.endNode` is null, then the part's\ncontent consists of all siblings following `.startNode`, up to and\nincluding the last child of `.parentNode`. If `.endNode` is non-null, then\n`.startNode` will always be non-null.\n- If both `.endNode` and `.startNode` are null, then the part's content\nconsists of all child nodes of `.parentNode`.\n"
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1287,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "reference",
              "name": "Node",
              "package": "typescript"
            },
            "getSignature": {
              "name": "parentNode",
              "comment": {
                "shortText": "The parent node into which the part renders its content.",
                "text": "A ChildPart's content consists of a range of adjacent child nodes of\n`.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n`.endNode`).\n- If both `.startNode` and `.endNode` are non-null, then the part's content\nconsists of all siblings between `.startNode` and `.endNode`, exclusively.\n- If `.startNode` is non-null but `.endNode` is null, then the part's\ncontent consists of all siblings following `.startNode`, up to and\nincluding the last child of `.parentNode`. If `.endNode` is non-null, then\n`.startNode` will always be non-null.\n- If both `.endNode` and `.startNode` are null, then the part's content\nconsists of all child nodes of `.parentNode`.\n"
              },
              "sources": [
                {
                  "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                  "line": 396
                }
              ],
              "type": {
                "type": "reference",
                "name": "Node",
                "package": "typescript"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "ChildPart.parentNode"
              },
              "kindString": "Get signature"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "ChildPart.parentNode",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart.parentNode"
              }
            },
            "kindString": "Accessor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.parentNode"
            }
          },
          {
            "name": "startNode",
            "comment": {
              "shortText": "The part's leading marker node, if any. See `.parentNode` for more\ninformation."
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1306,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "Node",
                  "package": "typescript"
                }
              ]
            },
            "getSignature": {
              "name": "startNode",
              "comment": {
                "shortText": "The part's leading marker node, if any. See `.parentNode` for more\ninformation."
              },
              "sources": [
                {
                  "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                  "line": 401
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "name": "Node",
                    "package": "typescript"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "ChildPart.startNode"
              },
              "kindString": "Get signature"
            },
            "inheritedFrom": {
              "type": "reference",
              "name": "ChildPart.startNode",
              "location": {
                "page": "custom-directives",
                "anchor": "ChildPart.startNode"
              }
            },
            "kindString": "Accessor",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.startNode"
            }
          },
          {
            "name": "setConnected",
            "comment": {
              "shortText": "Sets the connection state for `AsyncDirective`s contained within this root\nChildPart.",
              "text": "lit-html does not automatically monitor the connectedness of DOM rendered;\nas such, it is the responsibility of the caller to `render` to ensure that\n`part.setConnected(false)` is called before the part object is potentially\ndiscarded, to ensure that `AsyncDirective`s have a chance to dispose of\nany resources being held. If a `RootPart` that was previously\ndisconnected is subsequently re-connected (and its `AsyncDirective`s should\nre-connect), `setConnected(true)` should be called.\n"
            },
            "sources": [
              {
                "fileName": "packages/lit-html/src/lit-html.ts",
                "line": 1654,
                "moduleSpecifier": "lit-html/lit-html.js"
              }
            ],
            "signatures": [
              {
                "name": "setConnected",
                "sources": [
                  {
                    "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                    "line": 434
                  }
                ],
                "parameters": [
                  {
                    "name": "isConnected",
                    "comment": {
                      "shortText": "Whether directives within this tree should be connected\nor not"
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Method",
            "entrypointSources": [
              {
                "fileName": "packages/lit/src/index.ts",
                "line": 1,
                "moduleSpecifier": "lit"
              }
            ],
            "location": {
              "page": "misc",
              "anchor": "RootPart.setConnected"
            }
          }
        ],
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 1638,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "extendedTypes": [
          {
            "type": "reference",
            "name": "ChildPart",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart"
            }
          }
        ],
        "kindString": "Interface",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "RootPart"
        },
        "heritage": [
          {
            "type": "reference",
            "name": "ChildPart",
            "package": "lit-html",
            "location": {
              "page": "custom-directives",
              "anchor": "ChildPart"
            }
          }
        ]
      },
      {
        "name": "ValueSanitizer",
        "comment": {
          "blockTags": [
            {
              "tag": "@returns",
              "content": [
                {
                  "text": "The value to write to the DOM. Usually the same as the input value,\n    unless sanitization is needed."
                }
              ]
            }
          ],
          "shortText": "A function which can sanitize values that will be written to a specific kind\nof DOM sink.",
          "text": "See SanitizerFactory.\n"
        },
        "sources": [
          {
            "fileName": "packages/lit-html/src/lit-html.ts",
            "line": 297,
            "moduleSpecifier": "lit-html/lit-html.js"
          }
        ],
        "type": {
          "type": "reflection",
          "declaration": {
            "name": "__type",
            "sources": [
              {
                "fileName": "packages/lit-dev-api/api-data/lit-3/repo/packages/lit-html/development/lit-html.d.ts",
                "line": 176
              }
            ],
            "signatures": [
              {
                "name": "__type",
                "comment": {
                  "blockTags": [
                    {
                      "tag": "@returns",
                      "content": [
                        {
                          "text": "The value to write to the DOM. Usually the same as the input value,\n    unless sanitization is needed."
                        }
                      ]
                    }
                  ],
                  "shortText": "A function which can sanitize values that will be written to a specific kind\nof DOM sink.",
                  "text": "See SanitizerFactory.\n"
                },
                "parameters": [
                  {
                    "name": "value",
                    "comment": {
                      "shortText": "The value to sanitize. Will be the actual value passed into\n    the lit-html template literal, so this could be of any type."
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    },
                    "kindString": "Parameter"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "unknown"
                },
                "kindString": "Call signature"
              }
            ],
            "kindString": "Type literal"
          }
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "ValueSanitizer"
        }
      },
      {
        "name": "WarningKind",
        "comment": {
          "shortText": "A string representing one of the supported dev mode warning categories."
        },
        "sources": [
          {
            "fileName": "packages/reactive-element/src/reactive-element.ts",
            "line": 371,
            "moduleSpecifier": "reactive-element/reactive-element.js"
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "literal",
              "value": "change-in-update"
            },
            {
              "type": "literal",
              "value": "migration"
            }
          ]
        },
        "kindString": "Type alias",
        "entrypointSources": [
          {
            "fileName": "packages/lit/src/index.ts",
            "line": 1,
            "moduleSpecifier": "lit"
          }
        ],
        "location": {
          "page": "misc",
          "anchor": "WarningKind"
        }
      }
    ]
  }
]